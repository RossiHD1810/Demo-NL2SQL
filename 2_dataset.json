[
    {
        "question": "Quali venditori fanno parte del gruppo 'Top Performer'?",
        "answer": "SELECT descr_venditore FROM [bi].[AUTO_venditori] WHERE gruppo_venditori = 'Top Performer';"
    },
    {
        "question": "Mostrami i numeri dei contratti auto chiusi nel mese di marzo 2024.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND dt_chiusura_contratto >= '2024-03-01' AND dt_chiusura_contratto < '2024-04-01';"
    },
    {
        "question": "Elenca le auto (marca e modello) vendute al cliente 'Azienda Prova SRL' con un contratto che include la garanzia interna.",
        "answer": "SELECT v.marca_veicolo, v.modello_veicolo, c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE cli.descr_cliente = 'Azienda Prova SRL' AND c.codice_garanzia_interna_contratto <> 'ND';"
    },
    {
        "question": "Quante commesse di officina sono state aperte quest'anno in ogni sede?",
        "answer": "SELECT o.descr_officina, COUNT(c.id_commessa) AS NumeroCommesseAnnue FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE YEAR(c.dt_apertura_commessa) = YEAR(GETDATE()) GROUP BY o.descr_officina;"
    },
    {
        "question": "Qual è il valore totale dei ricambi venduti (non in omaggio) per la commessa 'COM5566'?",
        "answer": "SELECT SUM(r.imp_netto_riga_commessa) AS ValoreRicambi FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce WHERE c.nr_commessa = 'COM5566' AND v.gruppo_voce = 'Ricambi' AND r.is_omaggio_commessa = 0; -- Assumendo gruppo_voce 'Ricambi'"
    },
    {
        "question": "Quanto è costata la manodopera del tecnico 'Mario Rossi' sulla commessa 'COM7788'?",
        "answer": "SELECT SUM(l.costo_lavorazione) AS CostoManodoperaTecnico FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE e.descr_esecutore = 'Mario Rossi' AND c.nr_commessa = 'COM7788';"
    },
    {
        "question": "Qual è il margine generato (ricavo consuntivo - costo consuntivo) dal contratto '2023-GF-A12345'?",
        "answer": "SELECT SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS MargineContratto FROM [bi].[AUTO_contratti_redd] AS r JOIN [bi].[AUTO_contratti] AS c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.nr_contratto = '2023-GF-A12345';"
    },
    {
        "question": "Mostrami i contatti (nome e cognome o ragione sociale) nella provincia di Torino.",
        "answer": "SELECT COALESCE(ragione_sociale_contatto, nome_contatto + ' ' + cognome_contatto) AS Nominativo, email_contatto FROM [bi].[CONTT_contatti] WHERE provincia_contatto = 'TO';"
    },
    {
        "question": "Quali auto usate, presenti nella sede 'Milano Fiori', hanno più di 100.000 km?",
        "answer": "SELECT v.marca_veicolo, v.modello_veicolo, v.targa_veicolo, v.km_percorsi_veicolo FROM [bi].[AUTO_veicoli] AS v JOIN [bi].[AUTO_sedi] AS s ON v.ubicazione_attuale_veicolo = s.descr_sede -- Assumendo che ubicazione corrisponda alla descrizione della sede WHERE s.descr_sede = 'Milano Fiori' AND v.nuovo_usato_veicolo = 'Usato' AND v.km_percorsi_veicolo > 100000;"
    },
    {
        "question": "Qual è la media delle ore di presenza giornaliere dei tecnici (non accettatori) nell'ultimo mese?",
        "answer": "SELECT AVG(p.ore_presenza) AS MediaOrePresenzaGiornaliera FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE p.dt_presenza >= DATEADD(month, -1, GETDATE()) AND p.ore_presenza IS NOT NULL AND et.descr_tipo_esecutore LIKE '%Tecnico%' AND p.accettatore_presenza = 0; -- Adattare descr_tipo_esecutore se necessario"
    },
    {
        "question": "Quanti contratti ha aperto il venditore 'Luca Rossi' quest'anno?",
        "answer": "SELECT COUNT(c.id_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE v.descr_venditore = 'Luca Rossi' AND YEAR(c.dt_apertura_contratto) = YEAR(GETDATE());"
    },
    {
        "question": "Qual è il valore totale dei contratti per auto nuove nella sede di Roma?",
        "answer": "SELECT SUM(c.imp_netto_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE s.descr_sede = 'Roma' AND v.nuovo_usato_veicolo = 'Nuovo';"
    },
    {
        "question": "Mostrami le auto Fiat 500 vendute al cliente con codice fiscale 'VRDGPP80A01H501X'.",
        "answer": "SELECT v.targa_veicolo, v.versione_veicolo, c.dt_apertura_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE cli.codice_fiscale_cliente = 'VRDGPP80A01H501X' AND v.marca_veicolo = 'FIAT' AND v.modello_veicolo = '500';"
    },
    {
        "question": "Quali canali di vendita hanno generato contratti con finanziamento?",
        "answer": "SELECT DISTINCT cv.descr_canale_vendita FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_canali_vendita] AS cv ON c.id_canale_vendita = cv.id_canale_vendita WHERE c.has_finanziamento_contratto = 1;"
    },
    {
        "question": "Elenca i contratti aperti la scorsa settimana.",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto >= DATEADD(week, -1, GETDATE()) AND dt_apertura_contratto < GETDATE();"
    },
    {
        "question": "Qual è il tipo di contratto più comune per i clienti privati?",
        "answer": "SELECT TOP 1 ct.descr_tipo_contratto, COUNT(c.id_contratto) AS Frequenza FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE cli.tipo_cliente = 'Privato' GROUP BY ct.descr_tipo_contratto ORDER BY Frequenza DESC;"
    },
    {
        "question": "Trova le auto (targa) vendute con un importo netto superiore a 30000 euro ma senza permuta.",
        "answer": "SELECT v.targa_veicolo, c.imp_netto_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE c.imp_netto_contratto > 30000 AND c.count_permute_contratto = 0;"
    },
    {
        "question": "Quanti contratti sono stati segnalati da 'Segnalatore Prova'?",
        "answer": "SELECT COUNT(id_contratto) FROM [bi].[AUTO_contratti] WHERE segnalatore_contratto = 'Segnalatore Prova';"
    },
    {
        "question": "Mostra i contratti che hanno una garanzia interna 'Estesa' o 'Completa'.",
        "answer": "SELECT nr_contratto, garanzia_interna_contratto FROM [bi].[AUTO_contratti] WHERE garanzia_interna_contratto IN ('Estesa', 'Completa');"
    },
    {
        "question": "Qual è il valore medio di listino delle auto provenienti da 'Importazione Parallela'?",
        "answer": "SELECT AVG(c.imp_netto_listino_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE p.descr_provenienza = 'Importazione Parallela';"
    },
    {
        "question": "Elenca i 10 venditori con il maggior numero di contratti chiusi.",
        "answer": "SELECT TOP 10 v.descr_venditore, COUNT(c.id_contratto) AS ContrattiChiusi FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE c.status_contratto = 'Chiuso' GROUP BY v.descr_venditore ORDER BY ContrattiChiusi DESC;"
    },
    {
        "question": "Qual è l'importo medio finanziato per i contratti che includono anche un'assicurazione?",
        "answer": "SELECT AVG(imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND has_assicurazione_contratto = 1;"
    },
    {
        "question": "Trova le auto (targa e modello) associate a contratti ancora aperti dopo più di 90 giorni dalla data di apertura.",
        "answer": "SELECT v.targa_veicolo, v.modello_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE c.status_contratto <> 'Chiuso' AND DATEDIFF(day, c.dt_apertura_contratto, GETDATE()) > 90;"
    },
    {
        "question": "Quali tipi di vendita sono stati utilizzati per contratti senza permuta?",
        "answer": "SELECT DISTINCT tv.descr_tipo_vendita FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.count_permute_contratto = 0;"
    },
    {
        "question": "Mostra i clienti (nome o ragione sociale) che hanno acquistato auto sia nuove che usate.",
        "answer": "SELECT cli.descr_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo GROUP BY cli.descr_cliente HAVING COUNT(DISTINCT v.nuovo_usato_veicolo) > 1;"
    },
    {
        "question": "Qual è l'azienda con il maggior numero di contratti registrati?",
        "answer": "SELECT TOP 1 a.descr_azienda, COUNT(c.id_contratto) AS NumeroContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda GROUP BY a.descr_azienda ORDER BY NumeroContratti DESC;"
    },
    {
        "question": "Elenca i contratti che non hanno associato un preventivo.",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE id_preventivo IS NULL;"
    },
    {
        "question": "Qual è la provenienza più comune per le auto vendute con finanziamento?",
        "answer": "SELECT TOP 1 p.descr_provenienza, COUNT(c.id_contratto) AS Frequenza FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE c.has_finanziamento_contratto = 1 GROUP BY p.descr_provenienza ORDER BY Frequenza DESC;"
    },
    {
        "question": "Trova i contratti relativi ad auto con più di 150.000 km percorsi.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.km_percorsi_veicolo > 150000;"
    },
    {
        "question": "Mostra il numero di contratti per mese di apertura nell'anno corrente.",
        "answer": "SELECT MONTH(dt_apertura_contratto) AS Mese, COUNT(id_contratto) AS NumeroContratti FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) = YEAR(GETDATE()) GROUP BY MONTH(dt_apertura_contratto) ORDER BY Mese;"
    },
    {
        "question": "Qual è il costo consuntivo medio registrato nella vista di redditività?",
        "answer": "SELECT AVG(imp_costo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL;"
    },
    {
        "question": "Elenca i contratti dove il costo previsto dal venditore è diverso dal costo previsto generale.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti_redd] AS r JOIN [bi].[AUTO_contratti] AS c ON r.id_contratto_redd = c.id_contratto_redd WHERE r.imp_costo_previsto_venditore_redd <> r.imp_costo_previsto_redd AND r.imp_costo_previsto_venditore_redd IS NOT NULL AND r.imp_costo_previsto_redd IS NOT NULL;"
    },
    {
        "question": "Quali sono i tipi di costo/ricavo che hanno generato un margine negativo (costo consuntivo > ricavo consuntivo)?",
        "answer": "SELECT DISTINCT descr_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd > imp_ricavo_consuntivo_redd AND imp_costo_consuntivo_redd IS NOT NULL AND imp_ricavo_consuntivo_redd IS NOT NULL;"
    },
    {
        "question": "Mostrami il ricavo consuntivo totale per livello di margine 'Primo Margine'.",
        "answer": "SELECT SUM(imp_ricavo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE liv_margine_redd = '1'; -- Assumendo '1' per Primo Margine"
    },
    {
        "question": "Quali sono le voci di spesa (descrizione) più frequenti nella vista di redditività?",
        "answer": "SELECT TOP 10 descr_spesa_redd, COUNT(*) AS Frequenza FROM [bi].[AUTO_contratti_redd] WHERE descr_spesa_redd IS NOT NULL GROUP BY descr_spesa_redd ORDER BY Frequenza DESC;"
    },
    {
        "question": "Trova i contratti per cui non è stato registrato nessun costo consuntivo.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] c WHERE c.id_contratto_redd NOT IN (SELECT DISTINCT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL AND imp_costo_consuntivo_redd <> 0);"
    },
    {
        "question": "Qual è l'importo totale delle provvigioni registrate?",
        "answer": "SELECT SUM(imp_netto_provvigione_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd IS NOT NULL;"
    },
    {
        "question": "Mostra il margine previsto totale (ricavo previsto - costo previsto) per i contratti del 2023.",
        "answer": "SELECT SUM(ISNULL(r.imp_ricavo_previsto_redd, 0) - ISNULL(r.imp_costo_previsto_redd, 0)) AS MarginePrevisto2023 FROM [bi].[AUTO_contratti_redd] AS r JOIN [bi].[AUTO_contratti] AS c ON r.id_contratto_redd = c.id_contratto_redd WHERE YEAR(c.dt_apertura_contratto) = 2023;"
    },
    {
        "question": "Quali descrizioni di riga compaiono più spesso nella redditività?",
        "answer": "SELECT TOP 5 descr_riga_redd, COUNT(*) AS Frequenza FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd IS NOT NULL GROUP BY descr_riga_redd ORDER BY Frequenza DESC;"
    },
    {
        "question": "Elenca i contratti con un margine consuntivo superiore a 5000 euro.",
        "answer": "SELECT c.nr_contratto, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS Margine FROM [bi].[AUTO_contratti_redd] AS r JOIN [bi].[AUTO_contratti] AS c ON r.id_contratto_redd = c.id_contratto_redd GROUP BY c.nr_contratto HAVING SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) > 5000;"
    },
    {
        "question": "Qual è il costo medio previsto per i contratti senza finanziamento?",
        "answer": "SELECT AVG(r.imp_costo_previsto_redd) FROM [bi].[AUTO_contratti_redd] AS r JOIN [bi].[AUTO_contratti] AS c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.has_finanziamento_contratto = 0 AND r.imp_costo_previsto_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i 5 costi (descrizione) più elevati registrati a consuntivo.",
        "answer": "SELECT TOP 5 descr_costo_redd, MAX(imp_costo_consuntivo_redd) AS MaxCosto FROM [bi].[AUTO_contratti_redd] WHERE descr_costo_redd IS NOT NULL AND imp_costo_consuntivo_redd IS NOT NULL GROUP BY descr_costo_redd ORDER BY MaxCosto DESC;"
    },
    {
        "question": "Qual è la differenza media tra ricavo consuntivo e ricavo previsto?",
        "answer": "SELECT AVG(imp_ricavo_consuntivo_redd - imp_ricavo_previsto_redd) AS DiffMediaRicavo FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd IS NOT NULL AND imp_ricavo_previsto_redd IS NOT NULL;"
    },
    {
        "question": "Trova i contratti dove il margine consuntivo è positivo ma quello previsto era negativo.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN ( SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS MargineCons, SUM(ISNULL(imp_ricavo_previsto_redd, 0) - ISNULL(imp_costo_previsto_redd, 0)) AS MarginePrev FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd ) AS Margini ON c.id_contratto_redd = Margini.id_contratto_redd WHERE Margini.MargineCons > 0 AND Margini.MarginePrev < 0;"
    },
    {
        "question": "Quali livelli di margine hanno associato un costo consuntivo medio superiore a 1000 euro?",
        "answer": "SELECT liv_margine_redd, descr_margine_redd, AVG(imp_costo_consuntivo_redd) AS CostoMedio FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL GROUP BY liv_margine_redd, descr_margine_redd HAVING AVG(imp_costo_consuntivo_redd) > 1000;"
    },
    {
        "question": "Elenca le commesse di officina chiuse la settimana scorsa.",
        "answer": "SELECT nr_commessa, dt_chiusura_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa >= DATEADD(week, DATEDIFF(week, 0, GETDATE()) - 1, 0) AND dt_chiusura_commessa < DATEADD(week, DATEDIFF(week, 0, GETDATE()), 0);"
    },
    {
        "question": "Quali sono le auto (targa) gestite dall'accettatore 'Giovanni Verdi'?",
        "answer": "SELECT DISTINCT v.targa_veicolo_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE c.accettatore_commessa = 'Giovanni Verdi';"
    },
    {
        "question": "Conta il numero di commesse per ogni tipo (descrizione) nell'officina 'Service Car'.",
        "answer": "SELECT ct.descr_tipo_commessa, COUNT(c.id_commessa) AS NumeroCommesse FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE o.descr_officina = 'Service Car' GROUP BY ct.descr_tipo_commessa;"
    },
    {
        "question": "Qual è la data media di inizio lavori per le commesse aperte a Maggio?",
        "answer": "SELECT AVG(CAST(DATEDIFF(day, 0, dt_inizio_lavoro_commessa) AS FLOAT)) FROM [bi].[OFF_commesse] WHERE MONTH(dt_apertura_commessa) = 5 AND dt_inizio_lavoro_commessa IS NOT NULL; -- SQL Server needs conversion for AVG on dates"
    },
    {
        "question": "Trova le commesse con materiale di consumo superiore a 50 euro.",
        "answer": "SELECT nr_commessa, imp_netto_materiale_consumo_commessa FROM [bi].[OFF_commesse] WHERE imp_netto_materiale_consumo_commessa > 50;"
    },
    {
        "question": "Elenca le commesse per cui la data di consegna effettiva è successiva alla data prevista.",
        "answer": "SELECT nr_commessa, dt_previsione_consegna_commessa, dt_effettiva_consegna_commessa FROM [bi].[OFF_commesse] WHERE dt_effettiva_consegna_commessa > dt_previsione_consegna_commessa AND dt_effettiva_consegna_commessa IS NOT NULL AND dt_previsione_consegna_commessa IS NOT NULL;"
    },
    {
        "question": "Quali sono i clienti (descrizione) dell'officina associati a commesse di tipo 'Manutenzione Ordinaria'?",
        "answer": "SELECT DISTINCT cli.descr_cliente_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa = 'Manutenzione Ordinaria';"
    },
    {
        "question": "Mostra le commesse con codice ODL 'ODL123'.",
        "answer": "SELECT nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE codice_odl_commessa = 'ODL123';"
    },
    {
        "question": "Qual è l'anno con il maggior numero di commesse aperte?",
        "answer": "SELECT TOP 1 YEAR(dt_apertura_commessa) AS Anno, COUNT(id_commessa) AS NumeroCommesse FROM [bi].[OFF_commesse] GROUP BY YEAR(dt_apertura_commessa) ORDER BY NumeroCommesse DESC;"
    },
    {
        "question": "Trova le commesse relative a veicoli con telaio 'ZFA123...'.",
        "answer": "SELECT nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE telaio_commessa LIKE 'ZFA123%';"
    },
    {
        "question": "Quali sono le auto (targa) che hanno avuto inconvenienti di tipo 'Garanzia Cliente'?",
        "answer": "SELECT DISTINCT c.targa_veicolo FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_inconvenienti] AS i ON c.id_commessa = i.id_commessa WHERE i.tipo_carico_garanzia_inconveniente = 'Garanzia Cliente';"
    },
    {
        "question": "Mostra gli inconvenienti (descrizione breve) associati alla commessa 'COM987'.",
        "answer": "SELECT descr_breve_inconveniente, descr_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM987';"
    },
    {
        "question": "Quanti inconvenienti di gruppo 'Meccanica' ci sono stati?",
        "answer": "SELECT COUNT(id_inconveniente) FROM [bi].[OFF_commesse_inconvenienti] WHERE gruppo_inconveniente = 'Meccanica';"
    },
    {
        "question": "Elenca gli inconvenienti che non sono stati addebitati al cliente.",
        "answer": "SELECT id_inconveniente, descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_cliente_inconveniente <> 'Cliente'; -- O verificare valore specifico"
    },
    {
        "question": "Quali tipi di intervento sono associati agli inconvenienti della commessa 'COM1122'?",
        "answer": "SELECT DISTINCT ti.descr_tipo_intervento FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS ti ON i.id_tipo_intervento = ti.id_tipo_intervento JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM1122';"
    },
    {
        "question": "Mostrami le righe della commessa 'COM4455' che non sono omaggio.",
        "answer": "SELECT nr_riga_commessa, codice_articolo_commessa, qta_commessa, imp_netto_riga_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM4455' AND r.is_omaggio_commessa = 0;"
    },
    {
        "question": "Qual è il costo medio ponderato totale per la commessa 'COM3322'?",
        "answer": "SELECT SUM(imp_netto_costo_medio_ponderato_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM3322';"
    },
    {
        "question": "Elenca gli articoli (codice) usati in commesse di tipo 'Incidente'.",
        "answer": "SELECT DISTINCT r.codice_articolo_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse_tipi] AS ct ON r.codice_tipo_commessa = ct.codice_tipo_commessa WHERE ct.descr_tipo_commessa = 'Incidente' AND r.codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il valore totale delle righe fatturate come manodopera nella commessa 'COM9900'?",
        "answer": "SELECT SUM(r.imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM9900' AND r.gruppo_voce_commessa = 12; -- Assumendo 12 = Manodopera"
    },
    {
        "question": "Trova le righe con quantità superiore a 10 per la commessa 'COM1212'.",
        "answer": "SELECT nr_riga_commessa, codice_articolo_commessa, qta_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM1212' AND r.qta_commessa > 10;"
    },
    {
        "question": "Mostra il costo totale dei lavori esterni per la commessa 'COM3434'.",
        "answer": "SELECT SUM(imp_netto_costo_lavori_terzi_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM3434';"
    },
    {
        "question": "Quante ore di lavoro sono state fatturate in totale per la commessa 'COM5656'?",
        "answer": "SELECT SUM(tempo_fatt_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM5656' AND r.codice_umis_commessa = 'H';"
    },
    {
        "question": "Elenca le descrizioni delle voci usate nella commessa 'COM7878'.",
        "answer": "SELECT DISTINCT v.descr_voce FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM7878';"
    },
    {
        "question": "Qual è la percentuale media di addebito al cliente per le righe della commessa 'COM2323'?",
        "answer": "SELECT AVG(perc_addebito_cliente_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM2323' AND r.perc_addebito_cliente_commessa IS NOT NULL;"
    },
    {
        "question": "Trova le righe di commessa che hanno un costo ma valore fatturato zero (o nullo).",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_commessa > 0 AND (imp_netto_riga_commessa IS NULL OR imp_netto_riga_commessa = 0);"
    },
    {
        "question": "Quali tecnici hanno lavorato più di 8 ore in un singolo giorno la settimana scorsa?",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE l.dt_movimento_lavorazione >= DATEADD(week, -1, GETDATE()) AND l.ore_lavorazione > 8;"
    },
    {
        "question": "Mostra il costo totale della manodopera per tipo di intervento nell'officina 'Nord Service'.",
        "answer": "SELECT ti.descr_tipo_intervento, SUM(l.costo_lavorazione) AS CostoTotale FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_interventi_tipi] AS ti ON l.id_tipo_intervento = ti.id_tipo_intervento JOIN [bi].[OFF_officine] AS o ON l.id_officina = o.id_officina WHERE o.descr_officina = 'Nord Service' GROUP BY ti.descr_tipo_intervento;"
    },
    {
        "question": "Quali lavorazioni (descrizione riga) sono state eseguite dall'esecutore 'BNCLCU'?",
        "answer": "SELECT DISTINCT l.descr_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE e.codice_esecutore = 'BNCLCU';"
    },
    {
        "question": "Quante ore sono state registrate a tempario per la commessa 'COM6789'?",
        "answer": "SELECT SUM(ore_tempario_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM6789';"
    },
    {
        "question": "Trova le lavorazioni il cui costo orario implicito (costo / ore lavorate) è superiore a 50 euro.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione, (costo_lavorazione / NULLIF(ore_lavorazione, 0)) AS CostoOrarioImplicito FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione > 0 AND (costo_lavorazione / ore_lavorazione) > 50;"
    },
    {
        "question": "Quali sono le presenze registrate ieri per l'officina 'Sud Car'?",
        "answer": "SELECT e.descr_esecutore, p.ore_presenza FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_officine] AS o ON p.id_officina = o.id_officina JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE o.descr_officina = 'Sud Car' AND p.dt_presenza = CONVERT(date, DATEADD(day, -1, GETDATE()));"
    },
    {
        "question": "Conta il numero totale di ore di ferie usufruite da tutti i tecnici nell'anno corrente.",
        "answer": "SELECT SUM(ore_ferie_presenza) FROM [bi].[OFF_presenze] WHERE YEAR(dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Chi sono gli esecutori che hanno registrato ore non produttive oggi?",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE p.dt_presenza = CONVERT(date, GETDATE()) AND p.ore_nonprod_presenza > 0;"
    },
    {
        "question": "Qual è il costo totale degli straordinari pagati il mese scorso?",
        "answer": "SELECT SUM(p.ore_straordinarie_presenza * p.imp_costo_straordinario_presenza) FROM [bi].[OFF_presenze] AS p WHERE p.dt_presenza >= DATEADD(month, -1, DATEADD(day, 1-DAY(GETDATE()), GETDATE())) AND p.dt_presenza < DATEADD(day, 1-DAY(GETDATE()), GETDATE()) AND p.ore_straordinarie_presenza > 0;"
    },
    {
        "question": "Mostra i giorni in cui ci sono state assenze registrate per l'esecutore 'FRNLCA'.",
        "answer": "SELECT p.dt_presenza FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE e.codice_esecutore = 'FRNLCA' AND p.ore_assenza_presenza > 0;"
    },
    {
        "question": "Elenca i noleggi di auto con targa 'GF123ZZ'.",
        "answer": "SELECT id_riga_noleggio, dt_ritiro_noleggio, dt_consegna_noleggio FROM [bi].[OFF_noleggi] WHERE targa_noleggio = 'GF123ZZ';"
    },
    {
        "question": "Quanti noleggi a lungo termine sono attualmente attivi?",
        "answer": "SELECT COUNT(id_riga_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'S' AND dt_chiusura_noleggio IS NULL;"
    },
    {
        "question": "Qual è il costo medio giornaliero dei noleggi (costo veicolo / giorni fatturati)?",
        "answer": "SELECT AVG(costo_veicolo_noleggio / NULLIF(giorni_fatturati_noleggio, 0)) FROM [bi].[OFF_noleggi] WHERE giorni_fatturati_noleggio > 0;"
    },
    {
        "question": "Trova i noleggi associati alla commessa 'COM5000'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, dt_ritiro_noleggio FROM [bi].[OFF_noleggi] WHERE nr_commessa_noleggio = 'COM5000';"
    },
    {
        "question": "Mostra i noleggi con più di 100 km extra registrati.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, km_extra_noleggio FROM [bi].[OFF_noleggi] WHERE km_extra_noleggio > 100;"
    },
    {
        "question": "Mostrami i contatti con Partita IVA registrata nella provincia di Roma.",
        "answer": "SELECT ragione_sociale_contatto, partita_iva_contatto FROM [bi].[CONTT_contatti] WHERE provincia_contatto = 'RM' AND partita_iva_contatto IS NOT NULL;"
    },
    {
        "question": "Quanti contatti sono stati modificati nell'ultimo mese?",
        "answer": "SELECT COUNT(id_contatto) FROM [bi].[CONTT_contatti] WHERE dt_modifica_contatto >= DATEADD(month, -1, GETDATE());"
    },
    {
        "question": "Elenca i contatti di tipo 'Società di Persone'.",
        "answer": "SELECT ragione_sociale_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'SP'; -- Verificare codice per Società di Persone"
    },
    {
        "question": "Trova i contatti il cui cognome è 'Rossi' e risiedono a Milano.",
        "answer": "SELECT nome_contatto, cognome_contatto, indirizzo_contatto FROM [bi].[CONTT_contatti] WHERE cognome_contatto = 'Rossi' AND localita_contatto = 'Milano';"
    },
    {
        "question": "Quali contatti hanno lo stesso codice fiscale ma ID diverso?",
        "answer": "SELECT codice_fiscale_contatto, COUNT(id_contatto) AS NumOccorrenze FROM [bi].[CONTT_contatti] WHERE codice_fiscale_contatto IS NOT NULL GROUP BY codice_fiscale_contatto HAVING COUNT(id_contatto) > 1;"
    },
    {
        "question": "Quali clienti hanno acquistato un'auto e hanno avuto anche una commessa in officina nello stesso anno?",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] AS ac JOIN [bi].[AUTO_clienti] AS cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[OFF_commesse] AS oc ON cli.id_contatto = oc.id_cliente_officina -- Assumendo id_contatto come chiave comune JOIN [bi].[CONTT_contatti] as co on cli.id_contatto = co.id_contatto WHERE YEAR(ac.dt_apertura_contratto) = YEAR(oc.dt_apertura_commessa);"
    },
    {
        "question": "Mostra il valore totale dei contratti per i clienti che hanno avuto commesse con tipo intervento 'Garanzia Costruttore'.",
        "answer": "SELECT SUM(ac.imp_netto_contratto) FROM [bi].[AUTO_contratti] AS ac WHERE ac.id_cliente IN ( SELECT DISTINCT c.id_cliente_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_righe] AS r ON c.id_commessa = r.id_commessa JOIN [bi].[OFF_interventi_tipi] AS it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE it.descr_tipo_intervento = 'Garanzia Costruttore' );"
    },
    {
        "question": "Qual è il rapporto tra ore lavorate in officina e ore di presenza totali per il mese corrente?",
        "answer": "SELECT (SELECT SUM(ore_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE MONTH(dt_movimento_lavorazione) = MONTH(GETDATE()) AND YEAR(dt_movimento_lavorazione) = YEAR(GETDATE())) / NULLIF((SELECT SUM(ore_presenza) FROM [bi].[OFF_presenze] WHERE MONTH(dt_presenza) = MONTH(GETDATE()) AND YEAR(dt_presenza) = YEAR(GETDATE())), 0) AS RapportoOreLavoratePresenza;"
    },
    {
        "question": "Elenca i veicoli (targa) venduti quest'anno che non hanno ancora avuto accessi in officina.",
        "answer": "SELECT v.targa_veicolo FROM [bi].[AUTO_veicoli] AS v JOIN [bi].[AUTO_contratti] AS c ON v.id_veicolo = c.id_veicolo WHERE YEAR(c.dt_apertura_contratto) = YEAR(GETDATE()) AND v.targa_veicolo NOT IN (SELECT DISTINCT targa_veicolo_officina FROM [bi].[OFF_veicoli]);"
    },
    {
        "question": "Trova il margine medio percentuale per i contratti auto segnalati da agenti esterni.",
        "answer": "SELECT AVG( (ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) / NULLIF(ISNULL(r.imp_ricavo_consuntivo_redd, 0), 0) ) * 100 AS MargineMedioPercentuale FROM [bi].[AUTO_contratti_redd] AS r JOIN [bi].[AUTO_contratti] AS c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.segnalatore_contratto IS NOT NULL AND c.segnalatore_contratto <> '(Non definito)'; -- Assumendo che segnalatore non nullo e non ND indichi esterno"
    },
    {
        "question": "Quali sono le 5 combinazioni più frequenti di tipo contratto e canale di vendita?",
        "answer": "SELECT TOP 5 ct.descr_tipo_contratto, cv.descr_canale_vendita, COUNT(*) AS Frequenza FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_tipi] ct ON c.id_tipo_contratto = ct.id_tipo_contratto JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY ct.descr_tipo_contratto, cv.descr_canale_vendita ORDER BY Frequenza DESC;"
    },
    {
        "question": "Mostra le commesse di officina chiuse che hanno avuto un costo totale (lavorazioni + righe) superiore al valore netto del contratto auto associato (se esiste legame).",
        "answer": "WITH CostoCommessa AS ( SELECT id_commessa, SUM(ISNULL(CostoRicambi,0) + ISNULL(CostoManodopera,0)) AS CostoTotale FROM ( SELECT id_commessa, SUM(imp_netto_costo_commessa) AS CostoRicambi, 0 AS CostoManodopera FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa UNION ALL SELECT id_commessa, 0 AS CostoRicambi, SUM(costo_lavorazione) AS CostoManodopera FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa ) AS Costi GROUP BY id_commessa ) SELECT oc.nr_commessa, CC.CostoTotale, ac.imp_netto_contratto FROM [bi].[OFF_commesse] oc JOIN CostoCommessa CC ON oc.id_commessa = CC.id_commessa JOIN [bi].[AUTO_veicoli] av ON oc.telaio_commessa = av.telaio_veicolo JOIN [bi].[AUTO_contratti] ac ON av.id_veicolo = ac.id_veicolo -- Join approssimativo basato su telaio WHERE oc.dt_chiusura_commessa IS NOT NULL AND CC.CostoTotale > ac.imp_netto_contratto;"
    },
    {
        "question": "Qual è la percentuale di auto elettriche vendute sul totale delle auto vendute nell'ultimo anno?",
        "answer": "SELECT CAST(SUM(CASE WHEN v.alimentazione_veicolo = 'Elettrica' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(c.id_contratto) AS PercentualeElettriche FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.dt_apertura_contratto >= DATEADD(year, -1, GETDATE());"
    },
    {
        "question": "Elenca i tecnici che hanno lavorato sia su commesse di tipo 'Manutenzione' che di tipo 'Riparazione Guasto'.",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore JOIN [bi].[OFF_commesse_tipi] ct ON l.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa IN ('Manutenzione', 'Riparazione Guasto') GROUP BY e.descr_esecutore HAVING COUNT(DISTINCT ct.descr_tipo_commessa) = 2;"
    },
    {
        "question": "Mostra il trend mensile del margine consuntivo medio per contratto negli ultimi 12 mesi.",
        "answer": "SELECT YEAR(c.dt_chiusura_contratto) AS Anno, MONTH(c.dt_chiusura_contratto) AS Mese, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS MargineMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE c.dt_chiusura_contratto >= DATEADD(month, -12, GETDATE()) GROUP BY YEAR(c.dt_chiusura_contratto), MONTH(c.dt_chiusura_contratto) ORDER BY Anno, Mese;"
    },
    {
        "question": "Quali sono i contratti auto del cliente identificato dal codice master 'MASTER123'?",
        "answer": "SELECT c.nr_contratto, c.dt_apertura_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE cli.codice_master_cliente = 'MASTER123';"
    },
    {
        "question": "Mostrami il valore totale dei contratti gestiti dal venditore 'Anna Verdi'.",
        "answer": "SELECT SUM(c.imp_netto_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE v.descr_venditore = 'Anna Verdi';"
    },
    {
        "question": "Elenca le auto (targa, marca, modello) vendute tramite il canale 'Online' negli ultimi 6 mesi.",
        "answer": "SELECT v.targa_veicolo, v.marca_veicolo, v.modello_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_canali_vendita] AS cv ON c.id_canale_vendita = cv.id_canale_vendita WHERE cv.descr_canale_vendita = 'Online' AND c.dt_apertura_contratto >= DATEADD(month, -6, GETDATE());"
    },
    {
        "question": "Quante permute sono state fatte in totale nella sede 'Torino Centro'?",
        "answer": "SELECT SUM(c.count_permute_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede WHERE s.descr_sede = 'Torino Centro';"
    },
    {
        "question": "Qual è il valore medio delle permute registrate nei contratti con finanziamento?",
        "answer": "SELECT AVG(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti per veicoli 'Usato' che non hanno specificata una garanzia interna.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.nuovo_usato_veicolo = 'Usato' AND (c.codice_garanzia_interna_contratto = 'ND' OR c.codice_garanzia_interna_contratto IS NULL);"
    },
    {
        "question": "Quali tipi di contratto (descrizione) sono stati usati per vendite con importo superiore a 40.000 euro?",
        "answer": "SELECT DISTINCT ct.descr_tipo_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE c.imp_netto_contratto > 40000;"
    },
    {
        "question": "Mostrami i contratti aperti ma non ancora chiusi per l'azienda 'Autoteam 9'.",
        "answer": "SELECT c.nr_contratto, c.dt_apertura_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE c.status_contratto <> 'Chiuso' AND a.descr_azienda = 'Autoteam 9';"
    },
    {
        "question": "Qual è la provenienza più frequente delle auto vendute senza assicurazione?",
        "answer": "SELECT TOP 1 p.descr_provenienza, COUNT(*) AS Frequenza FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE c.has_assicurazione_contratto = 0 GROUP BY p.descr_provenienza ORDER BY Frequenza DESC;"
    },
    {
        "question": "Elenca i clienti (descrizione) che hanno stipulato più di un contratto nello stesso giorno.",
        "answer": "SELECT cli.descr_cliente, c.dt_apertura_contratto, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.descr_cliente, c.dt_apertura_contratto HAVING COUNT(c.id_contratto) > 1;"
    },
    {
        "question": "Qual è il valore medio di listino per le auto vendute da 'Mario Rossi'?",
        "answer": "SELECT AVG(c.imp_netto_listino_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE v.descr_venditore = 'Mario Rossi';"
    },
    {
        "question": "Trova i contratti associati a veicoli con alimentazione 'Ibrida'.",
        "answer": "SELECT c.nr_contratto, v.marca_veicolo, v.modello_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.alimentazione_veicolo = 'Ibrida';"
    },
    {
        "question": "Quanti contratti sono stati chiusi in ogni 'gruppo sede' nell'ultimo trimestre?",
        "answer": "SELECT s.gruppo_sede, COUNT(c.id_contratto) AS ContrattiChiusi FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede WHERE c.status_contratto = 'Chiuso' AND c.dt_chiusura_contratto >= DATEADD(quarter, -1, GETDATE()) GROUP BY s.gruppo_sede;"
    },
    {
        "question": "Mostrami i tipi di contatto associati a contratti con valore superiore a 50.000 euro.",
        "answer": "SELECT DISTINCT tc.descr_tipo_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contatti_tipi] AS tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.imp_netto_contratto > 50000;"
    },
    {
        "question": "Elenca i contratti senza valore di permuta registrato, pur avendo almeno una permuta indicata.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 0 AND (imp_netto_permute_contratto IS NULL OR imp_netto_permute_contratto = 0);"
    },
    {
        "question": "Qual è il tipo di vendita più comune per i contratti senza finanziamento?",
        "answer": "SELECT TOP 1 tv.descr_tipo_vendita, COUNT(c.id_contratto) AS Frequenza FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.has_finanziamento_contratto = 0 GROUP BY tv.descr_tipo_vendita ORDER BY Frequenza DESC;"
    },
    {
        "question": "Trova i veicoli (targa) la cui data di acquisto è successiva alla data di immatricolazione.",
        "answer": "SELECT targa_veicolo, dt_acquisto_veicolo, dt_immatricolazione_veicolo FROM [bi].[AUTO_veicoli] WHERE dt_acquisto_veicolo > dt_immatricolazione_veicolo;"
    },
    {
        "question": "Quanti clienti unici (codice master) ci sono per ogni tipo cliente?",
        "answer": "SELECT tipo_cliente, gruppo_tipo_cliente, COUNT(DISTINCT codice_master_cliente) AS ClientiUnici FROM [bi].[AUTO_clienti] GROUP BY tipo_cliente, gruppo_tipo_cliente;"
    },
    {
        "question": "Mostra i contratti associati a veicoli il cui stato è 'Venduto'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.status_veicolo = 'Venduto';"
    },
    {
        "question": "Qual è il valore totale dei contratti con garanzia interna 'ND' (Non Definita)?",
        "answer": "SELECT SUM(imp_netto_contratto) FROM [bi].[AUTO_contratti] WHERE codice_garanzia_interna_contratto = 'ND';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il costo previsto è maggiore del ricavo previsto.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd > imp_ricavo_previsto_redd;"
    },
    {
        "question": "Qual è il margine consuntivo medio per i contratti che hanno avuto costi aggiuntivi descritti come 'Trasporto'?",
        "answer": "SELECT AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] AS r WHERE r.descr_costo_redd LIKE '%Trasporto%' OR r.descr_spesa_redd LIKE '%Trasporto%';"
    },
    {
        "question": "Trova le voci di costo (descrizione) con indice contabile 1.",
        "answer": "SELECT DISTINCT descr_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd = 1;"
    },
    {
        "question": "Mostra il valore totale dei ricavi previsti dal venditore per tutti i contratti.",
        "answer": "SELECT SUM(imp_ricavo_previsto_venditore_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_venditore_redd IS NOT NULL;"
    },
    {
        "question": "Quali sono i 5 codici spesa/costo più frequenti nella vista redditività?",
        "answer": "SELECT TOP 5 codice_spesa_costo_redd, COUNT(*) AS Frequenza FROM [bi].[AUTO_contratti_redd] WHERE codice_spesa_costo_redd IS NOT NULL GROUP BY codice_spesa_costo_redd ORDER BY Frequenza DESC;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con un costo consuntivo ma senza descrizione costo associata.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL AND imp_costo_consuntivo_redd <> 0 AND (descr_costo_redd IS NULL OR descr_costo_redd = '');"
    },
    {
        "question": "Qual è il valore medio delle provvigioni per i contratti con ricavo consuntivo > 0?",
        "answer": "SELECT AVG(imp_netto_provvigione_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd > 0 AND imp_netto_provvigione_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il tipo totale è 'PARZIALE'.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd = 'PARZIALE';"
    },
    {
        "question": "Quali descrizioni di margine esistono per il livello margine 'Livello 2'?",
        "answer": "SELECT DISTINCT descr_margine_redd FROM [bi].[AUTO_contratti_redd] WHERE liv_margine_redd = '2';"
    },
    {
        "question": "Trova il costo consuntivo massimo associato alla descrizione riga 'Sconto Promozionale'.",
        "answer": "SELECT MAX(imp_costo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd = 'Sconto Promozionale';"
    },
    {
        "question": "Elenca le commesse di officina aperte prima del 2023 e ancora non chiuse.",
        "answer": "SELECT nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE dt_apertura_commessa < '2023-01-01' AND dt_chiusura_commessa IS NULL;"
    },
    {
        "question": "Qual è la marca di veicolo più frequente nelle commesse dell'officina 'Auto Service'?",
        "answer": "SELECT TOP 1 v.descr_marca_veicolo_officina, COUNT(c.id_commessa) AS Frequenza FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE o.descr_officina = 'Auto Service' GROUP BY v.descr_marca_veicolo_officina ORDER BY Frequenza DESC;"
    },
    {
        "question": "Mostra le commesse che non hanno una data di inizio lavori registrata.",
        "answer": "SELECT nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa IS NULL;"
    },
    {
        "question": "Quali clienti (officina) hanno avuto commesse gestite da più di un accettatore?",
        "answer": "SELECT cli.descr_cliente_officina, COUNT(DISTINCT c.accettatore_commessa) AS NumAccettatori FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina GROUP BY cli.descr_cliente_officina HAVING COUNT(DISTINCT c.accettatore_commessa) > 1;"
    },
    {
        "question": "Trova le commesse con spese per rifiuti superiori a 10 euro.",
        "answer": "SELECT nr_commessa, imp_netto_spese_rifiuti_commessa FROM [bi].[OFF_commesse] WHERE imp_netto_spese_rifiuti_commessa > 10;"
    },
    {
        "question": "Quante commesse sono state create oggi?",
        "answer": "SELECT COUNT(id_commessa) FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa = CONVERT(date, GETDATE());"
    },
    {
        "question": "Elenca le commesse per cui il veicolo era pronto prima della data prevista di consegna.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa < dt_previsione_consegna_commessa;"
    },
    {
        "question": "Quali sono i tipi di commessa associati ai clienti del gruppo 'Flotte'?",
        "answer": "SELECT DISTINCT ct.descr_tipo_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE cli.gruppo_cliente_officina = 'Flotte';"
    },
    {
        "question": "Mostra le commesse con codice Service Card 'SC999'.",
        "answer": "SELECT nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE codice_servicard_commessa = 'SC999';"
    },
    {
        "question": "Qual è la durata media (in giorni) delle commesse chiuse?",
        "answer": "SELECT AVG(DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa)) AS DurataMediaGiorni FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Quanti inconvenienti sono stati registrati per l'auto con targa 'FE456YY'?",
        "answer": "SELECT COUNT(i.id_inconveniente) FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.targa_veicolo_officina = 'FE456YY';"
    },
    {
        "question": "Mostra gli inconvenienti (descrizione breve) che sono stati caricati in garanzia.",
        "answer": "SELECT descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_garanzia_inconveniente IS NOT NULL AND tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Quali tipi di intervento sono stati associati a inconvenienti del gruppo 'Manutenzione Programmata'?",
        "answer": "SELECT DISTINCT ti.descr_tipo_intervento FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS ti ON i.id_tipo_intervento = ti.id_tipo_intervento WHERE i.gruppo_inconveniente = 'Manutenzione Programmata';"
    },
    {
        "question": "Trova gli inconvenienti la cui descrizione contiene la parola 'rumore'.",
        "answer": "SELECT id_inconveniente, descr_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_inconveniente LIKE '%rumore%';"
    },
    {
        "question": "Quanti inconvenienti di tipo 'Elettronico' sono stati registrati?",
        "answer": "SELECT COUNT(id_inconveniente) FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente = 'Elettronico';"
    },
    {
        "question": "Qual è la quantità media di articoli per riga nella commessa 'COM1111'?",
        "answer": "SELECT AVG(qta_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM1111' AND r.codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le righe con costo superiore a 200 euro nella commessa 'COM2222'.",
        "answer": "SELECT nr_riga_commessa, codice_articolo_commessa, imp_netto_costo_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM2222' AND r.imp_netto_costo_commessa > 200;"
    },
    {
        "question": "Qual è il prezzo unitario medio degli articoli usati nelle commesse chiuse a Giugno?",
        "answer": "SELECT AVG(r.imp_netto_prezzo_unitario_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa IS NOT NULL AND MONTH(c.dt_chiusura_commessa) = 6 AND r.codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Elenca i tipi di operazione effettuati nella commessa 'COM3333'.",
        "answer": "SELECT DISTINCT tipo_operazione_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM3333';"
    },
    {
        "question": "Trova le righe di commessa associate all'inconveniente con ID 'GF_12345_1'.",
        "answer": "SELECT nr_riga_commessa, codice_articolo_commessa, qta_commessa FROM [bi].[OFF_commesse_righe] WHERE id_inconveniente = 'GF_12345_1';"
    },
    {
        "question": "Qual è il costo totale delle lavorazioni nella commessa 'COM4444'?",
        "answer": "SELECT SUM(costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM4444';"
    },
    {
        "question": "Mostra le ore fatturate per l'intervento di tipo 'Tagliando' nella commessa 'COM5555'.",
        "answer": "SELECT SUM(l.ore_fatturate_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_interventi_tipi] AS it ON l.id_tipo_intervento = it.id_tipo_intervento JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM5555' AND it.descr_tipo_intervento = 'Tagliando';"
    },
    {
        "question": "Quali esecutori hanno lavorato sulla commessa con ID gestionale '98765'?",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE c.id_gestionale_commessa = 98765;"
    },
    {
        "question": "Trova le lavorazioni con ore a tempario diverse dalle ore lavorate.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_tempario_lavorazione <> ore_lavorazione;"
    },
    {
        "question": "Qual è la quota fatturato media per le lavorazioni eseguite dal gruppo voce 'Lavori Esterni'?",
        "answer": "SELECT AVG(quota_fatturato_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE gruppo_voce_lavorazione = 13; -- Assumendo 13 = Lavori Esterni"
    },
    {
        "question": "Qual è il costo orario medio degli esecutori del gruppo 'Meccanici'?",
        "answer": "SELECT AVG(p.imp_costo_orario_presenza) FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE et.gruppo_tipo_esecutore = 'Meccanici';"
    },
    {
        "question": "Mostra le date con ore di permesso registrate per l'esecutore 'RSM MRA'.",
        "answer": "SELECT p.dt_presenza FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE e.descr_esecutore = 'RSM MRA' AND p.ore_permessi_presenza > 0;"
    },
    {
        "question": "Quante ore teoriche totali c'erano la settimana scorsa per l'officina 'Service Point'?",
        "answer": "SELECT SUM(p.ore_teoriche_presenza) FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_officine] AS o ON p.id_officina = o.id_officina WHERE o.descr_officina = 'Service Point' AND p.dt_presenza >= DATEADD(week, -1, GETDATE()) AND p.dt_presenza < GETDATE();"
    },
    {
        "question": "Trova gli accettatori che hanno registrato presenze.",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE p.accettatore_presenza = 1;"
    },
    {
        "question": "Qual è il rapporto medio tra ore straordinarie e ore teoriche?",
        "answer": "SELECT AVG(ore_straordinarie_presenza / NULLIF(ore_teoriche_presenza, 0)) FROM [bi].[OFF_presenze] WHERE ore_teoriche_presenza > 0;"
    },
    {
        "question": "Elenca i noleggi fatturati nell'ultimo mese.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, imp_fatt_noleggio FROM [bi].[OFF_noleggi] WHERE dt_doc_noleggio >= DATEADD(month, -1, GETDATE());"
    },
    {
        "question": "Qual è la durata media (in giorni) dei noleggi chiusi?",
        "answer": "SELECT AVG(DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio)) FROM [bi].[OFF_noleggi] WHERE dt_chiusura_noleggio IS NOT NULL AND dt_ritiro_noleggio IS NOT NULL AND dt_consegna_noleggio IS NOT NULL;"
    },
    {
        "question": "Trova i noleggi con un costo veicolo superiore a 1000 euro.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, costo_veicolo_noleggio FROM [bi].[OFF_noleggi] WHERE costo_veicolo_noleggio > 1000;"
    },
    {
        "question": "Mostra i noleggi consegnati presso una sede diversa da quella di ritiro.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, sede_noleggio, sede_consegna_noleggio FROM [bi].[OFF_noleggi] WHERE sede_noleggio <> sede_consegna_noleggio;"
    },
    {
        "question": "Quanti km sono stati percorsi in media nei noleggi non a lungo termine?",
        "answer": "SELECT AVG(km_consegna_noleggio - km_ritiro_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'N' AND km_consegna_noleggio IS NOT NULL AND km_ritiro_noleggio IS NOT NULL;"
    },
    {
        "question": "Cerca i contatti email che finiscono con '@gmail.com'.",
        "answer": "SELECT id_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE email_contatto LIKE '%@gmail.com';"
    },
    {
        "question": "Quali sono i contatti che non hanno un telefono registrato?",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE telefono_contatto IS NULL OR telefono_contatto = '';"
    },
    {
        "question": "Mostra i contatti (codice master) modificati dopo il 1 Gennaio 2024.",
        "answer": "SELECT codice_master_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE dt_modifica_contatto > '2024-01-01';"
    },
    {
        "question": "Elenca i contatti con CAP '10128'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, indirizzo_contatto FROM [bi].[CONTT_contatti] WHERE cap_contatto = '10128';"
    },
    {
        "question": "Quanti contatti sono registrati per ogni nazione?",
        "answer": "SELECT nazione_contatto, COUNT(id_contatto) AS NumeroContatti FROM [bi].[CONTT_contatti] GROUP BY nazione_contatto ORDER BY NumeroContatti DESC;"
    },
    {
        "question": "Mostra i clienti (nome) che hanno comprato un'auto di marca 'Audi' e hanno avuto una commessa per la stessa marca.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] AS ac JOIN [bi].[AUTO_clienti] AS cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS av ON ac.id_veicolo = av.id_veicolo JOIN [bi].[OFF_commesse] AS oc ON cli.id_contatto = oc.id_cliente_officina JOIN [bi].[OFF_veicoli] AS ov ON oc.id_veicolo_officina = ov.id_veicolo_officina WHERE av.marca_veicolo = 'Audi' AND ov.descr_marca_veicolo_officina = 'Audi';"
    },
    {
        "question": "Qual è il rapporto tra il numero di contratti con finanziamento e il numero di commesse in officina per i clienti comuni?",
        "answer": "WITH ClientiComuni AS ( SELECT DISTINCT id_cliente FROM [bi].[AUTO_contratti] INTERSECT SELECT DISTINCT id_cliente_officina FROM [bi].[OFF_commesse] ) SELECT (SELECT CAST(COUNT(id_contratto) AS FLOAT) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND id_cliente IN (SELECT id_cliente FROM ClientiComuni)) / NULLIF((SELECT CAST(COUNT(id_commessa) AS FLOAT) FROM [bi].[OFF_commesse] WHERE id_cliente_officina IN (SELECT id_cliente FROM ClientiComuni)), 0) AS RapportoFinanziamentiCommesse;"
    },
    {
        "question": "Elenca i veicoli (targa) venduti con margine consuntivo negativo.",
        "answer": "SELECT DISTINCT v.targa_veicolo FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY v.targa_veicolo, r.id_contratto_redd HAVING SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) < 0;"
    },
    {
        "question": "Mostra i venditori che hanno venduto auto a clienti per cui è stata aperta una commessa in officina nello stesso mese della vendita.",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] AS ac JOIN [bi].[AUTO_venditori] AS v ON ac.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] AS cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[OFF_commesse] AS oc ON cli.id_contatto = oc.id_cliente_officina WHERE YEAR(ac.dt_apertura_contratto) = YEAR(oc.dt_apertura_commessa) AND MONTH(ac.dt_apertura_contratto) = MONTH(oc.dt_apertura_commessa);"
    },
    {
        "question": "Qual è il valore medio del contratto per le auto che hanno richiesto ore di straordinario in officina (per lo stesso veicolo)?",
        "answer": "SELECT AVG(ac.imp_netto_contratto) FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo WHERE av.targa_veicolo IN ( SELECT DISTINCT ov.targa_veicolo_officina FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_commesse_lavorazioni] l ON p.id_esecutore = l.id_esecutore AND p.dt_presenza = CONVERT(date, l.dt_movimento_lavorazione) JOIN [bi].[OFF_commesse] oc ON l.id_commessa = oc.id_commessa JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina WHERE p.ore_straordinarie_presenza > 0 );"
    },
    {
        "question": "Quali sono i 5 clienti con il valore medio di contratto più alto?",
        "answer": "SELECT TOP 5 cli.descr_cliente, AVG(c.imp_netto_contratto) AS ValoreMedioContratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.descr_cliente ORDER BY ValoreMedioContratto DESC;"
    },
    {
        "question": "Mostra i contratti di auto usate che hanno avuto una permuta.",
        "answer": "SELECT c.nr_contratto, v.marca_veicolo, v.modello_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.nuovo_usato_veicolo = 'Usato' AND c.count_permute_contratto > 0;"
    },
    {
        "question": "Qual è il valore totale dei finanziamenti concessi per contratti aperti nel 2022?",
        "answer": "SELECT SUM(imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND YEAR(dt_apertura_contratto) = 2022;"
    },
    {
        "question": "Elenca i venditori che appartengono al gruppo 'Junior'.",
        "answer": "SELECT descr_venditore FROM [bi].[AUTO_venditori] WHERE gruppo_venditori = 'Junior';"
    },
    {
        "question": "Trova i contratti relativi a veicoli immatricolati prima del 2018.",
        "answer": "SELECT c.nr_contratto, v.marca_veicolo, v.modello_veicolo, v.dt_immatricolazione_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.dt_immatricolazione_veicolo < '2018-01-01';"
    },
    {
        "question": "Quanti contratti sono stati aperti tramite il canale 'Concessionaria Fisica' per l'azienda 'Car Village'?",
        "answer": "SELECT COUNT(c.id_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_canali_vendita] AS cv ON c.id_canale_vendita = cv.id_canale_vendita JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE cv.descr_canale_vendita = 'Concessionaria Fisica' AND a.descr_azienda = 'Car Village';"
    },
    {
        "question": "Mostra i contratti che hanno un valore di permuta tra 5000 e 10000 euro.",
        "answer": "SELECT nr_contratto, imp_netto_permute_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_permute_contratto BETWEEN 5000 AND 10000;"
    },
    {
        "question": "Quali sedi hanno gestito contratti con garanzia interna specificata (non ND)?",
        "answer": "SELECT DISTINCT s.descr_sede FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede WHERE c.codice_garanzia_interna_contratto <> 'ND';"
    },
    {
        "question": "Trova i clienti (codice fiscale) che hanno contratti aperti e chiusi.",
        "answer": "SELECT cli.codice_fiscale_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.codice_fiscale_cliente HAVING COUNT(DISTINCT c.status_contratto) > 1;"
    },
    {
        "question": "Elenca i veicoli (targa) venduti con un importo di listino nullo o zero.",
        "answer": "SELECT v.targa_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE c.imp_netto_listino_contratto IS NULL OR c.imp_netto_listino_contratto = 0;"
    },
    {
        "question": "Qual è il valore medio dei contratti per tipo (descrizione)?",
        "answer": "SELECT ct.descr_tipo_contratto, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto GROUP BY ct.descr_tipo_contratto;"
    },
    {
        "question": "Mostra i contratti segnalati da qualcuno (segnalatore non nullo e non '(Non definito)').",
        "answer": "SELECT nr_contratto, segnalatore_contratto FROM [bi].[AUTO_contratti] WHERE segnalatore_contratto IS NOT NULL AND segnalatore_contratto <> '(Non definito)';"
    },
    {
        "question": "Quali sono i 3 canali di vendita con il valore medio di contratto più elevato?",
        "answer": "SELECT TOP 3 cv.descr_canale_vendita, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_canali_vendita] AS cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY cv.descr_canale_vendita ORDER BY ValoreMedio DESC;"
    },
    {
        "question": "Trova i contratti per veicoli la cui provenienza è 'Aziendale'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE p.descr_provenienza = 'Aziendale';"
    },
    {
        "question": "Elenca i clienti (descrizione) associati a contratti senza assicurazione né finanziamento.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE c.has_assicurazione_contratto = 0 AND c.has_finanziamento_contratto = 0;"
    },
    {
        "question": "Qual è l'importo totale dei contratti per ogni punto vendita della sede 'Milano Sud'?",
        "answer": "SELECT s.descr_punto_vendita, SUM(c.imp_netto_contratto) AS ValoreTotale FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede WHERE s.descr_sede = 'Milano Sud' GROUP BY s.descr_punto_vendita;"
    },
    {
        "question": "Mostra i contratti che hanno avuto almeno 2 permute.",
        "answer": "SELECT nr_contratto, count_permute_contratto FROM [bi].[AUTO_contratti] WHERE count_permute_contratto >= 2;"
    },
    {
        "question": "Quali tipi di contatto cliente sono associati ai contratti chiusi?",
        "answer": "SELECT DISTINCT tc.descr_tipo_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contatti_tipi] AS tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.status_contratto = 'Chiuso';"
    },
    {
        "question": "Trova i veicoli (telaio) venduti ma la cui data di uscita non è registrata.",
        "answer": "SELECT v.telaio_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE c.status_contratto = 'Chiuso' AND v.dt_uscita_veicolo IS NULL;"
    },
    {
        "question": "Qual è il valore massimo di contratto registrato per l'azienda 'Autoteam'?",
        "answer": "SELECT MAX(c.imp_netto_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE a.descr_azienda = 'Autoteam';"
    },
    {
        "question": "Elenca i contratti (ID Redd) con ricavo consuntivo superiore a 10000 euro.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd > 10000;"
    },
    {
        "question": "Qual è il costo previsto medio per tipo di costo/ricavo?",
        "answer": "SELECT descr_tipo_costo_ricavo_redd, AVG(imp_costo_previsto_redd) AS CostoPrevistoMedio FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NOT NULL GROUP BY descr_tipo_costo_ricavo_redd;"
    },
    {
        "question": "Trova le voci di spesa (descrizione) con un valore consuntivo negativo.",
        "answer": "SELECT DISTINCT descr_spesa_redd FROM [bi].[AUTO_contratti_redd] WHERE (imp_costo_consuntivo_redd < 0 OR imp_ricavo_consuntivo_redd < 0) AND codice_spesa_redd IS NOT NULL;"
    },
    {
        "question": "Mostra il valore totale dei costi previsti dai venditori.",
        "answer": "SELECT SUM(imp_costo_previsto_venditore_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_venditore_redd IS NOT NULL;"
    },
    {
        "question": "Quali sono i contratti (ID Redd) che appartengono al livello margine 'Margine Lordo'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Margine Lordo';"
    },
    {
        "question": "Elenca i contratti (ID Redd) con provvigioni nulle o zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd IS NULL OR imp_netto_provvigione_redd = 0;"
    },
    {
        "question": "Qual è la differenza totale tra ricavo consuntivo e costo consuntivo (margine totale)?",
        "answer": "SELECT SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd];"
    },
    {
        "question": "Mostra i tipi totali (parziale/totale) presenti nella vista redditività.",
        "answer": "SELECT DISTINCT tipo_totale_redd FROM [bi].[AUTO_contratti_redd];"
    },
    {
        "question": "Quali codici costo/spesa hanno un importo previsto ma non un importo consuntivo?",
        "answer": "SELECT codice_spesa_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE (imp_costo_previsto_redd IS NOT NULL OR imp_ricavo_previsto_redd IS NOT NULL) AND (imp_costo_consuntivo_redd IS NULL AND imp_ricavo_consuntivo_redd IS NULL);"
    },
    {
        "question": "Trova il contratto (ID Redd) con il maggior ricavo previsto dal venditore.",
        "answer": "SELECT TOP 1 id_contratto_redd, imp_ricavo_previsto_venditore_redd FROM [bi].[AUTO_contratti_redd] ORDER BY imp_ricavo_previsto_venditore_redd DESC;"
    },
    {
        "question": "Elenca le commesse officina per l'auto con targa 'GA111AA'.",
        "answer": "SELECT c.nr_commessa, c.dt_apertura_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.targa_veicolo_officina = 'GA111AA';"
    },
    {
        "question": "Qual è il numero medio di giorni tra la creazione della commessa e l'inizio dei lavori?",
        "answer": "SELECT AVG(DATEDIFF(day, dt_creazione_commessa, dt_inizio_lavoro_commessa)) FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa IS NOT NULL AND dt_inizio_lavoro_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse chiuse ma per cui il veicolo non risulta ancora pronto.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL AND dt_veicolo_pronto_commessa IS NULL;"
    },
    {
        "question": "Quali accettatori hanno gestito commesse per veicoli marca 'Mercedes-Benz'?",
        "answer": "SELECT DISTINCT c.accettatore_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_marca_veicolo_officina = 'Mercedes-Benz';"
    },
    {
        "question": "Trova le commesse con codice estensione garanzia 'ESTG01'.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE codice_estgar_commessa = 'ESTG01';"
    },
    {
        "question": "Quante commesse ha gestito ogni officina l'anno scorso?",
        "answer": "SELECT o.descr_officina, COUNT(c.id_commessa) AS NumeroCommesse FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE YEAR(c.dt_apertura_commessa) = YEAR(GETDATE()) - 1 GROUP BY o.descr_officina;"
    },
    {
        "question": "Elenca le commesse di tipo 'Preventivo' ancora aperte.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa = 'Preventivo' AND c.dt_chiusura_commessa IS NULL;"
    },
    {
        "question": "Quali sono i macro modelli di veicolo più frequenti nelle commesse chiuse?",
        "answer": "SELECT TOP 5 descr_macro_modello_commessa, COUNT(*) AS Frequenza FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL AND descr_macro_modello_commessa IS NOT NULL GROUP BY descr_macro_modello_commessa ORDER BY Frequenza DESC;"
    },
    {
        "question": "Mostra le commesse il cui cliente officina ha Partita IVA.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE partita_iva_cliente_commessa IS NOT NULL AND partita_iva_cliente_commessa <> '';"
    },
    {
        "question": "Trova le commesse la cui data di consegna effettiva è avvenuta nel weekend (sabato o domenica).",
        "answer": "SELECT nr_commessa, dt_effettiva_consegna_commessa FROM [bi].[OFF_commesse] WHERE DATEPART(weekday, dt_effettiva_consegna_commessa) IN (7, 1);"
    },
    {
        "question": "Quali inconvenienti sono stati segnalati per la commessa 'COM9988'?",
        "answer": "SELECT descr_breve_inconveniente, descr_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM9988';"
    },
    {
        "question": "Conta il numero di inconvenienti per tipo (descrittivo).",
        "answer": "SELECT tipo_inconveniente, COUNT(id_inconveniente) AS NumeroInconvenienti FROM [bi].[OFF_commesse_inconvenienti] GROUP BY tipo_inconveniente;"
    },
    {
        "question": "Elenca gli inconvenienti gestiti come 'Carico Cliente'.",
        "answer": "SELECT id_inconveniente, descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_cliente_inconveniente = 'Cliente';"
    },
    {
        "question": "Quali gruppi di inconveniente esistono nel sistema?",
        "answer": "SELECT DISTINCT gruppo_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE gruppo_inconveniente IS NOT NULL;"
    },
    {
        "question": "Trova gli ID delle commesse che hanno avuto almeno un inconveniente.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti];"
    },
    {
        "question": "Mostra il valore totale delle righe associate all'inconveniente 'GF_54321_2'.",
        "answer": "SELECT SUM(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] WHERE id_inconveniente = 'GF_54321_2';"
    },
    {
        "question": "Quanti articoli diversi sono stati usati nella commessa 'COM7766'?",
        "answer": "SELECT COUNT(DISTINCT codice_articolo_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM7766' AND r.codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il costo massimo registrato per un singolo articolo in una riga di commessa?",
        "answer": "SELECT MAX(imp_netto_costo_commessa) FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Elenca le righe di commessa relative a lavorazioni di tipo 'Diagnosi'.",
        "answer": "SELECT r.id_commessa, r.nr_riga_commessa, r.descr_riga_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce WHERE v.descr_voce LIKE '%Diagnosi%';"
    },
    {
        "question": "Trova le commesse che hanno righe con segno negativo.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE r.segno_riga_commessa < 0;"
    },
    {
        "question": "Qual è il costo totale delle lavorazioni esterne registrate?",
        "answer": "SELECT SUM(costo_lavoro_ext_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_lavoro_ext_lavorazione IS NOT NULL;"
    },
    {
        "question": "Mostra le lavorazioni (descrizione) eseguite dal tipo esecutore 'Apprendista'.",
        "answer": "SELECT DISTINCT l.descr_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori_tipi] AS et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE et.descr_tipo_esecutore = 'Apprendista';"
    },
    {
        "question": "Quante ore totali sono state lavorate su commesse di tipo 'Carrozzeria'?",
        "answer": "SELECT SUM(l.ore_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse_tipi] AS ct ON l.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa = 'Carrozzeria';"
    },
    {
        "question": "Elenca le lavorazioni con quota fatturato superiore al costo.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE quota_fatturato_lavorazione > costo_lavorazione;"
    },
    {
        "question": "Trova gli esecutori che hanno lavorato su più di 50 commesse diverse.",
        "answer": "SELECT e.descr_esecutore, COUNT(DISTINCT l.id_commessa) AS NumCommesse FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING COUNT(DISTINCT l.id_commessa) > 50;"
    },
    {
        "question": "Qual è il costo medio orario di presenza per gli esecutori che non sono accettatori?",
        "answer": "SELECT AVG(imp_costo_orario_presenza) FROM [bi].[OFF_presenze] WHERE accettatore_presenza = 0 AND imp_costo_orario_presenza IS NOT NULL;"
    },
    {
        "question": "Mostra le date in cui l'esecutore 'LCA BNC' ha avuto ore di ferie.",
        "answer": "SELECT p.dt_presenza FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE e.codice_esecutore = 'LCA BNC' AND p.ore_ferie_presenza > 0;"
    },
    {
        "question": "Qual è il totale delle ore teoriche per l'officina 'Top Car' nell'anno corrente?",
        "answer": "SELECT SUM(p.ore_teoriche_presenza) FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_officine] AS o ON p.id_officina = o.id_officina WHERE o.descr_officina = 'Top Car' AND YEAR(p.dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Trova i tecnici (descrittore) con più di 10 ore di straordinario registrate nell'ultimo mese.",
        "answer": "SELECT e.descr_esecutore, SUM(p.ore_straordinarie_presenza) AS TotStraordinario FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE p.dt_presenza >= DATEADD(month, -1, GETDATE()) GROUP BY e.descr_esecutore HAVING SUM(p.ore_straordinarie_presenza) > 10;"
    },
    {
        "question": "Quale giorno della settimana ha mediamente più ore di assenza registrate?",
        "answer": "SELECT TOP 1 DATENAME(weekday, dt_presenza) AS GiornoSettimana, AVG(ore_assenza_presenza) AS MediaOreAssenza FROM [bi].[OFF_presenze] WHERE ore_assenza_presenza > 0 GROUP BY DATENAME(weekday, dt_presenza), DATEPART(weekday, dt_presenza) ORDER BY MediaOreAssenza DESC;"
    },
    {
        "question": "Elenca i noleggi con fattura emessa (numero fattura non nullo).",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, nr_fatt_noleggio, dt_doc_noleggio FROM [bi].[OFF_noleggi] WHERE nr_fatt_noleggio IS NOT NULL;"
    },
    {
        "question": "Qual è il costo totale del carburante registrato per i noleggi?",
        "answer": "SELECT SUM(costo_carburante_noleggio) FROM [bi].[OFF_noleggi] WHERE costo_carburante_noleggio IS NOT NULL;"
    },
    {
        "question": "Trova i noleggi relativi a commesse chiuse.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] AS n JOIN [bi].[OFF_commesse] AS c ON n.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra i tipi di affidamento usati per i noleggi a lungo termine.",
        "answer": "SELECT DISTINCT descr_tipo_affidamento_noleggio FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'S';"
    },
    {
        "question": "Qual è la differenza media di km tra consegna e ritiro per i noleggi?",
        "answer": "SELECT AVG(km_consegna_noleggio - km_ritiro_noleggio) AS KmMediPercorsi FROM [bi].[OFF_noleggi] WHERE km_consegna_noleggio IS NOT NULL AND km_ritiro_noleggio IS NOT NULL;"
    },
    {
        "question": "Cerca i contatti con ragione sociale che contiene 'Trasporti'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE ragione_sociale_contatto LIKE '%Trasporti%';"
    },
    {
        "question": "Quali sono i CAP dei contatti localizzati a 'Bologna'?",
        "answer": "SELECT DISTINCT cap_contatto FROM [bi].[CONTT_contatti] WHERE localita_contatto = 'Bologna';"
    },
    {
        "question": "Mostra i contatti femminili (sesso = F).",
        "answer": "SELECT nome_contatto, cognome_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE sesso_contatto = 'F';"
    },
    {
        "question": "Elenca i contatti senza codice fiscale registrato.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE codice_fiscale_contatto IS NULL OR codice_fiscale_contatto = '';"
    },
    {
        "question": "Quali sono i domini email più usati dai contatti (es. gmail.com, outlook.com)?",
        "answer": "SELECT TOP 10 RIGHT(email_contatto, LEN(email_contatto) - CHARINDEX('@', email_contatto)) AS DominioEmail, COUNT(*) AS Frequenza FROM [bi].[CONTT_contatti] WHERE email_contatto LIKE '%@%' GROUP BY RIGHT(email_contatto, LEN(email_contatto) - CHARINDEX('@', email_contatto)) ORDER BY Frequenza DESC;"
    },
    {
        "question": "Trova i clienti che hanno acquistato un'auto nuova quest'anno e hanno avuto una commessa chiusa nello stesso periodo.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] AS ac JOIN [bi].[AUTO_clienti] AS cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS v ON ac.id_veicolo = v.id_veicolo JOIN [bi].[OFF_commesse] AS oc ON cli.id_contatto = oc.id_cliente_officina WHERE YEAR(ac.dt_apertura_contratto) = YEAR(GETDATE()) AND v.nuovo_usato_veicolo = 'Nuovo' AND oc.dt_chiusura_commessa IS NOT NULL AND YEAR(oc.dt_chiusura_commessa) = YEAR(GETDATE());"
    },
    {
        "question": "Qual è il valore medio del contratto auto per i clienti che hanno speso più di 500 euro in una singola commessa officina?",
        "answer": "WITH CostlyWorkshopCustomers AS ( SELECT DISTINCT oc.id_cliente_officina FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_commesse_righe] r ON oc.id_commessa = r.id_commessa GROUP BY oc.id_cliente_officina, oc.id_commessa HAVING SUM(r.imp_netto_riga_commessa) > 500 ) SELECT AVG(ac.imp_netto_contratto) FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE cli.id_contatto IN (SELECT id_cliente_officina FROM CostlyWorkshopCustomers);"
    },
    {
        "question": "Elenca le auto (targa) vendute con un contratto che ha un margine consuntivo superiore al 20% del ricavo consuntivo.",
        "answer": "SELECT v.targa_veicolo FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo JOIN ( SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0)) AS RicavoTot, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS MargineTot FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd ) AS r ON c.id_contratto_redd = r.id_contratto_redd WHERE r.RicavoTot > 0 AND (r.MargineTot / r.RicavoTot) > 0.20;"
    },
    {
        "question": "Mostra i clienti (codice fiscale) che hanno noleggiato un'auto ma non hanno mai acquistato un'auto.",
        "answer": "SELECT DISTINCT co.codice_fiscale_contatto FROM [bi].[OFF_noleggi] n JOIN [bi].[CONTT_contatti] co ON n.id_contatto = co.id_contatto WHERE co.codice_master_contatto NOT IN ( SELECT DISTINCT codice_master_cliente FROM [bi].[AUTO_clienti] );"
    },
    {
        "question": "Qual è il rapporto tra il costo totale della manodopera e il costo totale dei ricambi per le commesse di officina chiuse l'anno scorso?",
        "answer": "WITH CostSummary AS ( SELECT oc.id_commessa, SUM(CASE WHEN r.gruppo_voce_commessa = 5 THEN r.imp_netto_costo_commessa ELSE 0 END) AS CostoRicambi, SUM(CASE WHEN l.gruppo_voce_lavorazione = 12 THEN l.costo_lavorazione ELSE 0 END) AS CostoManodopera FROM [bi].[OFF_commesse] oc LEFT JOIN [bi].[OFF_commesse_righe] r ON oc.id_commessa = r.id_commessa LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON oc.id_commessa = l.id_commessa WHERE YEAR(oc.dt_chiusura_commessa) = YEAR(GETDATE()) - 1 GROUP BY oc.id_commessa ) SELECT SUM(CostoManodopera) / NULLIF(SUM(CostoRicambi), 0) AS RapportoCostoManodoperaRicambi FROM CostSummary;"
    },
    {
        "question": "Quali sono i tipi di vendita associati ai contratti con valore permuta superiore a 15000 euro?",
        "answer": "SELECT DISTINCT tv.descr_tipo_vendita FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.imp_netto_permute_contratto > 15000;"
    },
    {
        "question": "Mostra i 5 venditori con il valore medio di contratto più basso.",
        "answer": "SELECT TOP 5 v.descr_venditore, AVG(c.imp_netto_contratto) AS ValoreMedioContratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore GROUP BY v.descr_venditore ORDER BY ValoreMedioContratto ASC;"
    },
    {
        "question": "Elenca i contratti per auto elettriche aperti quest'anno.",
        "answer": "SELECT c.nr_contratto, c.dt_apertura_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.alimentazione_veicolo = 'Elettrica' AND YEAR(c.dt_apertura_contratto) = YEAR(GETDATE());"
    },
    {
        "question": "Quanti contratti sono stati stipulati presso il punto vendita 'Showroom Principale'?",
        "answer": "SELECT COUNT(c.id_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede WHERE s.descr_punto_vendita = 'Showroom Principale';"
    },
    {
        "question": "Qual è il valore totale dei contratti senza finanziamento né assicurazione?",
        "answer": "SELECT SUM(imp_netto_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 0 AND has_assicurazione_contratto = 0;"
    },
    {
        "question": "Trova i contratti con garanzia interna la cui descrizione contiene 'anni'.",
        "answer": "SELECT nr_contratto, garanzia_interna_contratto FROM [bi].[AUTO_contratti] WHERE garanzia_interna_contratto LIKE '%anni%';"
    },
    {
        "question": "Quali clienti (codice fiscale) hanno contratti associati a veicoli 'Commerciale Leggero'?",
        "answer": "SELECT DISTINCT cli.codice_fiscale_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.gruppo_tipo_veicolo = 'Commerciale Leggero'; -- Assumendo valore gruppo_tipo_veicolo"
    },
    {
        "question": "Mostra i contratti dell'azienda 'Gruppo Ferrari' chiusi ma senza data di chiusura registrata.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE c.status_contratto = 'Chiuso' AND c.dt_chiusura_contratto IS NULL AND a.descr_azienda = 'Gruppo Ferrari';"
    },
    {
        "question": "Qual è il valore massimo di permuta accettato per un contratto senza finanziamento?",
        "answer": "SELECT MAX(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 0 AND count_permute_contratto > 0;"
    },
    {
        "question": "Elenca le aree che hanno avuto contratti nel 2024.",
        "answer": "SELECT DISTINCT ar.descr_area FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_aree] AS ar ON c.id_area = ar.id_area WHERE YEAR(c.dt_apertura_contratto) = 2024;"
    },
    {
        "question": "Qual è l'importo medio del contratto per i clienti del gruppo 'Gold'?",
        "answer": "SELECT AVG(c.imp_netto_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE cli.gruppo_tipo_cliente = 'Gold';"
    },
    {
        "question": "Mostra i contratti per auto con più di 5 permute registrate.",
        "answer": "SELECT nr_contratto, count_permute_contratto FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 5;"
    },
    {
        "question": "Quali venditori appartengono al gruppo 'Senior' e hanno chiuso contratti quest'anno?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE v.gruppo_venditori = 'Senior' AND c.status_contratto = 'Chiuso' AND YEAR(c.dt_chiusura_contratto) = YEAR(GETDATE());"
    },
    {
        "question": "Trova i contratti la cui data di apertura è nel primo trimestre dell'anno.",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE DATEPART(quarter, dt_apertura_contratto) = 1;"
    },
    {
        "question": "Elenca i tipi di contatto cliente (descrizione) per contratti con assicurazione.",
        "answer": "SELECT DISTINCT tc.descr_tipo_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contatti_tipi] AS tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.has_assicurazione_contratto = 1;"
    },
    {
        "question": "Qual è il numero totale di contratti per veicoli non classificati come 'Nuovo' o 'Usato'?",
        "answer": "SELECT COUNT(c.id_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.nuovo_usato_veicolo NOT IN ('Nuovo', 'Usato');"
    },
    {
        "question": "Mostra i contratti relativi a veicoli con scadenza bollo nell'anno corrente.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE YEAR(v.dt_scadenza_bollo) = YEAR(GETDATE());"
    },
    {
        "question": "Quali tipi di vendita (descrizione) sono associati a contratti con valore finanziato superiore al valore del contratto?",
        "answer": "SELECT DISTINCT tv.descr_tipo_vendita FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.has_finanziamento_contratto = 1 AND c.imp_netto_finanziato_contratto > c.imp_netto_contratto;"
    },
    {
        "question": "Trova i veicoli (marca, modello) venduti tramite contratto ma che hanno note associate.",
        "answer": "SELECT DISTINCT v.marca_veicolo, v.modello_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.note_veicolo IS NOT NULL AND v.note_veicolo <> '';"
    },
    {
        "question": "Qual è la percentuale di contratti con permuta sul totale dei contratti aperti?",
        "answer": "SELECT CAST(SUM(CASE WHEN count_permute_contratto > 0 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(id_contratto) FROM [bi].[AUTO_contratti];"
    },
    {
        "question": "Elenca i contratti (ID Redd) con costo previsto superiore a 20000 euro.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd > 20000;"
    },
    {
        "question": "Qual è il ricavo consuntivo medio per tipo di costo/ricavo?",
        "answer": "SELECT descr_tipo_costo_ricavo_redd, AVG(imp_ricavo_consuntivo_redd) AS RicavoConsMedio FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd IS NOT NULL GROUP BY descr_tipo_costo_ricavo_redd;"
    },
    {
        "question": "Trova le voci di costo (descrizione) il cui valore previsto differisce di più del 20% dal valore consuntivo.",
        "answer": "SELECT DISTINCT descr_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NOT NULL AND imp_costo_consuntivo_redd IS NOT NULL AND imp_costo_previsto_redd <> 0 AND ABS(imp_costo_consuntivo_redd - imp_costo_previsto_redd) / imp_costo_previsto_redd > 0.20;"
    },
    {
        "question": "Mostra il valore totale dei ricavi previsti dai venditori per i contratti con margine previsto positivo.",
        "answer": "SELECT SUM(r.imp_ricavo_previsto_venditore_redd) FROM [bi].[AUTO_contratti_redd] AS r WHERE r.imp_ricavo_previsto_venditore_redd IS NOT NULL AND (ISNULL(r.imp_ricavo_previsto_redd, 0) - ISNULL(r.imp_costo_previsto_redd, 0)) > 0;"
    },
    {
        "question": "Quali sono i contratti (ID Redd) che hanno sia costi che ricavi consuntivi registrati?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL AND imp_ricavo_consuntivo_redd IS NOT NULL;"
    },
    {
        "question": "Elenca i contratti (ID Redd) senza provvigioni registrate ma con margine consuntivo positivo.",
        "answer": "SELECT r.id_contratto_redd FROM [bi].[AUTO_contratti_redd] AS r WHERE (r.imp_netto_provvigione_redd IS NULL OR r.imp_netto_provvigione_redd = 0) AND (ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) > 0;"
    },
    {
        "question": "Qual è la differenza media tra costo previsto dal venditore e costo previsto generale?",
        "answer": "SELECT AVG(imp_costo_previsto_redd - imp_costo_previsto_venditore_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NOT NULL AND imp_costo_previsto_venditore_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i tipi di totale (parziale/totale) associati al livello margine 'Margine Operativo'.",
        "answer": "SELECT DISTINCT tipo_totale_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Margine Operativo';"
    },
    {
        "question": "Quali codici spesa/costo hanno un importo consuntivo ma non un importo previsto?",
        "answer": "SELECT codice_spesa_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE (imp_costo_consuntivo_redd IS NOT NULL OR imp_ricavo_consuntivo_redd IS NOT NULL) AND (imp_costo_previsto_redd IS NULL AND imp_ricavo_previsto_redd IS NULL);"
    },
    {
        "question": "Trova il contratto (ID Redd) con il margine consuntivo più basso (potenzialmente negativo).",
        "answer": "SELECT TOP 1 id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS Margine FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd ORDER BY Margine ASC;"
    },
    {
        "question": "Elenca le commesse officina per l'auto con telaio 'XYZ123ABC...'.",
        "answer": "SELECT nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE telaio_commessa = 'XYZ123ABC...';"
    },
    {
        "question": "Qual è il tempo medio trascorso tra l'apertura della commessa e la data in cui il veicolo è pronto?",
        "answer": "SELECT AVG(DATEDIFF(day, dt_apertura_commessa, dt_veicolo_pronto_commessa)) FROM [bi].[OFF_commesse] WHERE dt_apertura_commessa IS NOT NULL AND dt_veicolo_pronto_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse aperte che non hanno ancora una data di previsione consegna.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL AND dt_previsione_consegna_commessa IS NULL;"
    },
    {
        "question": "Quali officine hanno gestito commesse per clienti del gruppo 'Leasing'?",
        "answer": "SELECT DISTINCT o.descr_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE cli.gruppo_cliente_officina = 'Leasing';"
    },
    {
        "question": "Trova le commesse con spese per materiale di consumo nulle o zero.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE imp_netto_materiale_consumo_commessa IS NULL OR imp_netto_materiale_consumo_commessa = 0;"
    },
    {
        "question": "Quante commesse sono state chiuse in ritardo rispetto alla data prevista di consegna?",
        "answer": "SELECT COUNT(id_commessa) FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa > dt_previsione_consegna_commessa;"
    },
    {
        "question": "Elenca le commesse con codice Estensione Garanzia non nullo.",
        "answer": "SELECT nr_commessa, codice_estgar_commessa FROM [bi].[OFF_commesse] WHERE codice_estgar_commessa IS NOT NULL AND codice_estgar_commessa <> '';"
    },
    {
        "question": "Quali sono i tipi di commessa (descrizione) più frequenti per l'accettatore 'Laura Bianchi'?",
        "answer": "SELECT TOP 5 ct.descr_tipo_commessa, COUNT(c.id_commessa) AS Frequenza FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE c.accettatore_commessa = 'Laura Bianchi' GROUP BY ct.descr_tipo_commessa ORDER BY Frequenza DESC;"
    },
    {
        "question": "Mostra le commesse aperte da più di 30 giorni.",
        "answer": "SELECT nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL AND DATEDIFF(day, dt_apertura_commessa, GETDATE()) > 30;"
    },
    {
        "question": "Trova le commesse relative a veicoli il cui codice interno è 'V001'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.codice_veicolo_officina = 'V001';"
    },
    {
        "question": "Elenca gli ID degli inconvenienti associati a commesse ancora aperte.",
        "answer": "SELECT i.id_inconveniente, i.descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa IS NULL;"
    },
    {
        "question": "Quali tipi di intervento sono stati usati per risolvere inconvenienti del gruppo 'Freni'?",
        "answer": "SELECT DISTINCT ti.descr_tipo_intervento FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS ti ON i.id_tipo_intervento = ti.id_tipo_intervento WHERE i.gruppo_inconveniente = 'Freni';"
    },
    {
        "question": "Mostra gli inconvenienti (descrizione completa) la cui descrizione breve è '-'.",
        "answer": "SELECT id_inconveniente, descr_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_breve_inconveniente = '-';"
    },
    {
        "question": "Quanti inconvenienti sono stati caricati al cliente per la commessa 'COM6543'?",
        "answer": "SELECT COUNT(id_inconveniente) FROM [bi].[OFF_commesse_inconvenienti] i JOIN [bi].[OFF_commesse] c ON i.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM6543' AND i.tipo_carico_cliente_inconveniente = 'Cliente';"
    },
    {
        "question": "Trova i tipi di inconveniente (distinti) registrati nel sistema.",
        "answer": "SELECT DISTINCT tipo_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente IS NOT NULL;"
    },
    {
        "question": "Qual è il valore totale (somma importo netto riga) delle righe associate a commesse chiuse ieri?",
        "answer": "SELECT SUM(r.imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa = CONVERT(date, DATEADD(day, -1, GETDATE()));"
    },
    {
        "question": "Mostra le righe con costo medio ponderato negativo.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_medio_ponderato_commessa < 0;"
    },
    {
        "question": "Elenca gli articoli (codice) usati con quantità 1 nella commessa 'COM8877'.",
        "answer": "SELECT codice_articolo_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM8877' AND r.qta_commessa = 1 AND r.codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il prezzo di listino medio per le righe di tipo 'Ricambio'?",
        "answer": "SELECT AVG(imp_netto_prezzo_listino_commessa) FROM [bi].[OFF_commesse_righe] WHERE gruppo_voce_commessa = 5 AND imp_netto_prezzo_listino_commessa IS NOT NULL; -- Assumendo 5 = Ricambi"
    },
    {
        "question": "Trova le righe di commessa che hanno una percentuale di addebito cliente compresa tra 50 e 90%.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE perc_addebito_cliente_commessa BETWEEN 0.50 AND 0.90;"
    },
    {
        "question": "Qual è il costo totale delle lavorazioni eseguite da esecutori del tipo 'Esterno'?",
        "answer": "SELECT SUM(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori_tipi] AS et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE et.descr_tipo_esecutore = 'Esterno';"
    },
    {
        "question": "Mostra le lavorazioni (descrizione riga) associate a inconvenienti di tipo 'Garanzia'.",
        "answer": "SELECT DISTINCT l.descr_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse_inconvenienti] AS i ON l.id_inconveniente = i.id_inconveniente WHERE i.tipo_carico_garanzia_inconveniente IS NOT NULL AND i.tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Quante ore totali sono state fatturate per commesse chiuse nell'ultimo trimestre?",
        "answer": "SELECT SUM(l.ore_fatturate_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa >= DATEADD(quarter, -1, GETDATE());"
    },
    {
        "question": "Elenca le lavorazioni il cui costo orario effettivo (costo / ore) è inferiore a 20 euro.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione > 0 AND (costo_lavorazione / ore_lavorazione) < 20;"
    },
    {
        "question": "Trova le date in cui sono state registrate lavorazioni per la commessa 'COM9911'.",
        "answer": "SELECT DISTINCT dt_movimento_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM9911';"
    },
    {
        "question": "Qual è la percentuale media di ore non produttive sul totale delle ore di presenza?",
        "answer": "SELECT AVG(ore_nonprod_presenza / NULLIF(ore_presenza, 0)) * 100 FROM [bi].[OFF_presenze] WHERE ore_presenza > 0;"
    },
    {
        "question": "Mostra gli esecutori che hanno avuto più di 5 giorni di assenza nell'ultimo anno.",
        "answer": "SELECT e.descr_esecutore, SUM(CASE WHEN p.ore_assenza_presenza > 0 THEN 1 ELSE 0 END) AS GiorniAssenza FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE p.dt_presenza >= DATEADD(year, -1, GETDATE()) GROUP BY e.descr_esecutore HAVING SUM(CASE WHEN p.ore_assenza_presenza > 0 THEN 1 ELSE 0 END) > 5;"
    },
    {
        "question": "Qual è il costo totale dei permessi registrati per l'officina 'Centro Motori'?",
        "answer": "SELECT SUM(p.ore_permessi_presenza * p.imp_costo_orario_presenza) FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_officine] AS o ON p.id_officina = o.id_officina WHERE o.descr_officina = 'Centro Motori' AND p.ore_permessi_presenza > 0;"
    },
    {
        "question": "Trova le date in cui le ore di presenza sono state inferiori alle ore teoriche per qualche esecutore.",
        "answer": "SELECT DISTINCT dt_presenza FROM [bi].[OFF_presenze] WHERE ore_presenza < ore_teoriche_presenza;"
    },
    {
        "question": "Quali tipi di esecutore hanno registrato ore di straordinario?",
        "answer": "SELECT DISTINCT et.descr_tipo_esecutore FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE p.ore_straordinarie_presenza > 0;"
    },
    {
        "question": "Elenca i noleggi associati a commesse di officina con accettatore 'Marco Neri'.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] AS n JOIN [bi].[OFF_commesse] AS c ON n.id_commessa = c.id_commessa WHERE c.accettatore_commessa = 'Marco Neri';"
    },
    {
        "question": "Qual è l'importo medio fatturato per i noleggi a lungo termine?",
        "answer": "SELECT AVG(imp_fatt_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'S' AND imp_fatt_noleggio IS NOT NULL;"
    },
    {
        "question": "Trova i noleggi per cui il veicolo è stato ritirato e consegnato nello stesso giorno.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE CONVERT(date, dt_ritiro_noleggio) = CONVERT(date, dt_consegna_noleggio);"
    },
    {
        "question": "Mostra i noleggi con note di consegna specificate.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, note_consegna_noleggio FROM [bi].[OFF_noleggi] WHERE note_consegna_noleggio IS NOT NULL AND note_consegna_noleggio <> '';"
    },
    {
        "question": "Qual è il numero totale di giorni fatturati per i noleggi dell'officina 'Ovest Auto'?",
        "answer": "SELECT SUM(n.giorni_fatturati_noleggio) FROM [bi].[OFF_noleggi] AS n JOIN [bi].[OFF_officine] AS o ON n.id_officina = o.id_officina WHERE o.descr_officina = 'Ovest Auto';"
    },
    {
        "question": "Cerca i contatti nella nazione 'Svizzera'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE nazione_contatto = 'Svizzera';"
    },
    {
        "question": "Quali sono i tipi soggetto (persona fisica/giuridica) presenti nell'anagrafica contatti?",
        "answer": "SELECT DISTINCT tipo_soggetto_contatto FROM [bi].[CONTT_contatti];"
    },
    {
        "question": "Mostra i contatti il cui nome inizia per 'A' e cognome per 'R'.",
        "answer": "SELECT nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE nome_contatto LIKE 'A%' AND cognome_contatto LIKE 'R%';"
    },
    {
        "question": "Elenca i contatti con indirizzo email ma senza numero di telefono.",
        "answer": "SELECT id_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE email_contatto IS NOT NULL AND email_contatto <> '' AND (telefono_contatto IS NULL OR telefono_contatto = '');"
    },
    {
        "question": "Quanti contatti distinti (basati su codice master) ci sono in totale?",
        "answer": "SELECT COUNT(DISTINCT codice_master_contatto) FROM [bi].[CONTT_contatti];"
    },
    {
        "question": "Trova i clienti che hanno acquistato più di 2 auto e hanno avuto almeno 1 commessa in officina con costo lavori terzi > 0.",
        "answer": "WITH ClientContracts AS ( SELECT id_cliente, COUNT(id_contratto) AS NumContracts FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(id_contratto) > 2 ), WorkshopExternal AS ( SELECT DISTINCT oc.id_cliente_officina FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_commesse_righe] r ON oc.id_commessa = r.id_commessa WHERE r.imp_netto_costo_lavori_terzi_commessa > 0 ) SELECT cli.descr_cliente FROM ClientContracts cc JOIN WorkshopExternal we ON cc.id_cliente = we.id_cliente_officina JOIN [bi].[AUTO_clienti] cli ON cc.id_cliente = cli.id_cliente;"
    },
    {
        "question": "Qual è la media del rapporto (Valore Contratto Auto / Valore Commessa Officina) per i veicoli che hanno avuto entrambi?",
        "answer": "WITH CombinedValues AS ( SELECT av.targa_veicolo, AVG(ac.imp_netto_contratto) AS AvgContract, AVG(oc.ValoreCommessa) AS AvgWorkshop FROM [bi].[AUTO_veicoli] av JOIN [bi].[AUTO_contratti] ac ON av.id_veicolo = ac.id_veicolo JOIN [bi].[OFF_veicoli] ov ON av.targa_veicolo = ov.targa_veicolo_officina JOIN (SELECT id_veicolo_officina, SUM(ISNULL(imp_netto_riga_commessa,0)) AS ValoreCommessa FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_righe] r ON c.id_commessa=r.id_commessa GROUP BY id_veicolo_officina) oc ON ov.id_veicolo_officina = oc.id_veicolo_officina GROUP BY av.targa_veicolo ) SELECT AVG(AvgContract / NULLIF(AvgWorkshop, 0)) FROM CombinedValues WHERE AvgWorkshop > 0;"
    },
    {
        "question": "Elenca i 10 veicoli (targa) con il maggior numero di giorni trascorsi tra l'acquisto e la prima commessa in officina.",
        "answer": "WITH FirstWorkshop AS ( SELECT id_veicolo_officina, MIN(dt_apertura_commessa) AS PrimaCommessa FROM [bi].[OFF_commesse] GROUP BY id_veicolo_officina ) SELECT TOP 10 av.targa_veicolo, DATEDIFF(day, av.dt_acquisto_veicolo, fw.PrimaCommessa) AS GiorniAcquistoPrimaCommessa FROM [bi].[AUTO_veicoli] av JOIN [bi].[OFF_veicoli] ov ON av.targa_veicolo = ov.targa_veicolo_officina JOIN FirstWorkshop fw ON ov.id_veicolo_officina = fw.id_veicolo_officina WHERE av.dt_acquisto_veicolo IS NOT NULL ORDER BY GiorniAcquistoPrimaCommessa DESC;"
    },
    {
        "question": "Mostra i venditori che hanno venduto auto a clienti che non hanno mai avuto noleggi.",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_venditori] v ON ac.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE cli.id_contatto NOT IN (SELECT DISTINCT id_contatto FROM [bi].[OFF_noleggi]);"
    },
    {
        "question": "Calcola, per ogni sede, il rapporto tra margine totale auto (consuntivo) e costo totale manodopera officina.",
        "answer": "WITH SedeMargine AS ( SELECT s.descr_sede, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS MargineAuto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd JOIN [bi].[AUTO_sedi] s ON c.id_sede = s.id_sede GROUP BY s.descr_sede ), SedeManodopera AS ( SELECT o.descr_officina, SUM(l.costo_lavorazione) AS CostoManodopera FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_officine] o ON l.id_officina = o.id_officina GROUP BY o.descr_officina ) SELECT sm.descr_sede, sm.MargineAuto / NULLIF(sl.CostoManodopera, 0) AS RapportoMargineManodopera FROM SedeMargine sm JOIN SedeManodopera sl ON sm.descr_sede = sl.descr_officina; -- Assumendo che descr_sede e descr_officina coincidano per le sedi"
    },
    {
        "question": "Qual è il valore cumulativo dei contratti aperti mese per mese quest'anno?",
        "answer": "WITH MonthlySales AS ( SELECT YEAR(dt_apertura_contratto) AS Anno, MONTH(dt_apertura_contratto) AS Mese, SUM(imp_netto_contratto) AS VenditeMensili FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) = YEAR(GETDATE()) GROUP BY YEAR(dt_apertura_contratto), MONTH(dt_apertura_contratto) ) SELECT Anno, Mese, VenditeMensili, SUM(VenditeMensili) OVER (ORDER BY Anno, Mese) AS VenditeCumulative FROM MonthlySales ORDER BY Anno, Mese;"
    },
    {
        "question": "Mostra i clienti che hanno acquistato un'auto nel 2024 ma non nel 2023.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE YEAR(c.dt_apertura_contratto) = 2024 AND cli.id_cliente NOT IN (SELECT DISTINCT id_cliente FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) = 2023);"
    },
    {
        "question": "Qual è la differenza percentuale media tra valore di listino e valore netto del contratto?",
        "answer": "SELECT AVG((imp_netto_listino_contratto - imp_netto_contratto) / NULLIF(imp_netto_listino_contratto, 0)) * 100 AS DiffPercentualeMedia FROM [bi].[AUTO_contratti] WHERE imp_netto_listino_contratto > 0;"
    },
    {
        "question": "Elenca i venditori che hanno venduto solo auto nuove (mai usate).",
        "answer": "SELECT v.descr_venditore FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_veicoli] AS ve ON c.id_veicolo = ve.id_veicolo GROUP BY v.descr_venditore HAVING MIN(ve.nuovo_usato_veicolo) = 'Nuovo' AND MAX(ve.nuovo_usato_veicolo) = 'Nuovo';"
    },
    {
        "question": "Trova i contratti associati a veicoli con data di scadenza bollo nei prossimi 30 giorni.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.dt_scadenza_bollo BETWEEN GETDATE() AND DATEADD(day, 30, GETDATE());"
    },
    {
        "question": "Quanti contratti con finanziamento sono stati aperti per ogni 'gruppo tipo cliente'?",
        "answer": "SELECT cli.gruppo_tipo_cliente, COUNT(c.id_contratto) AS NumContrattiFinanziati FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE c.has_finanziamento_contratto = 1 GROUP BY cli.gruppo_tipo_cliente;"
    },
    {
        "question": "Mostra i contratti dove il segnalatore è lo stesso venditore.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE c.segnalatore_contratto = v.descr_venditore;"
    },
    {
        "question": "Qual è il valore medio delle permute per i contratti senza assicurazione?",
        "answer": "SELECT AVG(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 0 AND count_permute_contratto > 0;"
    },
    {
        "question": "Trova i tipi di contratto (descrizione) associati a veicoli diesel.",
        "answer": "SELECT DISTINCT ct.descr_tipo_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.alimentazione_veicolo = 'Diesel';"
    },
    {
        "question": "Elenca i contratti chiusi il cui valore netto è inferiore al valore di listino.",
        "answer": "SELECT nr_contratto, imp_netto_listino_contratto, imp_netto_contratto FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND imp_netto_contratto < imp_netto_listino_contratto;"
    },
    {
        "question": "Qual è il 'gruppo area' con il maggior valore totale di contratti?",
        "answer": "SELECT TOP 1 ar.gruppo_area, SUM(c.imp_netto_contratto) AS ValoreTotale FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_aree] AS ar ON c.id_area = ar.id_area GROUP BY ar.gruppo_area ORDER BY ValoreTotale DESC;"
    },
    {
        "question": "Mostra i contratti per clienti il cui CAP inizia per '20'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE cli.cap_cliente LIKE '20%';"
    },
    {
        "question": "Quali punti vendita hanno registrato contratti con più di 2 permute?",
        "answer": "SELECT DISTINCT s.descr_punto_vendita FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede WHERE c.count_permute_contratto > 2;"
    },
    {
        "question": "Trova i contratti aperti di sabato o domenica.",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE DATEPART(weekday, dt_apertura_contratto) IN (7, 1);"
    },
    {
        "question": "Elenca i tipi di contatto (gruppo) che hanno associato almeno un contratto con finanziamento.",
        "answer": "SELECT DISTINCT tc.gruppo_tipo_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contatti_tipi] AS tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.has_finanziamento_contratto = 1;"
    },
    {
        "question": "Qual è il numero medio di giorni tra apertura e chiusura contratto per l'azienda 'Autoteam 9'?",
        "answer": "SELECT AVG(DATEDIFF(day, c.dt_apertura_contratto, c.dt_chiusura_contratto)) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE a.descr_azienda = 'Autoteam 9' AND c.dt_chiusura_contratto IS NOT NULL;"
    },
    {
        "question": "Mostra i veicoli (targa) venduti con garanzia interna 'Base' o 'Standard'.",
        "answer": "SELECT v.targa_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE c.garanzia_interna_contratto IN ('Base', 'Standard');"
    },
    {
        "question": "Quali provenienze sono associate a contratti di tipo 'Noleggio Lungo Termine'?",
        "answer": "SELECT DISTINCT p.descr_provenienza FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE ct.descr_tipo_contratto = 'Noleggio Lungo Termine';"
    },
    {
        "question": "Trova i venditori che hanno gestito contratti in più di 3 sedi diverse.",
        "answer": "SELECT v.descr_venditore, COUNT(DISTINCT c.id_sede) AS NumSedi FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore GROUP BY v.descr_venditore HAVING COUNT(DISTINCT c.id_sede) > 3;"
    },
    {
        "question": "Elenca i contratti con valore finanziato uguale all'importo netto del contratto.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND imp_netto_finanziato_contratto = imp_netto_contratto;"
    },
    {
        "question": "Qual è il margine consuntivo totale per i contratti associati a costi con descrizione 'Manutenzione Straordinaria'?",
        "answer": "SELECT SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] AS r WHERE r.descr_costo_redd = 'Manutenzione Straordinaria';"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il ricavo previsto dal venditore è superiore al ricavo previsto generale.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_venditore_redd > imp_ricavo_previsto_redd;"
    },
    {
        "question": "Quali sono i 3 tipi di costo/ricavo con il maggior costo consuntivo totale?",
        "answer": "SELECT TOP 3 descr_tipo_costo_ricavo_redd, SUM(imp_costo_consuntivo_redd) AS CostoTotale FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL GROUP BY descr_tipo_costo_ricavo_redd ORDER BY CostoTotale DESC;"
    },
    {
        "question": "Elenca le descrizioni di riga univoche presenti nella vista redditività.",
        "answer": "SELECT DISTINCT descr_riga_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd IS NOT NULL;"
    },
    {
        "question": "Trova i contratti (ID Redd) che hanno un indice contabile spesa definito.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_spesa_redd IS NOT NULL;"
    },
    {
        "question": "Qual è il valore medio della differenza tra costo consuntivo e costo previsto?",
        "answer": "SELECT AVG(imp_costo_consuntivo_redd - imp_costo_previsto_redd) AS DiffMediaCosto FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL AND imp_costo_previsto_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i livelli di margine associati a tipi di costo/ricavo che iniziano per 'SER'.",
        "answer": "SELECT DISTINCT liv_margine_redd, descr_margine_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_tipo_costo_ricavo_redd LIKE 'SER%';"
    },
    {
        "question": "Quali contratti (ID Redd) hanno un costo previsto ma nessuna provvigione?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NOT NULL AND imp_costo_previsto_redd > 0 AND (imp_netto_provvigione_redd IS NULL OR imp_netto_provvigione_redd = 0);"
    },
    {
        "question": "Trova il ricavo consuntivo totale per la voce di spesa 'Assicurazione Incendio'.",
        "answer": "SELECT SUM(imp_ricavo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_spesa_redd = 'Assicurazione Incendio';"
    },
    {
        "question": "Elenca i contratti (ID Redd) il cui margine previsto è superiore a 2000 euro.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE (ISNULL(imp_ricavo_previsto_redd, 0) - ISNULL(imp_costo_previsto_redd, 0)) > 2000;"
    },
    {
        "question": "Qual è la commessa con la data di fine lavori più recente?",
        "answer": "SELECT TOP 1 nr_commessa, dt_fine_lavoro_commessa FROM [bi].[OFF_commesse] WHERE dt_fine_lavoro_commessa IS NOT NULL ORDER BY dt_fine_lavoro_commessa DESC;"
    },
    {
        "question": "Mostra le commesse associate a veicoli del macro modello 'SUV'.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE descr_macro_modello_commessa = 'SUV';"
    },
    {
        "question": "Quanti clienti distinti ha servito ogni accettatore?",
        "answer": "SELECT accettatore_commessa, COUNT(DISTINCT id_cliente_officina) AS ClientiUnici FROM [bi].[OFF_commesse] GROUP BY accettatore_commessa;"
    },
    {
        "question": "Elenca le commesse la cui data di creazione è la stessa della data di apertura.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa = dt_apertura_commessa;"
    },
    {
        "question": "Trova le commesse con segno riga negativo.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE segno_riga_commessa < 0;"
    },
    {
        "question": "Qual è il valore medio delle spese per rifiuti per commessa?",
        "answer": "SELECT AVG(imp_netto_spese_rifiuti_commessa) FROM [bi].[OFF_commesse] WHERE imp_netto_spese_rifiuti_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli la cui targa contiene 'ZA'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.targa_veicolo_officina LIKE '%ZA%';"
    },
    {
        "question": "Quante commesse di tipo 'Tagliando' sono state chiuse finora?",
        "answer": "SELECT COUNT(c.id_commessa) FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa = 'Tagliando' AND c.dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Elenca le officine che hanno gestito commesse nell'anno corrente.",
        "answer": "SELECT DISTINCT o.descr_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE YEAR(c.dt_apertura_commessa) = YEAR(GETDATE());"
    },
    {
        "question": "Trova le commesse la cui data di inizio lavori è precedente alla data di apertura.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa < dt_apertura_commessa;"
    },
    {
        "question": "Elenca gli ID degli inconvenienti relativi a commesse chiuse.",
        "answer": "SELECT i.id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Quali tipi di intervento (codice) sono associati a inconvenienti non addebitati al cliente?",
        "answer": "SELECT DISTINCT it.codice_tipo_intervento FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS it ON i.id_tipo_intervento = it.id_tipo_intervento WHERE i.tipo_carico_cliente_inconveniente <> 'Cliente';"
    },
    {
        "question": "Mostra gli inconvenienti la cui descrizione breve è uguale alla descrizione estesa.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_breve_inconveniente = descr_inconveniente;"
    },
    {
        "question": "Quanti inconvenienti ha gestito in totale l'azienda 'AT'?",
        "answer": "SELECT COUNT(i.id_inconveniente) FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa WHERE c.id_azienda = 'AT';"
    },
    {
        "question": "Trova gli inconvenienti con tipo riga 'Nota'.",
        "answer": "SELECT id_inconveniente, descr_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_riga_inconveniente = 'Nota';"
    },
    {
        "question": "Qual è il valore totale delle righe omaggio nella commessa 'COM5544'?",
        "answer": "SELECT SUM(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM5544' AND r.is_omaggio_commessa = 1;"
    },
    {
        "question": "Mostra le righe con data lavorazione nel mese corrente.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE dt_lavorazione_commessa >= DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) AND dt_lavorazione_commessa < DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 1, 0);"
    },
    {
        "question": "Elenca i tipi di articolo (pre-codice) utilizzati nelle righe di commessa.",
        "answer": "SELECT DISTINCT precodice_articolo_commessa FROM [bi].[OFF_commesse_righe] WHERE precodice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è la quantità totale di articoli associati alla voce 'Filtro Olio'?",
        "answer": "SELECT SUM(r.qta_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce WHERE v.descr_voce = 'Filtro Olio';"
    },
    {
        "question": "Trova le righe di commessa gestite dall'esecutore 'Mario Bianchi'.",
        "answer": "SELECT r.id_commessa, r.nr_riga_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_esecutori] AS e ON r.id_esecutore = e.id_esecutore WHERE e.descr_esecutore = 'Mario Bianchi';"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni associate a inconvenienti di tipo 'Guasto Meccanico'?",
        "answer": "SELECT AVG(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse_inconvenienti] AS i ON l.id_inconveniente = i.id_inconveniente WHERE i.descr_breve_inconveniente = 'Guasto Meccanico';"
    },
    {
        "question": "Mostra le lavorazioni il cui costo orario è zero.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_orario_lavorazione = 0;"
    },
    {
        "question": "Quante ore lavorate totali sono state registrate per il tipo intervento 'Controllo Periodico'?",
        "answer": "SELECT SUM(l.ore_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_interventi_tipi] AS it ON l.id_tipo_intervento = it.id_tipo_intervento WHERE it.descr_tipo_intervento = 'Controllo Periodico';"
    },
    {
        "question": "Elenca le lavorazioni con ore fatturate maggiori delle ore lavorate.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_fatturate_lavorazione > ore_lavorazione;"
    },
    {
        "question": "Trova le commesse che hanno avuto lavorazioni da più di 3 esecutori diversi.",
        "answer": "SELECT c.nr_commessa, COUNT(DISTINCT l.id_esecutore) AS NumEsecutori FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa GROUP BY c.nr_commessa HAVING COUNT(DISTINCT l.id_esecutore) > 3;"
    },
    {
        "question": "Qual è il numero medio di ore di permesso mensili per esecutore?",
        "answer": "SELECT AVG(OrePermessiMensili) FROM (SELECT id_esecutore, YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, SUM(ore_permessi_presenza) AS OrePermessiMensili FROM [bi].[OFF_presenze] GROUP BY id_esecutore, YEAR(dt_presenza), MONTH(dt_presenza)) AS MedieMensili;"
    },
    {
        "question": "Mostra gli esecutori che non hanno registrato ore di presenza nell'ultima settimana.",
        "answer": "SELECT id_esecutore, descr_esecutore FROM [bi].[OFF_esecutori] WHERE id_esecutore NOT IN (SELECT DISTINCT id_esecutore FROM [bi].[OFF_presenze] WHERE dt_presenza >= DATEADD(week, -1, GETDATE()));"
    },
    {
        "question": "Qual è il costo totale annuo degli straordinari per l'officina 'Service Top'?",
        "answer": "SELECT SUM(p.ore_straordinarie_presenza * p.imp_costo_straordinario_presenza) FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_officine] AS o ON p.id_officina = o.id_officina WHERE o.descr_officina = 'Service Top' AND YEAR(p.dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Trova le date con il numero massimo di ore di assenza totali registrate.",
        "answer": "SELECT TOP 1 dt_presenza, SUM(ore_assenza_presenza) AS TotaleOreAssenza FROM [bi].[OFF_presenze] GROUP BY dt_presenza ORDER BY TotaleOreAssenza DESC;"
    },
    {
        "question": "Quale tipo esecutore ha il costo orario medio più alto?",
        "answer": "SELECT TOP 1 et.descr_tipo_esecutore, AVG(p.imp_costo_orario_presenza) AS CostoMedio FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE p.imp_costo_orario_presenza IS NOT NULL GROUP BY et.descr_tipo_esecutore ORDER BY CostoMedio DESC;"
    },
    {
        "question": "Elenca i noleggi per cui non è stata emessa fattura.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE nr_fatt_noleggio IS NULL;"
    },
    {
        "question": "Qual è il numero totale di km percorsi (consegna - ritiro) dai veicoli in noleggio?",
        "answer": "SELECT SUM(km_consegna_noleggio - km_ritiro_noleggio) FROM [bi].[OFF_noleggi] WHERE km_consegna_noleggio IS NOT NULL AND km_ritiro_noleggio IS NOT NULL;"
    },
    {
        "question": "Trova i noleggi di tipo 'Affidamento Standard'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE descr_tipo_affidamento_noleggio = 'Affidamento Standard';"
    },
    {
        "question": "Mostra i noleggi con costo carburante superiore al costo veicolo.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE costo_carburante_noleggio > costo_veicolo_noleggio;"
    },
    {
        "question": "Qual è l'importo medio delle fatture di noleggio emesse?",
        "answer": "SELECT AVG(imp_fatt_noleggio) FROM [bi].[OFF_noleggi] WHERE nr_fatt_noleggio IS NOT NULL AND imp_fatt_noleggio IS NOT NULL;"
    },
    {
        "question": "Cerca i contatti con codice fiscale che inizia per 'RSS'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, codice_fiscale_contatto FROM [bi].[CONTT_contatti] WHERE codice_fiscale_contatto LIKE 'RSS%';"
    },
    {
        "question": "Quali sono le province con più di 1000 contatti registrati?",
        "answer": "SELECT provincia_contatto, COUNT(*) AS NumeroContatti FROM [bi].[CONTT_contatti] GROUP BY provincia_contatto HAVING COUNT(*) > 1000;"
    },
    {
        "question": "Mostra i contatti di sesso maschile residenti a 'Genova'.",
        "answer": "SELECT nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE sesso_contatto = 'M' AND localita_contatto = 'Genova';"
    },
    {
        "question": "Elenca i contatti con partita IVA ma senza codice fiscale.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE partita_iva_contatto IS NOT NULL AND partita_iva_contatto <> '' AND (codice_fiscale_contatto IS NULL OR codice_fiscale_contatto = '');"
    },
    {
        "question": "Qual è la data di modifica più recente registrata per un contatto?",
        "answer": "SELECT MAX(dt_modifica_contatto) FROM [bi].[CONTT_contatti];"
    },
    {
        "question": "Trova i clienti che hanno acquistato un'auto usata e hanno avuto una commessa di tipo 'Riparazione' nello stesso anno.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] AS ac JOIN [bi].[AUTO_clienti] AS cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS v ON ac.id_veicolo = v.id_veicolo JOIN [bi].[OFF_commesse] AS oc ON cli.id_contatto = oc.id_cliente_officina JOIN [bi].[OFF_commesse_tipi] AS ct ON oc.id_tipo_commessa = ct.id_tipo_commessa WHERE v.nuovo_usato_veicolo = 'Usato' AND ct.descr_tipo_commessa = 'Riparazione' AND YEAR(ac.dt_apertura_contratto) = YEAR(oc.dt_apertura_commessa);"
    },
    {
        "question": "Mostra il venditore che ha venduto l'auto (targa) associata alla commessa officina 'COM1001'.",
        "answer": "SELECT v.descr_venditore FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina JOIN [bi].[AUTO_veicoli] av ON ov.targa_veicolo_officina = av.targa_veicolo JOIN [bi].[AUTO_contratti] ac ON av.id_veicolo = ac.id_veicolo JOIN [bi].[AUTO_venditori] v ON ac.id_venditore = v.id_venditore WHERE oc.nr_commessa = 'COM1001';"
    },
    {
        "question": "Elenca i clienti (codice master) che hanno un contratto auto aperto ma nessuna commessa in officina negli ultimi 2 anni.",
        "answer": "SELECT DISTINCT cli.codice_master_cliente FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE ac.status_contratto <> 'Chiuso' AND cli.id_contatto NOT IN (SELECT DISTINCT id_cliente_officina FROM [bi].[OFF_commesse] WHERE dt_apertura_commessa >= DATEADD(year, -2, GETDATE()));"
    },
    {
        "question": "Calcola la media delle ore lavorate in officina per ogni contratto auto chiuso (collegando tramite veicolo).",
        "answer": "WITH LavoroLavorato AS ( SELECT ov.targa_veicolo_officina, SUM(l.ore_lavorazione) AS OreTotali FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_commesse] oc ON l.id_commessa = oc.id_commessa JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina GROUP BY ov.targa_veicolo_officina ) SELECT AVG(ll.OreTotali) FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo JOIN LavoroLavorato ll ON av.targa_veicolo = ll.targa_veicolo_officina WHERE ac.status_contratto = 'Chiuso';"
    },
    {
        "question": "Mostra le 5 sedi con il maggior margine totale combinato (auto + officina, se possibile).",
        "answer": "WITH MargineAuto AS ( SELECT s.descr_sede, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS Margine FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd JOIN [bi].[AUTO_sedi] s ON c.id_sede = s.id_sede GROUP BY s.descr_sede ), MargineOfficina AS ( SELECT o.descr_officina, SUM( (SELECT SUM(ISNULL(imp_netto_riga_commessa, 0)) FROM [bi].[OFF_commesse_righe] r WHERE r.id_commessa = c.id_commessa) - (SELECT SUM(ISNULL(costo_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.id_commessa = c.id_commessa) - (SELECT SUM(ISNULL(imp_netto_costo_commessa, 0)) FROM [bi].[OFF_commesse_righe] r WHERE r.id_commessa = c.id_commessa) ) AS Margine FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_officine] o ON c.id_officina = o.id_officina GROUP BY o.descr_officina ) SELECT TOP 5 COALESCE(ma.descr_sede, mo.descr_officina) AS Sede, ISNULL(ma.Margine, 0) + ISNULL(mo.Margine, 0) AS MargineTotale FROM MargineAuto ma FULL OUTER JOIN MargineOfficina mo ON ma.descr_sede = mo.descr_officina ORDER BY MargineTotale DESC;"
    },
    {
        "question": "Quali contratti sono stati aperti oggi?",
        "answer": "SELECT nr_contratto, id_venditore FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto = CONVERT(date, GETDATE());"
    },
    {
        "question": "Mostra il valore totale finanziato per i contratti del cliente 'Cliente Prova SPA'.",
        "answer": "SELECT SUM(c.imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE cli.descr_cliente = 'Cliente Prova SPA' AND c.has_finanziamento_contratto = 1;"
    },
    {
        "question": "Elenca le auto (targa) vendute con più di 3 permute.",
        "answer": "SELECT v.targa_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE c.count_permute_contratto > 3;"
    },
    {
        "question": "Quali venditori non hanno mai venduto un'auto con assicurazione inclusa?",
        "answer": "SELECT v.descr_venditore FROM [bi].[AUTO_venditori] AS v WHERE v.id_venditore NOT IN (SELECT DISTINCT id_venditore FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 1);"
    },
    {
        "question": "Trova i contratti relativi a veicoli con linea 'Business'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.linea_veicolo = 'Business';"
    },
    {
        "question": "Quanti contratti sono stati registrati per ogni 'gruppo canale vendita'?",
        "answer": "SELECT cv.gruppo_canale_vendita, COUNT(c.id_contratto) AS NumeroContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_canali_vendita] AS cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY cv.gruppo_canale_vendita;"
    },
    {
        "question": "Mostra i contratti con valore di listino superiore a 60000 euro.",
        "answer": "SELECT nr_contratto, imp_netto_listino_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_listino_contratto > 60000;"
    },
    {
        "question": "Quali sedi (descrizione) hanno gestito contratti per clienti di tipo 'Pubblica Amministrazione'?",
        "answer": "SELECT DISTINCT s.descr_sede FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE cli.tipo_cliente = 'Pubblica Amministrazione';"
    },
    {
        "question": "Trova i clienti (ID Contatto) che hanno solo contratti chiusi.",
        "answer": "SELECT cli.id_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.id_contatto HAVING MIN(c.status_contratto) = 'Chiuso' AND MAX(c.status_contratto) = 'Chiuso';"
    },
    {
        "question": "Elenca i veicoli (targa e modello) la cui data di acquisto è nel 2022.",
        "answer": "SELECT targa_veicolo, modello_veicolo FROM [bi].[AUTO_veicoli] WHERE YEAR(dt_acquisto_veicolo) = 2022;"
    },
    {
        "question": "Qual è il tipo di contratto (gruppo) con il valore medio finanziato più alto?",
        "answer": "SELECT TOP 1 ct.gruppo_tipo_contratto, AVG(c.imp_netto_finanziato_contratto) AS MediaFinanziato FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE c.has_finanziamento_contratto = 1 GROUP BY ct.gruppo_tipo_contratto ORDER BY MediaFinanziato DESC;"
    },
    {
        "question": "Mostra i contratti dove il segnalatore è diverso da '(Non definito)' ma non corrisponde a nessun venditore esistente.",
        "answer": "SELECT nr_contratto, segnalatore_contratto FROM [bi].[AUTO_contratti] WHERE segnalatore_contratto IS NOT NULL AND segnalatore_contratto <> '(Non definito)' AND segnalatore_contratto NOT IN (SELECT descr_venditore FROM [bi].[AUTO_venditori]);"
    },
    {
        "question": "Quali sono le 3 provenienze con il minor numero di contratti associati?",
        "answer": "SELECT TOP 3 p.descr_provenienza, COUNT(c.id_contratto) AS NumeroContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza GROUP BY p.descr_provenienza ORDER BY NumeroContratti ASC;"
    },
    {
        "question": "Trova i contratti relativi a veicoli con status 'Disponibile per la vendita'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.status_veicolo = 'Disponibile per la vendita';"
    },
    {
        "question": "Elenca i clienti (descrizione) associati a contratti con tipo vendita 'Export'.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE tv.descr_tipo_vendita = 'Export';"
    },
    {
        "question": "Qual è l'area (descrizione) con il valore medio di permuta più basso?",
        "answer": "SELECT TOP 1 ar.descr_area, AVG(c.imp_netto_permute_contratto) AS MediaPermuta FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_aree] AS ar ON c.id_area = ar.id_area WHERE c.count_permute_contratto > 0 GROUP BY ar.descr_area ORDER BY MediaPermuta ASC;"
    },
    {
        "question": "Mostra i contratti associati a veicoli con ubicazione attuale 'Magazzino Centrale'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.ubicazione_attuale_veicolo = 'Magazzino Centrale';"
    },
    {
        "question": "Quali tipi di contatto (codice) non sono mai stati associati a contratti aperti?",
        "answer": "SELECT codice_tipo_contatto FROM [bi].[AUTO_contatti_tipi] WHERE id_tipo_contatto NOT IN (SELECT DISTINCT id_tipo_contatto FROM [bi].[AUTO_contratti] WHERE status_contratto <> 'Chiuso');"
    },
    {
        "question": "Trova i veicoli (ID Gestionale) che sono stati sia venduti (hanno un contratto) sia presenti in officina (hanno una commessa).",
        "answer": "SELECT DISTINCT v_auto.id_gesionale_veicolo FROM [bi].[AUTO_veicoli] AS v_auto JOIN [bi].[AUTO_contratti] AS c ON v_auto.id_veicolo = c.id_veicolo JOIN [bi].[OFF_veicoli] AS v_off ON v_auto.targa_veicolo = v_off.targa_veicolo_officina JOIN [bi].[OFF_commesse] AS oc ON v_off.id_veicolo_officina = oc.id_veicolo_officina;"
    },
    {
        "question": "Elenca i contratti la cui data di chiusura è avvenuta più di un anno dopo la data di apertura.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto IS NOT NULL AND DATEDIFF(year, dt_apertura_contratto, dt_chiusura_contratto) > 1;"
    },
    {
        "question": "Qual è il costo consuntivo totale per i contratti con provvigioni superiori a 500 euro?",
        "answer": "SELECT SUM(imp_costo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd > 500;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il ricavo previsto è identico al ricavo consuntivo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd = imp_ricavo_consuntivo_redd;"
    },
    {
        "question": "Quali sono le descrizioni di costo/spesa associate al tipo 'Servizi Aggiuntivi'?",
        "answer": "SELECT DISTINCT COALESCE(descr_costo_redd, descr_spesa_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd = 'Servizi Aggiuntivi';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il margine consuntivo è positivo ma inferiore a 100 euro.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd HAVING SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) > 0 AND SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) < 100;"
    },
    {
        "question": "Trova i contratti (ID Redd) con indice contabile costo nullo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd IS NULL;"
    },
    {
        "question": "Qual è il valore medio del costo previsto dal venditore per i contratti di livello margine 'Margine Contribuzione'?",
        "answer": "SELECT AVG(imp_costo_previsto_venditore_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Margine Contribuzione';"
    },
    {
        "question": "Mostra i tipi di costo/ricavo (codice) che non hanno mai avuto un valore consuntivo registrato.",
        "answer": "SELECT DISTINCT codice_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_tipo_costo_ricavo_redd NOT IN (SELECT DISTINCT codice_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL OR imp_ricavo_consuntivo_redd IS NOT NULL);"
    },
    {
        "question": "Quali contratti (ID Redd) hanno associato un costo con descrizione 'Incentivo Cliente'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_costo_redd = 'Incentivo Cliente';"
    },
    {
        "question": "Trova il ricavo previsto totale per le righe con descrizione 'Estensione Garanzia'.",
        "answer": "SELECT SUM(imp_ricavo_previsto_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd = 'Estensione Garanzia';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il costo consuntivo è zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd = 0;"
    },
    {
        "question": "Qual è la commessa con la data di apertura più vecchia tra quelle ancora aperte?",
        "answer": "SELECT TOP 1 nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL ORDER BY dt_apertura_commessa ASC;"
    },
    {
        "question": "Mostra le commesse relative a veicoli di marca 'Renault' o 'Nissan'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_marca_veicolo_officina IN ('Renault', 'Nissan');"
    },
    {
        "question": "Quanti tipi di commessa diversi ha gestito ogni accettatore?",
        "answer": "SELECT accettatore_commessa, COUNT(DISTINCT id_tipo_commessa) AS NumTipiCommessa FROM [bi].[OFF_commesse] GROUP BY accettatore_commessa;"
    },
    {
        "question": "Elenca le commesse la cui data di fine lavori è stata registrata ma la commessa è ancora aperta.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_fine_lavoro_commessa IS NOT NULL AND dt_chiusura_commessa IS NULL;"
    },
    {
        "question": "Trova le commesse con codice ODL non nullo.",
        "answer": "SELECT nr_commessa, codice_odl_commessa FROM [bi].[OFF_commesse] WHERE codice_odl_commessa IS NOT NULL AND codice_odl_commessa <> '';"
    },
    {
        "question": "Qual è il valore medio delle spese materiale di consumo per l'officina 'Centrale'?",
        "answer": "SELECT AVG(c.imp_netto_materiale_consumo_commessa) FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE o.descr_officina = 'Centrale';"
    },
    {
        "question": "Mostra le commesse per veicoli il cui telaio termina con '001'.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE telaio_commessa LIKE '%001';"
    },
    {
        "question": "Quante commesse totali ci sono per ogni anno di apertura?",
        "answer": "SELECT YEAR(dt_apertura_commessa) AS Anno, COUNT(id_commessa) AS NumeroCommesse FROM [bi].[OFF_commesse] GROUP BY YEAR(dt_apertura_commessa) ORDER BY Anno DESC;"
    },
    {
        "question": "Elenca le officine che non hanno mai gestito commesse di tipo 'Garanzia'.",
        "answer": "SELECT o.descr_officina FROM [bi].[OFF_officine] AS o WHERE o.id_officina NOT IN (SELECT DISTINCT id_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa LIKE '%Garanzia%');"
    },
    {
        "question": "Trova le commesse la cui data veicolo pronto è successiva alla data chiusura commessa.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa > dt_chiusura_commessa;"
    },
    {
        "question": "Quali gruppi di inconveniente sono stati registrati per l'auto con ID gestionale veicolo 'V987654'?",
        "answer": "SELECT DISTINCT i.gruppo_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.id_gestionale_veicolo_officina = 'V987654';"
    },
    {
        "question": "Mostra gli inconvenienti associati a interventi di tipo 'Elettrico'.",
        "answer": "SELECT i.id_inconveniente, i.descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS it ON i.id_tipo_intervento = it.id_tipo_intervento WHERE it.descr_tipo_intervento = 'Elettrico';"
    },
    {
        "question": "Quanti inconvenienti hanno una descrizione breve ma non una descrizione estesa?",
        "answer": "SELECT COUNT(id_inconveniente) FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_breve_inconveniente IS NOT NULL AND descr_breve_inconveniente <> '-' AND (descr_inconveniente IS NULL OR descr_inconveniente = '');"
    },
    {
        "question": "Elenca gli ID commessa che hanno almeno un inconveniente caricato in garanzia.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_garanzia_inconveniente IS NOT NULL AND tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Trova gli inconvenienti con numero riga 1.",
        "answer": "SELECT id_inconveniente, descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE riga_inconveniente = '1';"
    },
    {
        "question": "Qual è il valore massimo di una singola riga di commessa (esclusi omaggi)?",
        "answer": "SELECT MAX(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 0;"
    },
    {
        "question": "Mostra le righe di commessa con codice conto 'CT100'.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_conto_commessa = 'CT100';"
    },
    {
        "question": "Elenca i tipi di intervento (descrizione) associati a righe con costo lavori terzi > 0.",
        "answer": "SELECT DISTINCT it.descr_tipo_intervento FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_interventi_tipi] AS it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE r.imp_netto_costo_lavori_terzi_commessa > 0;"
    },
    {
        "question": "Qual è la quantità media per le righe di gruppo voce 'Ricambi'?",
        "answer": "SELECT AVG(qta_commessa) FROM [bi].[OFF_commesse_righe] WHERE gruppo_voce_commessa = 5; -- Assumendo 5 = Ricambi"
    },
    {
        "question": "Trova le righe di commessa la cui data lavorazione è un lunedì.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE DATEPART(weekday, dt_lavorazione_commessa) = 2; -- Assumendo lunedì come 2° giorno"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni per tipo esecutore?",
        "answer": "SELECT et.descr_tipo_esecutore, AVG(l.costo_lavorazione) AS CostoMedio FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori_tipi] AS et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE l.costo_lavorazione IS NOT NULL GROUP BY et.descr_tipo_esecutore;"
    },
    {
        "question": "Mostra le lavorazioni il cui costo orario effettivo (costo/ore) è maggiore del costo orario standard dell'esecutore (se disponibile).",
        "answer": "SELECT l.id_commessa, l.progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_presenze] AS p ON l.id_esecutore = p.id_esecutore AND CONVERT(date, l.dt_movimento_lavorazione) = p.dt_presenza WHERE l.ore_lavorazione > 0 AND (l.costo_lavorazione / l.ore_lavorazione) > p.imp_costo_orario_presenza;"
    },
    {
        "question": "Quante ore totali ha lavorato ogni gruppo di esecutori questo mese?",
        "answer": "SELECT et.gruppo_tipo_esecutore, SUM(l.ore_lavorazione) AS OreTotali FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori_tipi] AS et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE l.dt_movimento_lavorazione >= DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) AND l.dt_movimento_lavorazione < DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 1, 0) GROUP BY et.gruppo_tipo_esecutore;"
    },
    {
        "question": "Elenca le lavorazioni associate a commesse aperte per più di 60 giorni.",
        "answer": "SELECT l.id_commessa, l.progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa IS NULL AND DATEDIFF(day, c.dt_apertura_commessa, GETDATE()) > 60;"
    },
    {
        "question": "Trova il rapporto medio tra ore fatturate e ore lavorate per ogni tipo di intervento.",
        "answer": "SELECT it.descr_tipo_intervento, AVG(l.ore_fatturate_lavorazione / NULLIF(l.ore_lavorazione, 0)) AS RapportoFattLavorate FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_interventi_tipi] AS it ON l.id_tipo_intervento = it.id_tipo_intervento WHERE l.ore_lavorazione > 0 GROUP BY it.descr_tipo_intervento;"
    },
    {
        "question": "Quali esecutori hanno registrato solo ore teoriche (nessuna presenza effettiva) in un dato giorno?",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.ore_teoriche_presenza > 0 AND (p.ore_presenza IS NULL OR p.ore_presenza = 0);"
    },
    {
        "question": "Mostra la distribuzione delle ore di assenza per motivo (se disponibile nei tipi esecutore o altrove).",
        "answer": "SELECT descr_tipo_esecutore, SUM(ore_assenza_presenza) AS TotaleOreAssenza FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori_tipi] et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE ore_assenza_presenza > 0 GROUP BY descr_tipo_esecutore; -- Questa query è speculativa, l'assenza potrebbe non essere legata al tipo esecutore."
    },
    {
        "question": "Qual è il costo totale medio giornaliero di presenza per l'officina X?",
        "answer": "SELECT AVG(CostoGiornaliero) FROM (SELECT dt_presenza, SUM(ore_presenza * imp_costo_orario_presenza + ore_straordinarie_presenza * imp_costo_straordinario_presenza) AS CostoGiornaliero FROM [bi].[OFF_presenze] WHERE id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE descr_officina = 'Officina X') GROUP BY dt_presenza) AS CostiGiornalieri;"
    },
    {
        "question": "Trova i giorni con più di 5 esecutori in ferie.",
        "answer": "SELECT dt_presenza, COUNT(id_esecutore) AS NumInFerie FROM [bi].[OFF_presenze] WHERE ore_ferie_presenza > 0 GROUP BY dt_presenza HAVING COUNT(id_esecutore) > 5;"
    },
    {
        "question": "Quali esecutori hanno un costo orario superiore a 40 euro?",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE p.imp_costo_orario_presenza > 40;"
    },
    {
        "question": "Elenca i noleggi associati a clienti con ragione sociale che inizia per 'AUTO'.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] AS n JOIN [bi].[CONTT_contatti] AS co ON n.id_contatto = co.id_contatto WHERE co.ragione_sociale_contatto LIKE 'AUTO%';"
    },
    {
        "question": "Qual è il numero medio di km extra per i noleggi a lungo termine?",
        "answer": "SELECT AVG(km_extra_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'S' AND km_extra_noleggio IS NOT NULL;"
    },
    {
        "question": "Trova i noleggi la cui fattura è stata emessa più di 10 giorni dopo la data di chiusura del noleggio.",
        "answer": "SELECT id_riga_noleggio FROM [bi].[OFF_noleggi] WHERE dt_doc_noleggio IS NOT NULL AND dt_chiusura_noleggio IS NOT NULL AND DATEDIFF(day, dt_chiusura_noleggio, dt_doc_noleggio) > 10;"
    },
    {
        "question": "Mostra i noleggi di tipo fatturazione 'Mensile'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE tipo_fatturazione_noleggio = 'Mensile';"
    },
    {
        "question": "Qual è l'importo massimo fatturato per un singolo noleggio?",
        "answer": "SELECT MAX(imp_fatt_noleggio) FROM [bi].[OFF_noleggi];"
    },
    {
        "question": "Cerca i contatti la cui data di modifica è nel 2023.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE YEAR(dt_modifica_contatto) = 2023;"
    },
    {
        "question": "Quali sono i contatti con lo stesso numero di telefono?",
        "answer": "SELECT telefono_contatto, COUNT(*) AS NumContatti FROM [bi].[CONTT_contatti] WHERE telefono_contatto IS NOT NULL AND telefono_contatto <> '' GROUP BY telefono_contatto HAVING COUNT(*) > 1;"
    },
    {
        "question": "Mostra i contatti che sono persone fisiche (non aziende).",
        "answer": "SELECT id_contatto, nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'PF'; -- Verificare codice Persona Fisica"
    },
    {
        "question": "Elenca i contatti residenti all'estero (nazione diversa da Italia).",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, nazione_contatto FROM [bi].[CONTT_contatti] WHERE nazione_contatto IS NOT NULL AND nazione_contatto <> 'Italia';"
    },
    {
        "question": "Qual è il CAP più frequente tra i contatti?",
        "answer": "SELECT TOP 1 cap_contatto, COUNT(*) AS Frequenza FROM [bi].[CONTT_contatti] WHERE cap_contatto IS NOT NULL GROUP BY cap_contatto ORDER BY Frequenza DESC;"
    },
    {
        "question": "Mostra il ranking dei venditori basato sul margine consuntivo totale generato.",
        "answer": "WITH SellerMargin AS ( SELECT c.id_venditore, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS TotMargine FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY c.id_venditore ) SELECT v.descr_venditore, sm.TotMargine, RANK() OVER (ORDER BY sm.TotMargine DESC) AS Ranking FROM SellerMargin sm JOIN [bi].[AUTO_venditori] v ON sm.id_venditore = v.id_venditore;"
    },
    {
        "question": "Per ogni cliente, mostra il valore dell'ultimo contratto auto stipulato.",
        "answer": "WITH LastContract AS ( SELECT id_cliente, nr_contratto, imp_netto_contratto, ROW_NUMBER() OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto DESC) AS rn FROM [bi].[AUTO_contratti] ) SELECT cli.descr_cliente, lc.nr_contratto, lc.imp_netto_contratto FROM LastContract lc JOIN [bi].[AUTO_clienti] cli ON lc.id_cliente = cli.id_cliente WHERE lc.rn = 1;"
    },
    {
        "question": "Calcola la variazione percentuale del numero di commesse aperte questo mese rispetto al mese precedente, per ogni officina.",
        "answer": "WITH MonthlyCommesse AS ( SELECT id_officina, YEAR(dt_apertura_commessa) AS Anno, MONTH(dt_apertura_commessa) AS Mese, COUNT(id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] WHERE dt_apertura_commessa >= DATEADD(month, -1, DATEADD(day, 1-DAY(GETDATE()), GETDATE())) GROUP BY id_officina, YEAR(dt_apertura_commessa), MONTH(dt_apertura_commessa) ), LaggedCommesse AS ( SELECT id_officina, Anno, Mese, NumCommesse, LAG(NumCommesse, 1, 0) OVER (PARTITION BY id_officina ORDER BY Anno, Mese) AS PrevMonthCommesse FROM MonthlyCommesse ) SELECT o.descr_officina, lc.NumCommesse AS CommesseMeseCorrente, lc.PrevMonthCommesse AS CommesseMesePrecedente, CASE WHEN lc.PrevMonthCommesse > 0 THEN (CAST(lc.NumCommesse AS FLOAT) - lc.PrevMonthCommesse) * 100 / lc.PrevMonthCommesse ELSE NULL END AS VariazionePercentuale FROM LaggedCommesse lc JOIN [bi].[OFF_officine] o ON lc.id_officina = o.id_officina WHERE lc.Anno = YEAR(GETDATE()) AND lc.Mese = MONTH(GETDATE());"
    },
    {
        "question": "Mostra i primi 3 tipi di intervento più costosi (costo totale riga) per le commesse in garanzia cliente.",
        "answer": "SELECT TOP 3 it.descr_tipo_intervento, SUM(r.imp_netto_riga_commessa) AS CostoTotale FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_interventi_tipi] it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE r.tipo_carico_cliente_commessa = 'Garanzia' GROUP BY it.descr_tipo_intervento ORDER BY CostoTotale DESC;"
    },
    {
        "question": "Identifica i clienti (ID Contatto) che hanno contratti auto aperti e commesse officina aperte contemporaneamente.",
        "answer": "SELECT DISTINCT ac.id_cliente FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE ac.status_contratto <> 'Chiuso' AND cli.id_contatto IN (SELECT DISTINCT id_cliente_officina FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL);"
    },
    {
        "question": "Quali aree aziendali esistono nel sistema?",
        "answer": "SELECT descr_area, gruppo_area FROM [bi].[AUTO_aree];"
    },
    {
        "question": "Mostrami i contratti con valore netto superiore al valore di listino.",
        "answer": "SELECT nr_contratto, imp_netto_contratto, imp_netto_listino_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_contratto > imp_netto_listino_contratto;"
    },
    {
        "question": "Elenca i tipi di contatto cliente (descrizione) il cui gruppo è 'Partner'.",
        "answer": "SELECT descr_tipo_contatto FROM [bi].[AUTO_contatti_tipi] WHERE gruppo_tipo_contatto = 'Partner';"
    },
    {
        "question": "Quanti contratti sono associati a veicoli con anno immatricolazione 2021?",
        "answer": "SELECT COUNT(c.id_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE YEAR(v.dt_immatricolazione_veicolo) = 2021;"
    },
    {
        "question": "Qual è il valore totale delle permute per contratti chiusi senza finanziamento?",
        "answer": "SELECT SUM(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND has_finanziamento_contratto = 0 AND count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti che non hanno né assicurazione né finanziamento né permuta.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 0 AND has_finanziamento_contratto = 0 AND count_permute_contratto = 0;"
    },
    {
        "question": "Quali venditori hanno gestito contratti con tipo vendita 'Km 0'?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE tv.descr_tipo_vendita = 'Km 0';"
    },
    {
        "question": "Mostra i contratti relativi a veicoli la cui provenienza è 'Noleggio Breve Termine'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE p.descr_provenienza = 'Noleggio Breve Termine';"
    },
    {
        "question": "Qual è il tipo cliente (descrizione) con il maggior numero di contratti aperti?",
        "answer": "SELECT TOP 1 cli.tipo_cliente, COUNT(c.id_contratto) AS NumContrattiAperti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE c.status_contratto <> 'Chiuso' GROUP BY cli.tipo_cliente ORDER BY NumContrattiAperti DESC;"
    },
    {
        "question": "Elenca le sedi (descrizione) che appartengono al gruppo 'Nord-Est'.",
        "answer": "SELECT descr_sede FROM [bi].[AUTO_sedi] WHERE gruppo_sede = 'Nord-Est';"
    },
    {
        "question": "Qual è il valore medio di listino per i veicoli con alimentazione a Metano?",
        "answer": "SELECT AVG(c.imp_netto_listino_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.alimentazione_veicolo = 'Metano' AND c.imp_netto_listino_contratto > 0;"
    },
    {
        "question": "Mostra i contratti chiusi nell'ultimo giorno del mese scorso.",
        "answer": "SELECT nr_contratto, dt_chiusura_contratto FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto = EOMONTH(DATEADD(month, -1, GETDATE()));"
    },
    {
        "question": "Quanti tipi di contratto diversi (codice) esistono?",
        "answer": "SELECT COUNT(DISTINCT codice_tipo_contratto) FROM [bi].[AUTO_contratti_tipi];"
    },
    {
        "question": "Trova i contratti il cui venditore ha lo stesso nome del cliente (persona fisica).",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[CONTT_contatti] AS co ON cli.id_contatto = co.id_contatto WHERE v.descr_venditore = co.nome_contatto + ' ' + co.cognome_contatto;"
    },
    {
        "question": "Elenca i veicoli (targa) con data di acquisto ma senza data di immatricolazione registrata.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE dt_acquisto_veicolo IS NOT NULL AND dt_immatricolazione_veicolo IS NULL;"
    },
    {
        "question": "Qual è il canale di vendita associato al contratto con ID 'GF_CONTR123'?",
        "answer": "SELECT cv.descr_canale_vendita FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_canali_vendita] AS cv ON c.id_canale_vendita = cv.id_canale_vendita WHERE c.id_contratto = 'GF_CONTR123';"
    },
    {
        "question": "Mostra i contratti con valore finanziato, ma dove il flag finanziamento è 0 (incongruenza).",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 0 AND imp_netto_finanziato_contratto > 0;"
    },
    {
        "question": "Quali sono le aree (codice) che non hanno contratti associati?",
        "answer": "SELECT codice_area FROM [bi].[AUTO_aree] WHERE id_area NOT IN (SELECT DISTINCT id_area FROM [bi].[AUTO_contratti]);"
    },
    {
        "question": "Trova i contratti il cui importo netto è esattamente 25000 euro.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_contratto = 25000;"
    },
    {
        "question": "Elenca i primi 10 contratti per data di apertura.",
        "answer": "SELECT TOP 10 nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] ORDER BY dt_apertura_contratto ASC;"
    },
    {
        "question": "Qual è il margine previsto totale per i contratti con ricavo previsto superiore a 30000?",
        "answer": "SELECT SUM(ISNULL(imp_ricavo_previsto_redd, 0) - ISNULL(imp_costo_previsto_redd, 0)) FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd > 30000;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il costo consuntivo è maggiore del ricavo consuntivo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd > imp_ricavo_consuntivo_redd;"
    },
    {
        "question": "Quali descrizioni di spesa sono associate al tipo costo/ricavo 'Spese Amministrative'?",
        "answer": "SELECT DISTINCT descr_spesa_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd = 'Spese Amministrative' AND descr_spesa_redd IS NOT NULL;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con costo previsto nullo o zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NULL OR imp_costo_previsto_redd = 0;"
    },
    {
        "question": "Trova i contratti (ID Redd) che hanno un indice contabile spesa pari a 5.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_spesa_redd = 5;"
    },
    {
        "question": "Qual è il valore medio delle provvigioni sul ricavo consuntivo (provvigione / ricavo cons)?",
        "answer": "SELECT AVG(imp_netto_provvigione_redd / NULLIF(imp_ricavo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd > 0 AND imp_netto_provvigione_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i livelli di margine univoci presenti nella vista redditività.",
        "answer": "SELECT DISTINCT liv_margine_redd, descr_margine_redd FROM [bi].[AUTO_contratti_redd];"
    },
    {
        "question": "Quali contratti (ID Redd) hanno associato una spesa con descrizione 'Tassa di Registro'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_spesa_redd = 'Tassa di Registro';"
    },
    {
        "question": "Trova il ricavo consuntivo totale per le righe con descrizione 'Manutenzione Programmata'.",
        "answer": "SELECT SUM(imp_ricavo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd = 'Manutenzione Programmata';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il ricavo consuntivo è zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd = 0;"
    },
    {
        "question": "Qual è la commessa con la maggior differenza (in giorni) tra data creazione e data apertura?",
        "answer": "SELECT TOP 1 nr_commessa, DATEDIFF(day, dt_creazione_commessa, dt_apertura_commessa) AS DiffGiorni FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa IS NOT NULL AND dt_apertura_commessa IS NOT NULL ORDER BY DiffGiorni DESC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina la cui descrizione contiene 'SRL'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.descr_cliente_officina LIKE '%SRL%';"
    },
    {
        "question": "Quanti veicoli diversi (per targa) sono entrati in ogni officina?",
        "answer": "SELECT o.descr_officina, COUNT(DISTINCT v.targa_veicolo_officina) AS VeicoliUnici FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina GROUP BY o.descr_officina;"
    },
    {
        "question": "Elenca le commesse la cui data di fine lavori coincide con la data di chiusura.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_fine_lavoro_commessa = dt_chiusura_commessa;"
    },
    {
        "question": "Trova le commesse senza codice ODL, EstGar e ServCard.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE (codice_odl_commessa IS NULL OR codice_odl_commessa = '') AND (codice_estgar_commessa IS NULL OR codice_estgar_commessa = '') AND (codice_servicard_commessa IS NULL OR codice_servicard_commessa = '');"
    },
    {
        "question": "Qual è il valore massimo delle spese rifiuti registrato?",
        "answer": "SELECT MAX(imp_netto_spese_rifiuti_commessa) FROM [bi].[OFF_commesse];"
    },
    {
        "question": "Mostra le commesse per veicoli la cui descrizione contiene 'Berlina'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_veicolo_officina LIKE '%Berlina%';"
    },
    {
        "question": "Quante commesse sono state aperte di lunedì?",
        "answer": "SELECT COUNT(id_commessa) FROM [bi].[OFF_commesse] WHERE DATEPART(weekday, dt_apertura_commessa) = 2;"
    },
    {
        "question": "Elenca gli accettatori che non hanno commesse associate.",
        "answer": "SELECT descr_accettatore FROM [bi].[OFF_accettatori] WHERE descr_accettatore NOT IN (SELECT DISTINCT accettatore_commessa FROM [bi].[OFF_commesse] WHERE accettatore_commessa IS NOT NULL);"
    },
    {
        "question": "Trova le commesse la cui data veicolo pronto è NULL ma la data chiusura è definita.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa IS NULL AND dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno più di 5 inconvenienti registrati.",
        "answer": "SELECT id_commessa, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING COUNT(id_inconveniente) > 5;"
    },
    {
        "question": "Quali codici inconveniente esistono?",
        "answer": "SELECT DISTINCT codice_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE codice_inconveniente <> '-';"
    },
    {
        "question": "Mostra gli inconvenienti (ID) associati a interventi non in garanzia e non a carico cliente.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE (tipo_carico_cliente_inconveniente IS NULL OR tipo_carico_cliente_inconveniente = '') AND (tipo_carico_garanzia_inconveniente IS NULL OR tipo_carico_garanzia_inconveniente = '');"
    },
    {
        "question": "Quanti inconvenienti ci sono per ogni gruppo?",
        "answer": "SELECT gruppo_inconveniente, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] GROUP BY gruppo_inconveniente;"
    },
    {
        "question": "Trova gli ID commessa che hanno solo inconvenienti di tipo 'Nota Informativa'.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING MIN(tipo_inconveniente) = 'Nota Informativa' AND MAX(tipo_inconveniente) = 'Nota Informativa';"
    },
    {
        "question": "Qual è il valore medio delle righe di commessa (importo netto)?",
        "answer": "SELECT AVG(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Mostra le righe dove il costo medio è superiore al prezzo unitario.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_medio > imp_netto_prezzo_unitario_commessa;"
    },
    {
        "question": "Elenca le UM (unità di misura) utilizzate nelle righe di commessa.",
        "answer": "SELECT DISTINCT codice_umis_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_umis_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è la quantità totale movimentata per l'articolo 'ART001'?",
        "answer": "SELECT SUM(qta_commessa) FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa = 'ART001';"
    },
    {
        "question": "Trova le righe di commessa relative a lavorazioni interne (non lavori terzi).",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_lavori_terzi_commessa IS NULL OR imp_netto_costo_lavori_terzi_commessa = 0;"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni eseguite di venerdì?",
        "answer": "SELECT AVG(costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE DATEPART(weekday, dt_movimento_lavorazione) = 6;"
    },
    {
        "question": "Mostra le lavorazioni il cui codice voce inizia con 'LAV'.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione, codice_voce_lavorazione_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE codice_voce_lavorazione_lavorazione LIKE 'LAV%';"
    },
    {
        "question": "Quante ore totali a tempario sono state registrate?",
        "answer": "SELECT SUM(ore_tempario_lavorazione) FROM [bi].[OFF_commesse_lavorazioni];"
    },
    {
        "question": "Elenca le lavorazioni eseguite da esecutori senza qualifica specificata.",
        "answer": "SELECT l.id_commessa, l.progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE e.qualifica_esecutore IS NULL OR e.qualifica_esecutore = '';"
    },
    {
        "question": "Trova le commesse che hanno avuto lavorazioni ma nessun costo associato a quelle lavorazioni.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE l.costo_lavorazione IS NULL OR l.costo_lavorazione = 0;"
    },
    {
        "question": "Qual è la media giornaliera di ore di presenza per tecnico nell'ultimo mese?",
        "answer": "SELECT AVG(ore_presenza) FROM [bi].[OFF_presenze] WHERE dt_presenza >= DATEADD(month, -1, GETDATE());"
    },
    {
        "question": "Mostra gli esecutori che hanno registrato ore di presenza in più di un'officina.",
        "answer": "SELECT e.descr_esecutore, COUNT(DISTINCT p.id_officina) AS NumOfficine FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING COUNT(DISTINCT p.id_officina) > 1;"
    },
    {
        "question": "Qual è il totale delle ore teoriche per tutti gli esecutori per l'anno 2023?",
        "answer": "SELECT SUM(ore_teoriche_presenza) FROM [bi].[OFF_presenze] WHERE YEAR(dt_presenza) = 2023;"
    },
    {
        "question": "Trova le date con zero ore di straordinario registrate per tutti.",
        "answer": "SELECT dt_presenza FROM [bi].[OFF_presenze] GROUP BY dt_presenza HAVING SUM(ore_straordinarie_presenza) = 0;"
    },
    {
        "question": "Quali esecutori hanno un costo straordinario inferiore al costo orario normale?",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE p.imp_costo_straordinario_presenza < p.imp_costo_orario_presenza;"
    },
    {
        "question": "Elenca i noleggi consegnati nella sede 'Sede Est'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE sede_consegna_noleggio = 'Sede Est';"
    },
    {
        "question": "Qual è il numero totale di giorni fatturati per i noleggi non a lungo termine?",
        "answer": "SELECT SUM(giorni_fatturati_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'N';"
    },
    {
        "question": "Trova i noleggi con km di consegna inferiori ai km di ritiro (possibile errore).",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE km_consegna_noleggio < km_ritiro_noleggio;"
    },
    {
        "question": "Mostra i noleggi con pagamento 'Carta di Credito'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE pagamento_noleggio = 2; -- Assumendo 2 = Carta di Credito"
    },
    {
        "question": "Qual è il costo totale (veicolo + carburante) medio per noleggio?",
        "answer": "SELECT AVG(ISNULL(costo_veicolo_noleggio, 0) + ISNULL(costo_carburante_noleggio, 0)) FROM [bi].[OFF_noleggi];"
    },
    {
        "question": "Cerca i contatti con ID Anagrafica '12345'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE id_anagrafica_contatto = 12345;"
    },
    {
        "question": "Quali sono i contatti senza indirizzo specificato?",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE indirizzo_contatto IS NULL OR indirizzo_contatto = '';"
    },
    {
        "question": "Mostra i contatti il cui cognome contiene 'De Luca'.",
        "answer": "SELECT nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE cognome_contatto LIKE '%De Luca%';"
    },
    {
        "question": "Elenca i contatti con email e telefono registrati.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE email_contatto IS NOT NULL AND email_contatto <> '' AND telefono_contatto IS NOT NULL AND telefono_contatto <> '';"
    },
    {
        "question": "Quanti contatti per ogni provincia?",
        "answer": "SELECT provincia_contatto, COUNT(id_contatto) AS NumeroContatti FROM [bi].[CONTT_contatti] GROUP BY provincia_contatto ORDER BY NumeroContatti DESC;"
    },
    {
        "question": "Trova il venditore associato al contratto dell'auto (targa) che ha avuto la commessa officina 'COM6001'.",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina JOIN [bi].[AUTO_veicoli] av ON ov.targa_veicolo_officina = av.targa_veicolo JOIN [bi].[AUTO_contratti] ac ON av.id_veicolo = ac.id_veicolo JOIN [bi].[AUTO_venditori] v ON ac.id_venditore = v.id_venditore WHERE oc.nr_commessa = 'COM6001';"
    },
    {
        "question": "Qual è il margine medio dei contratti auto per i clienti che hanno avuto commesse in officina con costo > 100€?",
        "answer": "WITH WorkshopSpend AS ( SELECT oc.id_cliente_officina FROM [bi].[OFF_commesse] oc JOIN (SELECT id_commessa, SUM(ISNULL(imp_netto_costo_commessa,0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0)) AS CostoTot FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa UNION ALL SELECT id_commessa, SUM(ISNULL(costo_lavorazione,0)) FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa) AS Costi ON oc.id_commessa = Costi.id_commessa GROUP BY oc.id_cliente_officina HAVING SUM(Costi.CostoTot) > 100 ) SELECT AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[AUTO_contratti_redd] r ON ac.id_contratto_redd = r.id_contratto_redd WHERE cli.id_contatto IN (SELECT id_cliente_officina FROM WorkshopSpend);"
    },
    {
        "question": "Elenca le auto (targa) che sono state oggetto sia di noleggio che di commessa officina nello stesso mese.",
        "answer": "SELECT DISTINCT ov.targa_veicolo_officina FROM [bi].[OFF_noleggi] n JOIN [bi].[OFF_veicoli] ov ON n.targa_noleggio = ov.targa_veicolo_officina WHERE EXISTS ( SELECT 1 FROM [bi].[OFF_commesse] oc WHERE oc.id_veicolo_officina = ov.id_veicolo_officina AND YEAR(oc.dt_apertura_commessa) = YEAR(n.dt_ritiro_noleggio) AND MONTH(oc.dt_apertura_commessa) = MONTH(n.dt_ritiro_noleggio) );"
    },
    {
        "question": "Mostra, per ogni venditore, la differenza tra il numero di contratti aperti e il numero di contratti chiusi nell'ultimo anno.",
        "answer": "WITH ContractsStatus AS ( SELECT id_venditore, SUM(CASE WHEN status_contratto <> 'Chiuso' THEN 1 ELSE 0 END) AS Aperti, SUM(CASE WHEN status_contratto = 'Chiuso' THEN 1 ELSE 0 END) AS Chiusi FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto >= DATEADD(year, -1, GETDATE()) GROUP BY id_venditore ) SELECT v.descr_venditore, cs.Aperti - cs.Chiusi AS DifferenzaApertiChiusi FROM ContractsStatus cs JOIN [bi].[AUTO_venditori] v ON cs.id_venditore = v.id_venditore;"
    },
    {
        "question": "Calcola il 'tasso di ritorno in officina' (num commesse / num contratti venduti) per marca veicolo.",
        "answer": "WITH VenditeMarca AS ( SELECT av.marca_veicolo, COUNT(DISTINCT ac.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo GROUP BY av.marca_veicolo ), CommesseMarca AS ( SELECT ov.descr_marca_veicolo_officina, COUNT(DISTINCT oc.id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina GROUP BY ov.descr_marca_veicolo_officina ) SELECT vm.marca_veicolo, CAST(cm.NumCommesse AS FLOAT) / NULLIF(vm.NumContratti, 0) AS TassoRitorno FROM VenditeMarca vm JOIN CommesseMarca cm ON vm.marca_veicolo = cm.descr_marca_veicolo_officina;"
    },
    {
        "question": "Qual è il valore medio del contratto per le auto vendute con garanzia interna?",
        "answer": "SELECT AVG(imp_netto_contratto) FROM [bi].[AUTO_contratti] WHERE codice_garanzia_interna_contratto <> 'ND';"
    },
    {
        "question": "Mostra i primi 5 contratti per importo netto.",
        "answer": "SELECT TOP 5 nr_contratto, imp_netto_contratto FROM [bi].[AUTO_contratti] ORDER BY imp_netto_contratto DESC;"
    },
    {
        "question": "Elenca i tipi di vendita (descrizione) utilizzati nell'area 'Nord-Ovest'.",
        "answer": "SELECT DISTINCT tv.descr_tipo_vendita FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_aree] a ON c.id_area = a.id_area JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE a.descr_area = 'Nord-Ovest';"
    },
    {
        "question": "Quanti contratti aperti ha ciascun venditore?",
        "answer": "SELECT v.descr_venditore, COUNT(c.id_contratto) AS ContrattiAperti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE c.status_contratto <> 'Chiuso' GROUP BY v.descr_venditore ORDER BY ContrattiAperti DESC;"
    },
    {
        "question": "Qual è il valore minimo di permuta registrato?",
        "answer": "SELECT MIN(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti che hanno sia assicurazione che finanziamento, ma nessuna permuta.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 1 AND has_finanziamento_contratto = 1 AND count_permute_contratto = 0;"
    },
    {
        "question": "Quali clienti (descrizione) hanno contratti associati a veicoli con più di 200.000 km?",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.km_percorsi_veicolo > 200000;"
    },
    {
        "question": "Mostra i contratti dell'azienda 'Autoteam' aperti nel 2023.",
        "answer": "SELECT c.nr_contratto, c.dt_apertura_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE YEAR(c.dt_apertura_contratto) = 2023 AND a.descr_azienda = 'Autoteam';"
    },
    {
        "question": "Qual è la sede (descrizione) con il maggior numero di contratti aperti?",
        "answer": "SELECT TOP 1 s.descr_sede, COUNT(c.id_contratto) AS NumContrattiAperti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede WHERE c.status_contratto <> 'Chiuso' GROUP BY s.descr_sede ORDER BY NumContrattiAperti DESC;"
    },
    {
        "question": "Elenca le provenienze (descrizione) dei veicoli associati a contratti con garanzia interna.",
        "answer": "SELECT DISTINCT p.descr_provenienza FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE c.codice_garanzia_interna_contratto <> 'ND';"
    },
    {
        "question": "Qual è il valore medio finanziato per i contratti di tipo 'Leasing Finanziario'?",
        "answer": "SELECT AVG(c.imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE ct.descr_tipo_contratto = 'Leasing Finanziario';"
    },
    {
        "question": "Mostra i contratti dove il valore di listino è uguale al valore netto (nessuno sconto/costo).",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_listino_contratto = imp_netto_contratto;"
    },
    {
        "question": "Quanti canali di vendita distinti (codice) esistono?",
        "answer": "SELECT COUNT(DISTINCT codice_canale_vendita) FROM [bi].[AUTO_canali_vendita];"
    },
    {
        "question": "Trova i contratti relativi a veicoli la cui ubicazione attuale è 'Parco Esposizione'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.ubicazione_attuale_veicolo = 'Parco Esposizione';"
    },
    {
        "question": "Elenca i tipi di contatto cliente (descrizione) associati a contratti chiusi senza finanziamento.",
        "answer": "SELECT DISTINCT tc.descr_tipo_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contatti_tipi] AS tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.status_contratto = 'Chiuso' AND c.has_finanziamento_contratto = 0;"
    },
    {
        "question": "Qual è il numero massimo di permute registrato in un singolo contratto?",
        "answer": "SELECT MAX(count_permute_contratto) FROM [bi].[AUTO_contratti];"
    },
    {
        "question": "Mostra i veicoli (ID Gestionale) che hanno un contratto associato ma status 'Da Fatturare'.",
        "answer": "SELECT v.id_gesionale_veicolo FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.status_veicolo = 'Da Fatturare';"
    },
    {
        "question": "Quali tipi di vendita (codice) sono associati a contratti con assicurazione?",
        "answer": "SELECT DISTINCT tv.codice_tipo_vendita FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.has_assicurazione_contratto = 1;"
    },
    {
        "question": "Trova i contratti aperti nel mese corrente.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto >= DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) AND dt_apertura_contratto < DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 1, 0);"
    },
    {
        "question": "Elenca le date di apertura dei contratti gestiti dal venditore con ID 'VEND001'.",
        "answer": "SELECT dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE id_venditore = (SELECT id_venditore FROM [bi].[AUTO_venditori] WHERE codice_venditore = 'VEND001');"
    },
    {
        "question": "Qual è il margine previsto medio per i contratti con costi previsti > 0?",
        "answer": "SELECT AVG(ISNULL(imp_ricavo_previsto_redd, 0) - ISNULL(imp_costo_previsto_redd, 0)) FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd > 0;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il costo consuntivo è zero ma il costo previsto era positivo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd = 0 AND imp_costo_previsto_redd > 0;"
    },
    {
        "question": "Quali descrizioni di costo esistono per il tipo 'Costi Veicolo Usato'?",
        "answer": "SELECT DISTINCT descr_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd = 'Costi Veicolo Usato';"
    },
    {
        "question": "Elenca i contratti (ID Redd) con ricavo consuntivo superiore a 50000 e margine negativo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd > 50000 AND (ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) < 0;"
    },
    {
        "question": "Trova i contratti (ID Redd) con indice contabile costo uguale all'indice contabile spesa.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd = idx_contabile_spesa_redd AND idx_contabile_costo_redd IS NOT NULL;"
    },
    {
        "question": "Qual è il valore mediano delle provvigioni (approssimato)?",
        "answer": "SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY imp_netto_provvigione_redd) OVER () AS MedianProvvigione FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i livelli di margine che non hanno mai avuto un valore consuntivo (costo o ricavo) associato.",
        "answer": "SELECT DISTINCT liv_margine_redd, descr_margine_redd FROM [bi].[AUTO_contratti_redd] WHERE liv_margine_redd NOT IN (SELECT DISTINCT liv_margine_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL OR imp_ricavo_consuntivo_redd IS NOT NULL);"
    },
    {
        "question": "Quali contratti (ID Redd) hanno associato una spesa o un costo con descrizione contenente 'Bonus'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_costo_redd LIKE '%Bonus%' OR descr_spesa_redd LIKE '%Bonus%';"
    },
    {
        "question": "Trova il ricavo previsto totale per il livello margine 'Ricavi Accessori'.",
        "answer": "SELECT SUM(imp_ricavo_previsto_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Ricavi Accessori';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il ricavo previsto dal venditore è nullo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_venditore_redd IS NULL;"
    },
    {
        "question": "Qual è la commessa con la data di previsione consegna più lontana nel futuro?",
        "answer": "SELECT TOP 1 nr_commessa, dt_previsione_consegna_commessa FROM [bi].[OFF_commesse] WHERE dt_previsione_consegna_commessa > GETDATE() ORDER BY dt_previsione_consegna_commessa DESC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina con ID Contatto 'CONT999'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.id_contatto = 'CONT999';"
    },
    {
        "question": "Quante commesse sono state aperte per ogni tipo (codice)?",
        "answer": "SELECT ct.codice_tipo_commessa, COUNT(c.id_commessa) AS NumeroCommesse FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa GROUP BY ct.codice_tipo_commessa;"
    },
    {
        "question": "Elenca le commesse la cui data di inizio lavori è NULL ma la data di fine lavori è definita.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa IS NULL AND dt_fine_lavoro_commessa IS NOT NULL;"
    },
    {
        "question": "Trova le commesse senza spese per materiale di consumo.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE imp_netto_materiale_consumo_commessa IS NULL OR imp_netto_materiale_consumo_commessa = 0;"
    },
    {
        "question": "Qual è il tempo medio (in ore) tra la data veicolo pronto e la data di consegna effettiva?",
        "answer": "SELECT AVG(DATEDIFF(hour, dt_veicolo_pronto_commessa, dt_effettiva_consegna_commessa)) FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa IS NOT NULL AND dt_effettiva_consegna_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli del gruppo marca 'Premium'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.gruppo_marca_veicolo_officina = 'Premium';"
    },
    {
        "question": "Quante commesse totali ha gestito l'accettatore 'Luca Rossi'?",
        "answer": "SELECT COUNT(id_commessa) FROM [bi].[OFF_commesse] WHERE accettatore_commessa = 'Luca Rossi';"
    },
    {
        "question": "Elenca le officine che hanno gestito commesse per clienti senza Partita IVA.",
        "answer": "SELECT DISTINCT o.descr_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE c.partita_iva_cliente_commessa IS NULL OR c.partita_iva_cliente_commessa = '';"
    },
    {
        "question": "Trova le commesse la cui data di creazione è nel mese precedente.",
        "answer": "SELECT nr_commessa, dt_creazione_commessa FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa >= DATEADD(month, -1, DATEADD(day, 1-DAY(GETDATE()), GETDATE())) AND dt_creazione_commessa < DATEADD(day, 1-DAY(GETDATE()), GETDATE());"
    },
    {
        "question": "Quali inconvenienti (codice) sono associati a interventi di tipo 'Carrozzeria'?",
        "answer": "SELECT DISTINCT i.codice_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS it ON i.id_tipo_intervento = it.id_tipo_intervento WHERE it.descr_tipo_intervento = 'Carrozzeria';"
    },
    {
        "question": "Mostra gli inconvenienti (ID) associati a commesse dell'azienda 'CV'.",
        "answer": "SELECT i.id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa WHERE c.id_azienda = 'CV';"
    },
    {
        "question": "Quanti inconvenienti per ogni tipo di carico cliente?",
        "answer": "SELECT tipo_carico_cliente_inconveniente, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] GROUP BY tipo_carico_cliente_inconveniente;"
    },
    {
        "question": "Elenca gli inconvenienti con riga 0 o negativa.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE ISNUMERIC(riga_inconveniente) = 1 AND CAST(riga_inconveniente AS INT) <= 0;"
    },
    {
        "question": "Trova le commesse che hanno avuto inconvenienti ma nessuna riga di lavorazione associata a tali inconvenienti.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_inconvenienti] i JOIN [bi].[OFF_commesse] c ON i.id_commessa = c.id_commessa WHERE i.id_inconveniente NOT IN (SELECT DISTINCT id_inconveniente FROM [bi].[OFF_commesse_lavorazioni] WHERE id_inconveniente IS NOT NULL);"
    },
    {
        "question": "Qual è il valore massimo di una riga di commessa che è stata data in omaggio?",
        "answer": "SELECT MAX(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 1;"
    },
    {
        "question": "Mostra le righe dove il prezzo unitario è maggiore del prezzo di listino.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_prezzo_unitario_commessa > imp_netto_prezzo_listino_commessa;"
    },
    {
        "question": "Elenca i codici articolo utilizzati dall'esecutore 'Tecnico01'.",
        "answer": "SELECT DISTINCT r.codice_articolo_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_esecutori] AS e ON r.id_esecutore = e.id_esecutore WHERE e.codice_esecutore = 'Tecnico01' AND r.codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è la quantità totale di articoli associati al tipo intervento 'Sostituzione Pneumatici'?",
        "answer": "SELECT SUM(r.qta_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_interventi_tipi] AS it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE it.descr_tipo_intervento = 'Sostituzione Pneumatici' AND r.codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Trova le righe di commessa senza codice articolo ma con una quantità definita.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NULL AND qta_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni associate a inconvenienti di gruppo 'Trasmissione'?",
        "answer": "SELECT AVG(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse_inconvenienti] AS i ON l.id_inconveniente = i.id_inconveniente WHERE i.gruppo_inconveniente = 'Trasmissione';"
    },
    {
        "question": "Mostra le lavorazioni la cui descrizione contiene 'controllo livelli'.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione, descr_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE descr_riga_lavorazione LIKE '%controllo livelli%';"
    },
    {
        "question": "Quante ore totali sono state fatturate dagli esecutori di tipo 'Elettrauto'?",
        "answer": "SELECT SUM(l.ore_fatturate_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori_tipi] AS et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE et.descr_tipo_esecutore = 'Elettrauto';"
    },
    {
        "question": "Elenca le lavorazioni con costo nullo.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_lavorazione = 0;"
    },
    {
        "question": "Trova il rapporto medio tra ore a tempario e ore lavorate.",
        "answer": "SELECT AVG(ore_tempario_lavorazione / NULLIF(ore_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione > 0;"
    },
    {
        "question": "Qual è la media delle ore teoriche giornaliere per l'officina 'Service Rapido'?",
        "answer": "SELECT AVG(OreTeoricheGiorno) FROM ( SELECT dt_presenza, SUM(ore_teoriche_presenza) AS OreTeoricheGiorno FROM [bi].[OFF_presenze] WHERE id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE descr_officina = 'Service Rapido') GROUP BY dt_presenza ) AS Medie;"
    },
    {
        "question": "Mostra gli esecutori che hanno avuto solo ore di presenza e nessuna ora lavorata nell'ultimo mese.",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.dt_presenza >= DATEADD(month,-1,GETDATE()) AND p.ore_presenza > 0 AND e.id_esecutore NOT IN (SELECT DISTINCT id_esecutore FROM [bi].[OFF_commesse_lavorazioni] WHERE dt_movimento_lavorazione >= DATEADD(month,-1,GETDATE()));"
    },
    {
        "question": "Qual è il totale delle ore di permesso usufruite da accettatori?",
        "answer": "SELECT SUM(ore_permessi_presenza) FROM [bi].[OFF_presenze] WHERE accettatore_presenza = 1;"
    },
    {
        "question": "Trova le date in cui nessun esecutore ha registrato straordinari.",
        "answer": "SELECT dt_presenza FROM [bi].[OFF_presenze] GROUP BY dt_presenza HAVING SUM(ore_straordinarie_presenza) = 0;"
    },
    {
        "question": "Quale tipo esecutore ha il minor costo orario medio?",
        "answer": "SELECT TOP 1 et.descr_tipo_esecutore, AVG(p.imp_costo_orario_presenza) AS CostoMedio FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE p.imp_costo_orario_presenza IS NOT NULL GROUP BY et.descr_tipo_esecutore ORDER BY CostoMedio ASC;"
    },
    {
        "question": "Elenca i noleggi associati all'azienda 'A9'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE id_azienda = 'A9';"
    },
    {
        "question": "Qual è il numero massimo di giorni fatturati per un singolo noleggio?",
        "answer": "SELECT MAX(giorni_fatturati_noleggio) FROM [bi].[OFF_noleggi];"
    },
    {
        "question": "Trova i noleggi la cui data di ritiro è avvenuta di domenica.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE DATEPART(weekday, dt_ritiro_noleggio) = 1;"
    },
    {
        "question": "Mostra i noleggi con modello alternativo specificato.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, modello_alternativo_noleggio FROM [bi].[OFF_noleggi] WHERE modello_alternativo_noleggio IS NOT NULL AND modello_alternativo_noleggio <> '';"
    },
    {
        "question": "Qual è il costo totale medio (veicolo + carburante + km extra * costo_km_ipotetico) per noleggio?",
        "answer": "SELECT AVG(ISNULL(costo_veicolo_noleggio, 0) + ISNULL(costo_carburante_noleggio, 0) + (ISNULL(km_extra_noleggio, 0) * 0.25)) FROM [bi].[OFF_noleggi]; -- Ipotizzando costo km extra 0.25"
    },
    {
        "question": "Cerca i contatti modificati tra il 1 Feb 2024 e il 28 Feb 2024.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE dt_modifica_contatto >= '2024-02-01' AND dt_modifica_contatto < '2024-03-01';"
    },
    {
        "question": "Quali sono i contatti con CAP non numerico o di lunghezza diversa da 5?",
        "answer": "SELECT id_contatto, cap_contatto FROM [bi].[CONTT_contatti] WHERE ISNUMERIC(cap_contatto) = 0 OR LEN(cap_contatto) <> 5;"
    },
    {
        "question": "Mostra i contatti il cui nome o ragione sociale è 'Test'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, nome_contatto FROM [bi].[CONTT_contatti] WHERE nome_contatto = 'Test' OR ragione_sociale_contatto = 'Test';"
    },
    {
        "question": "Elenca i contatti con partita IVA che inizia con 'IT'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, partita_iva_contatto FROM [bi].[CONTT_contatti] WHERE partita_iva_contatto LIKE 'IT%';"
    },
    {
        "question": "Quanti contatti per ogni tipo soggetto (PF/Azienda)?",
        "answer": "SELECT tipo_soggetto_contatto, COUNT(id_contatto) AS NumeroContatti FROM [bi].[CONTT_contatti] GROUP BY tipo_soggetto_contatto;"
    },
    {
        "question": "Trova le auto (targa) vendute a clienti che hanno avuto commesse in officina per un importo totale superiore a 2000 euro.",
        "answer": "WITH CustomerWorkshopSpend AS ( SELECT oc.id_cliente_officina, SUM(r.imp_netto_riga_commessa) AS TotalSpend FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_commesse_righe] r ON oc.id_commessa = r.id_commessa GROUP BY oc.id_cliente_officina HAVING SUM(r.imp_netto_riga_commessa) > 2000 ) SELECT DISTINCT av.targa_veicolo FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE cli.id_contatto IN (SELECT id_cliente_officina FROM CustomerWorkshopSpend);"
    },
    {
        "question": "Mostra il ranking delle officine per numero di ore lavorate nell'ultimo mese.",
        "answer": "WITH MonthlyLabor AS ( SELECT id_officina, SUM(ore_lavorazione) AS TotalHours FROM [bi].[OFF_commesse_lavorazioni] WHERE dt_movimento_lavorazione >= DATEADD(month, -1, GETDATE()) GROUP BY id_officina ) SELECT o.descr_officina, ml.TotalHours, RANK() OVER (ORDER BY ml.TotalHours DESC) AS Ranking FROM MonthlyLabor ml JOIN [bi].[OFF_officine] o ON ml.id_officina = o.id_officina;"
    },
    {
        "question": "Elenca i contratti auto il cui veicolo associato ha avuto un noleggio attivo.",
        "answer": "SELECT DISTINCT ac.nr_contratto FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo JOIN [bi].[OFF_noleggi] n ON av.targa_veicolo = n.targa_noleggio WHERE n.dt_chiusura_noleggio IS NULL;"
    },
    {
        "question": "Calcola, per ogni gruppo venditori, il margine medio percentuale dei contratti.",
        "answer": "SELECT v.gruppo_venditori, AVG( (ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) / NULLIF(ISNULL(r.imp_ricavo_consuntivo_redd, 0), 0) ) * 100 AS MargineMedioPerc FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE ISNULL(r.imp_ricavo_consuntivo_redd, 0) <> 0 GROUP BY v.gruppo_venditori;"
    },
    {
        "question": "Mostra i 5 accettatori con il tempo medio di chiusura commessa più basso.",
        "answer": "SELECT TOP 5 accettatore_commessa, AVG(DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa)) AS TempoMedioChiusura FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL GROUP BY accettatore_commessa ORDER BY TempoMedioChiusura ASC;"
    },
    {
        "question": "Quali tipi di contratto hanno un valore medio superiore a 35000 euro?",
        "answer": "SELECT ct.descr_tipo_contratto, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto GROUP BY ct.descr_tipo_contratto HAVING AVG(c.imp_netto_contratto) > 35000;"
    },
    {
        "question": "Mostra i 10 veicoli (targa) con la data di immatricolazione più recente.",
        "answer": "SELECT TOP 10 targa_veicolo, dt_immatricolazione_veicolo FROM [bi].[AUTO_veicoli] WHERE dt_immatricolazione_veicolo IS NOT NULL ORDER BY dt_immatricolazione_veicolo DESC;"
    },
    {
        "question": "Elenca i contratti senza valore di listino specificato.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_listino_contratto IS NULL OR imp_netto_listino_contratto = 0;"
    },
    {
        "question": "Quanti clienti diversi (basati su ID Contatto) ha seguito ogni venditore?",
        "answer": "SELECT v.descr_venditore, COUNT(DISTINCT c.id_cliente) AS ClientiUnici FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore GROUP BY v.descr_venditore;"
    },
    {
        "question": "Qual è il valore totale delle permute per veicoli con più di 100.000 km?",
        "answer": "SELECT SUM(c.imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.km_percorsi_veicolo > 100000 AND c.count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti di tipo 'Acquisto Diretto' che includono un finanziamento.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE ct.descr_tipo_contratto = 'Acquisto Diretto' AND c.has_finanziamento_contratto = 1;"
    },
    {
        "question": "Quali sedi (descrizione) hanno venduto auto di marca 'Jeep'?",
        "answer": "SELECT DISTINCT s.descr_sede FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.marca_veicolo = 'Jeep';"
    },
    {
        "question": "Mostra i contratti dell'ultimo mese che hanno una garanzia interna specificata.",
        "answer": "SELECT nr_contratto, garanzia_interna_contratto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto >= DATEADD(month, -1, GETDATE()) AND codice_garanzia_interna_contratto <> 'ND';"
    },
    {
        "question": "Qual è la provenienza (descrizione) associata al maggior numero di contratti con assicurazione?",
        "answer": "SELECT TOP 1 p.descr_provenienza, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE c.has_assicurazione_contratto = 1 GROUP BY p.descr_provenienza ORDER BY NumContratti DESC;"
    },
    {
        "question": "Elenca i clienti (descrizione) che hanno contratti sia aperti che chiusi.",
        "answer": "SELECT cli.descr_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.descr_cliente HAVING MIN(c.status_contratto) <> MAX(c.status_contratto);"
    },
    {
        "question": "Qual è il tipo di vendita (gruppo) con il valore medio di contratto più alto?",
        "answer": "SELECT TOP 1 tv.gruppo_tipo_vendita, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita GROUP BY tv.gruppo_tipo_vendita ORDER BY ValoreMedio DESC;"
    },
    {
        "question": "Mostra i contratti dove il valore finanziato è esattamente 10000 euro.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_finanziato_contratto = 10000;"
    },
    {
        "question": "Quanti tipi di contatto (codice) distinti esistono?",
        "answer": "SELECT COUNT(DISTINCT codice_tipo_contatto) FROM [bi].[AUTO_contatti_tipi];"
    },
    {
        "question": "Trova i contratti relativi a veicoli il cui canale di uscita è 'Esportazione'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.canale_uscita_veicolo = 'Esportazione';"
    },
    {
        "question": "Elenca i gruppi di aree aziendali disponibili.",
        "answer": "SELECT DISTINCT gruppo_area FROM [bi].[AUTO_aree] WHERE gruppo_area IS NOT NULL;"
    },
    {
        "question": "Qual è l'importo massimo di permuta registrato per un contratto con assicurazione?",
        "answer": "SELECT MAX(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 1 AND count_permute_contratto > 0;"
    },
    {
        "question": "Mostra i veicoli (ID Gestionale) che sono stati ritirati (hanno un contratto di ritiro associato).",
        "answer": "SELECT id_gesionale_veicolo FROM [bi].[AUTO_veicoli] WHERE id_contratto_ritiro_veicolo IS NOT NULL;"
    },
    {
        "question": "Quali aziende hanno contratti aperti?",
        "answer": "SELECT DISTINCT a.descr_azienda FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE c.status_contratto <> 'Chiuso';"
    },
    {
        "question": "Trova i contratti la cui data di chiusura è avvenuta più di 6 mesi fa.",
        "answer": "SELECT nr_contratto, dt_chiusura_contratto FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto < DATEADD(month, -6, GETDATE());"
    },
    {
        "question": "Elenca i clienti (ID Contatto) che non hanno un codice master associato.",
        "answer": "SELECT id_cliente, descr_cliente FROM [bi].[AUTO_clienti] WHERE codice_master_cliente IS NULL OR codice_master_cliente = '';"
    },
    {
        "question": "Qual è il margine previsto medio per i contratti senza costi previsti registrati?",
        "answer": "SELECT AVG(ISNULL(imp_ricavo_previsto_redd, 0)) FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NULL OR imp_costo_previsto_redd = 0;"
    },
    {
        "question": "Mostra i contratti (ID Redd) con ricavo consuntivo zero ma ricavo previsto positivo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd = 0 AND imp_ricavo_previsto_redd > 0;"
    },
    {
        "question": "Quali descrizioni di spesa hanno un indice contabile spesa pari a 2?",
        "answer": "SELECT DISTINCT descr_spesa_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_spesa_redd = 2;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con valore provvigioni superiore al 5% del ricavo consuntivo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd > 0 AND imp_netto_provvigione_redd > (imp_ricavo_consuntivo_redd * 0.05);"
    },
    {
        "question": "Trova i contratti (ID Redd) associati a costi di tipo 'Marketing'.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd = 'Marketing';"
    },
    {
        "question": "Qual è la somma dei costi previsti dal venditore per il livello margine 'Primo Margine'?",
        "answer": "SELECT SUM(imp_costo_previsto_venditore_redd) FROM [bi].[AUTO_contratti_redd] WHERE liv_margine_redd = '1';"
    },
    {
        "question": "Mostra i codici spesa/costo che appaiono sia come costo che come ricavo.",
        "answer": "SELECT codice_spesa_costo_redd FROM [bi].[AUTO_contratti_redd] GROUP BY codice_spesa_costo_redd HAVING COUNT(DISTINCT CASE WHEN imp_costo_consuntivo_redd > 0 THEN 1 WHEN imp_ricavo_consuntivo_redd > 0 THEN 2 ELSE 0 END) > 1;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno una descrizione riga che contiene 'extra'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd LIKE '%extra%';"
    },
    {
        "question": "Trova il costo consuntivo minimo registrato per la voce 'Manodopera'.",
        "answer": "SELECT MIN(imp_costo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_costo_redd = 'Manodopera';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il tipo totale è 'TOTALE'.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd = 'TOTALE';"
    },
    {
        "question": "Qual è l'officina con il maggior numero di commesse chiuse in ritardo?",
        "answer": "SELECT TOP 1 o.descr_officina, COUNT(c.id_commessa) AS NumRitardi FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE c.dt_chiusura_commessa > c.dt_previsione_consegna_commessa GROUP BY o.descr_officina ORDER BY NumRitardi DESC;"
    },
    {
        "question": "Mostra le commesse per veicoli con codice interno 'ABC'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.codice_veicolo_officina = 'ABC';"
    },
    {
        "question": "Quanti accettatori distinti hanno lavorato nell'azienda 'GF'?",
        "answer": "SELECT COUNT(DISTINCT c.accettatore_commessa) FROM [bi].[OFF_commesse] AS c WHERE c.id_azienda = 'GF';"
    },
    {
        "question": "Elenca le commesse la cui data di creazione è antecedente al 2022.",
        "answer": "SELECT nr_commessa, dt_creazione_commessa FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa < '2022-01-01';"
    },
    {
        "question": "Trova le commesse senza spese per rifiuti registrate.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE imp_netto_spese_rifiuti_commessa IS NULL OR imp_netto_spese_rifiuti_commessa = 0;"
    },
    {
        "question": "Qual è il tempo massimo (in giorni) tra la data veicolo pronto e la data di consegna effettiva?",
        "answer": "SELECT MAX(DATEDIFF(day, dt_veicolo_pronto_commessa, dt_effettiva_consegna_commessa)) FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa IS NOT NULL AND dt_effettiva_consegna_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli la cui marca appartiene al gruppo 'Generalista'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.gruppo_marca_veicolo_officina = 'Generalista';"
    },
    {
        "question": "Quante commesse ha aperto l'accettatore 'Paolo Russo' nel mese corrente?",
        "answer": "SELECT COUNT(id_commessa) FROM [bi].[OFF_commesse] WHERE accettatore_commessa = 'Paolo Russo' AND dt_apertura_commessa >= DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) AND dt_apertura_commessa < DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 1, 0);"
    },
    {
        "question": "Elenca i tipi di commessa (descrizione) che non hanno mai avuto commesse associate.",
        "answer": "SELECT descr_tipo_commessa FROM [bi].[OFF_commesse_tipi] WHERE id_tipo_commessa NOT IN (SELECT DISTINCT id_tipo_commessa FROM [bi].[OFF_commesse]);"
    },
    {
        "question": "Trova le commesse la cui data di inizio lavori è la stessa della data di apertura.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa = dt_apertura_commessa;"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno almeno un inconveniente di tipo 'Manutenzione'.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente = 'Manutenzione';"
    },
    {
        "question": "Quali codici di carico sono stati usati per gli inconvenienti?",
        "answer": "SELECT DISTINCT codice_carico_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE codice_carico_inconveniente IS NOT NULL;"
    },
    {
        "question": "Mostra gli inconvenienti (descrizione breve) associati a interventi non in garanzia.",
        "answer": "SELECT DISTINCT i.descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i WHERE i.tipo_carico_garanzia_inconveniente IS NULL OR i.tipo_carico_garanzia_inconveniente = '';"
    },
    {
        "question": "Quanti inconvenienti per ogni tipo (codice)?",
        "answer": "SELECT codice_inconveniente, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] WHERE codice_inconveniente <> '-' GROUP BY codice_inconveniente;"
    },
    {
        "question": "Trova le commesse senza inconvenienti registrati.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti]);"
    },
    {
        "question": "Qual è il valore minimo di una riga di commessa (importo netto)?",
        "answer": "SELECT MIN(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] WHERE imp_netto_riga_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le righe di commessa con UM 'KG'.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_umis_commessa = 'KG';"
    },
    {
        "question": "Elenca i tipi di intervento (descrizione) associati a righe omaggio.",
        "answer": "SELECT DISTINCT it.descr_tipo_intervento FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_interventi_tipi] AS it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE r.is_omaggio_commessa = 1;"
    },
    {
        "question": "Qual è il valore totale delle righe per l'esecutore 'Team Esterno'?",
        "answer": "SELECT SUM(r.imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_esecutori] AS e ON r.id_esecutore = e.id_esecutore WHERE e.descr_esecutore = 'Team Esterno';"
    },
    {
        "question": "Trova le righe di commessa con quantità negativa.",
        "answer": "SELECT id_commessa, nr_riga_commessa, qta_commessa FROM [bi].[OFF_commesse_righe] WHERE qta_commessa < 0;"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni eseguite dall'esecutore più frequente?",
        "answer": "WITH TopEsecutore AS (SELECT TOP 1 id_esecutore FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_esecutore ORDER BY COUNT(*) DESC) SELECT AVG(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.id_esecutore = (SELECT id_esecutore FROM TopEsecutore);"
    },
    {
        "question": "Mostra le lavorazioni il cui codice voce non è presente nella vista delle voci.",
        "answer": "SELECT l.id_commessa, l.progressivo_riga_lavorazione, l.codice_voce_lavorazione_lavorazione FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.id_voce IS NULL;"
    },
    {
        "question": "Quante ore totali sono state lavorate dagli esecutori di tipo 'Meccanico'?",
        "answer": "SELECT SUM(l.ore_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori_tipi] AS et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE et.descr_tipo_esecutore = 'Meccanico';"
    },
    {
        "question": "Elenca le lavorazioni senza costo associato.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_lavorazione IS NULL;"
    },
    {
        "question": "Trova il rapporto medio tra ore lavorate e ore a tempario.",
        "answer": "SELECT AVG(ore_lavorazione / NULLIF(ore_tempario_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_tempario_lavorazione > 0;"
    },
    {
        "question": "Qual è la media delle ore di ferie per accettatore?",
        "answer": "SELECT e.descr_esecutore, AVG(p.ore_ferie_presenza) AS MediaOreFerie FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE p.accettatore_presenza = 1 GROUP BY e.descr_esecutore;"
    },
    {
        "question": "Mostra gli esecutori con più di 40 ore teoriche settimanali (media).",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING AVG(p.ore_teoriche_presenza * 7) > 40;"
    },
    {
        "question": "Qual è il totale delle ore di presenza registrate per l'officina 'Assistenza Premium'?",
        "answer": "SELECT SUM(p.ore_presenza) FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_officine] AS o ON p.id_officina = o.id_officina WHERE o.descr_officina = 'Assistenza Premium';"
    },
    {
        "question": "Trova le date in cui almeno un esecutore ha registrato ore di assenza.",
        "answer": "SELECT DISTINCT dt_presenza FROM [bi].[OFF_presenze] WHERE ore_assenza_presenza > 0;"
    },
    {
        "question": "Quali esecutori hanno un costo straordinario definito ma non hanno mai fatto straordinari?",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.imp_costo_straordinario_presenza IS NOT NULL GROUP BY e.descr_esecutore HAVING SUM(p.ore_straordinarie_presenza) = 0;"
    },
    {
        "question": "Elenca i noleggi associati all'officina con ID 'OFF01'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE codice_officina = 'OFF01');"
    },
    {
        "question": "Qual è il numero massimo di km extra registrato per un noleggio?",
        "answer": "SELECT MAX(km_extra_noleggio) FROM [bi].[OFF_noleggi];"
    },
    {
        "question": "Trova i noleggi con data consegna precedente alla data ritiro (errore).",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE dt_consegna_noleggio < dt_ritiro_noleggio;"
    },
    {
        "question": "Mostra i noleggi con tipo affidamento 'Sostituzione Garanzia'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE descr_tipo_affidamento_noleggio = 'Sostituzione Garanzia';"
    },
    {
        "question": "Qual è l'importo totale delle fatture di noleggio emesse quest'anno?",
        "answer": "SELECT SUM(imp_fatt_noleggio) FROM [bi].[OFF_noleggi] WHERE nr_fatt_noleggio IS NOT NULL AND YEAR(dt_doc_noleggio) = YEAR(GETDATE());"
    },
    {
        "question": "Cerca i contatti la cui ragione sociale corrisponde esattamente a 'Pinco Pallino SRL'.",
        "answer": "SELECT id_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE ragione_sociale_contatto = 'Pinco Pallino SRL';"
    },
    {
        "question": "Quali sono i contatti con email che non contengono '.' prima della '@'?",
        "answer": "SELECT id_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE email_contatto LIKE '%@%' AND email_contatto NOT LIKE '%.@%';"
    },
    {
        "question": "Mostra i contatti aggiornati ieri.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE CONVERT(date, dt_modifica_contatto) = CONVERT(date, DATEADD(day, -1, GETDATE()));"
    },
    {
        "question": "Elenca i contatti senza CAP specificato.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE cap_contatto IS NULL OR cap_contatto = '';"
    },
    {
        "question": "Quanti contatti hanno sia codice fiscale che partita IVA?",
        "answer": "SELECT COUNT(id_contatto) FROM [bi].[CONTT_contatti] WHERE codice_fiscale_contatto IS NOT NULL AND codice_fiscale_contatto <> '' AND partita_iva_contatto IS NOT NULL AND partita_iva_contatto <> '';"
    },
    {
        "question": "Mostra il cliente (nome o ragione sociale) e il venditore per il contratto '2024-CV-B9876'.",
        "answer": "SELECT cli.descr_cliente, v.descr_venditore FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore WHERE c.nr_contratto = '2024-CV-B9876';"
    },
    {
        "question": "Qual è il rapporto tra il numero di ore di presenza e il numero di contratti chiusi nello stesso mese?",
        "answer": "WITH MonthlyPresence AS ( SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, SUM(ore_presenza) AS OrePresenza FROM [bi].[OFF_presenze] GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ), MonthlyContracts AS ( SELECT YEAR(dt_chiusura_contratto) AS Anno, MONTH(dt_chiusura_contratto) AS Mese, COUNT(id_contratto) AS ContrattiChiusi FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' GROUP BY YEAR(dt_chiusura_contratto), MONTH(dt_chiusura_contratto) ) SELECT mp.Anno, mp.Mese, mp.OrePresenza / NULLIF(mc.ContrattiChiusi, 0) AS RapportoOrePresenzaContratti FROM MonthlyPresence mp JOIN MonthlyContracts mc ON mp.Anno = mc.Anno AND mp.Mese = mc.Mese;"
    },
    {
        "question": "Elenca i veicoli (targa) che sono stati in noleggio per più di 30 giorni totali cumulativi.",
        "answer": "SELECT targa_noleggio, SUM(giorni_fatturati_noleggio) AS TotGiorniNoleggio FROM [bi].[OFF_noleggi] GROUP BY targa_noleggio HAVING SUM(giorni_fatturati_noleggio) > 30;"
    },
    {
        "question": "Mostra, per ogni gruppo cliente (officina), qual è il tipo di intervento più frequente.",
        "answer": "WITH RankedInterventions AS ( SELECT cli.gruppo_cliente_officina, it.descr_tipo_intervento, COUNT(*) AS Freq, ROW_NUMBER() OVER (PARTITION BY cli.gruppo_cliente_officina ORDER BY COUNT(*) DESC) AS rn FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_clienti] cli ON c.id_cliente_officina = cli.id_cliente_officina JOIN [bi].[OFF_commesse_righe] r ON c.id_commessa = r.id_commessa JOIN [bi].[OFF_interventi_tipi] it ON r.id_tipo_intervento = it.id_tipo_intervento GROUP BY cli.gruppo_cliente_officina, it.descr_tipo_intervento ) SELECT gruppo_cliente_officina, descr_tipo_intervento, Freq FROM RankedInterventions WHERE rn = 1;"
    },
    {
        "question": "Calcola il margine percentuale medio (consuntivo) per i contratti di auto nuove vs usate.",
        "answer": "SELECT v.nuovo_usato_veicolo, AVG( (ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) / NULLIF(ISNULL(r.imp_ricavo_consuntivo_redd, 0), 0) ) * 100 AS MargineMedioPerc FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE ISNULL(r.imp_ricavo_consuntivo_redd, 0) <> 0 GROUP BY v.nuovo_usato_veicolo;"
    },
    {
        "question": "Quali sono i 3 gruppi di venditori con il maggior valore medio di contratto?",
        "answer": "SELECT TOP 3 v.gruppo_venditori, AVG(c.imp_netto_contratto) AS ValoreMedioContratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore GROUP BY v.gruppo_venditori ORDER BY ValoreMedioContratto DESC;"
    },
    {
        "question": "Mostra i contratti per veicoli la cui data di acquisto è successiva alla data di apertura del contratto.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.dt_acquisto_veicolo > c.dt_apertura_contratto;"
    },
    {
        "question": "Elenca i tipi di vendita (descrizione) che non hanno mai avuto contratti con permuta.",
        "answer": "SELECT descr_tipo_vendita FROM [bi].[AUTO_tipi_vendita] WHERE id_tipo_vendita NOT IN (SELECT DISTINCT id_tipo_vendita FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 0);"
    },
    {
        "question": "Quanti contratti ha l'azienda 'CV' per ogni anno di apertura?",
        "answer": "SELECT YEAR(c.dt_apertura_contratto) AS Anno, COUNT(c.id_contratto) AS NumeroContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE a.descr_azienda = 'Car Village' GROUP BY YEAR(c.dt_apertura_contratto) ORDER BY Anno DESC;"
    },
    {
        "question": "Qual è il valore totale di listino dei contratti senza finanziamento?",
        "answer": "SELECT SUM(imp_netto_listino_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 0;"
    },
    {
        "question": "Trova i contratti con garanzia interna 'Premium' o 'Top'.",
        "answer": "SELECT nr_contratto, garanzia_interna_contratto FROM [bi].[AUTO_contratti] WHERE garanzia_interna_contratto IN ('Premium', 'Top');"
    },
    {
        "question": "Quali clienti (codice fiscale) hanno contratti associati a veicoli con linea 'Sportiva'?",
        "answer": "SELECT DISTINCT cli.codice_fiscale_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.linea_veicolo = 'Sportiva';"
    },
    {
        "question": "Mostra i contratti chiusi nel secondo trimestre dell'anno scorso.",
        "answer": "SELECT nr_contratto, dt_chiusura_contratto FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND YEAR(dt_chiusura_contratto) = YEAR(GETDATE()) - 1 AND DATEPART(quarter, dt_chiusura_contratto) = 2;"
    },
    {
        "question": "Qual è la provenienza (gruppo) associata al minor numero di contratti?",
        "answer": "SELECT TOP 1 p.gruppo_provenienza, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza GROUP BY p.gruppo_provenienza ORDER BY NumContratti ASC;"
    },
    {
        "question": "Elenca i punti vendita (descrizione) della sede con ID 'SEDE05'.",
        "answer": "SELECT descr_punto_vendita FROM [bi].[AUTO_sedi] WHERE id_sede = 'SEDE05';"
    },
    {
        "question": "Qual è l'importo massimo finanziato registrato?",
        "answer": "SELECT MAX(imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti];"
    },
    {
        "question": "Mostra i contratti relativi a veicoli con ubicazione ritiro 'Fornitore Estero'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.ubicazione_al_ritiro_veicolo = 'Fornitore Estero';"
    },
    {
        "question": "Quanti tipi di contatto cliente esistono in totale?",
        "answer": "SELECT COUNT(*) FROM [bi].[AUTO_contatti_tipi];"
    },
    {
        "question": "Trova i contratti relativi a veicoli il cui codice fornitore è 'FORN123'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.codice_fornitore_veicolo = 'FORN123';"
    },
    {
        "question": "Elenca i gruppi di aree (distinti) presenti nel sistema.",
        "answer": "SELECT DISTINCT gruppo_area FROM [bi].[AUTO_aree] WHERE gruppo_area IS NOT NULL;"
    },
    {
        "question": "Qual è l'importo minimo di permuta per un contratto con assicurazione?",
        "answer": "SELECT MIN(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 1 AND count_permute_contratto > 0;"
    },
    {
        "question": "Mostra i veicoli (targa) con note specificate.",
        "answer": "SELECT targa_veicolo, note_veicolo FROM [bi].[AUTO_veicoli] WHERE note_veicolo IS NOT NULL AND note_veicolo <> '';"
    },
    {
        "question": "Quali aziende (ID) non hanno contratti chiusi registrati?",
        "answer": "SELECT id_azienda FROM [bi].[AUTO_aziende] WHERE id_azienda NOT IN (SELECT DISTINCT v.id_azienda FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.status_contratto = 'Chiuso');"
    },
    {
        "question": "Trova i contratti la cui data di apertura è la stessa della data di chiusura.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto = dt_chiusura_contratto;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) associati a più di 5 contratti.",
        "answer": "SELECT id_cliente, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(id_contratto) > 5;"
    },
    {
        "question": "Qual è il margine consuntivo medio per tipo di vendita?",
        "answer": "SELECT tv.descr_tipo_vendita, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS MargineMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY tv.descr_tipo_vendita;"
    },
    {
        "question": "Mostra i contratti (ID Redd) con ricavo previsto zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd = 0;"
    },
    {
        "question": "Quali descrizioni di costo/spesa sono associate al livello margine '0'?",
        "answer": "SELECT DISTINCT COALESCE(descr_costo_redd, descr_spesa_redd) FROM [bi].[AUTO_contratti_redd] WHERE liv_margine_redd = '0';"
    },
    {
        "question": "Elenca i contratti (ID Redd) con costo consuntivo superiore al costo previsto dal venditore.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd > imp_costo_previsto_venditore_redd;"
    },
    {
        "question": "Trova i contratti (ID Redd) con indice contabile costo o spesa maggiore di 10.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd > 10 OR idx_contabile_spesa_redd > 10;"
    },
    {
        "question": "Qual è la provvigione media come percentuale del margine consuntivo?",
        "answer": "SELECT AVG(imp_netto_provvigione_redd / NULLIF((ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)), 0)) * 100 FROM [bi].[AUTO_contratti_redd] WHERE (ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) <> 0 AND imp_netto_provvigione_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i tipi di costo/ricavo (descrizione) che non hanno mai avuto un valore previsto (costo o ricavo) associato.",
        "answer": "SELECT DISTINCT descr_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_tipo_costo_ricavo_redd NOT IN (SELECT DISTINCT codice_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NOT NULL OR imp_ricavo_previsto_redd IS NOT NULL);"
    },
    {
        "question": "Quali contratti (ID Redd) hanno una spesa con descrizione 'Immatricolazione'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_spesa_redd = 'Immatricolazione';"
    },
    {
        "question": "Trova il costo previsto totale per il tipo totale 'RICAVI VENDITA'.",
        "answer": "SELECT SUM(imp_costo_previsto_redd) FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd = 'RICAVI VENDITA';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove non c'è né costo né ricavo consuntivo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NULL AND imp_ricavo_consuntivo_redd IS NULL;"
    },
    {
        "question": "Qual è la commessa la cui data di effettiva consegna è più lontana dalla data di previsione consegna?",
        "answer": "SELECT TOP 1 nr_commessa, DATEDIFF(day, dt_previsione_consegna_commessa, dt_effettiva_consegna_commessa) AS DiffGiorni FROM [bi].[OFF_commesse] WHERE dt_previsione_consegna_commessa IS NOT NULL AND dt_effettiva_consegna_commessa IS NOT NULL ORDER BY DiffGiorni DESC;"
    },
    {
        "question": "Mostra le commesse associate a clienti il cui nome inizia con 'Auto'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.descr_cliente_officina LIKE 'Auto%';"
    },
    {
        "question": "Quanti veicoli unici (per telaio) ha gestito ogni officina?",
        "answer": "SELECT o.descr_officina, COUNT(DISTINCT c.telaio_commessa) AS VeicoliUnici FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE c.telaio_commessa IS NOT NULL GROUP BY o.descr_officina;"
    },
    {
        "question": "Elenca le commesse con data fine lavori ma senza data veicolo pronto.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_fine_lavoro_commessa IS NOT NULL AND dt_veicolo_pronto_commessa IS NULL;"
    },
    {
        "question": "Trova le commesse senza codice Service Card.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE codice_servicard_commessa IS NULL OR codice_servicard_commessa = '';"
    },
    {
        "question": "Qual è il valore totale delle spese rifiuti per tutte le commesse?",
        "answer": "SELECT SUM(imp_netto_spese_rifiuti_commessa) FROM [bi].[OFF_commesse];"
    },
    {
        "question": "Mostra le commesse per veicoli di marca 'BMW' o 'Audi'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_marca_veicolo_officina IN ('BMW', 'Audi');"
    },
    {
        "question": "Quante commesse aperte ha l'accettatore con ID 'ACC002'?",
        "answer": "SELECT COUNT(c.id_commessa) FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_accettatori] AS a ON c.accettatore_commessa = a.descr_accettatore WHERE a.id_accettatore = 'ACC002' AND c.dt_chiusura_commessa IS NULL; -- Assumendo ID nella vista accettatori, altrimenti usare descr"
    },
    {
        "question": "Elenca i tipi di commessa (codice) gestiti dall'officina 'Service Fast'.",
        "answer": "SELECT DISTINCT ct.codice_tipo_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE o.descr_officina = 'Service Fast';"
    },
    {
        "question": "Trova le commesse la cui data di inizio lavori è NULL.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa IS NULL;"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno avuto inconvenienti di tipo 'Richiamo Casa Madre'.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente = 'Richiamo Casa Madre';"
    },
    {
        "question": "Quali codici inconveniente hanno una descrizione breve ma non estesa?",
        "answer": "SELECT DISTINCT codice_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_breve_inconveniente IS NOT NULL AND descr_breve_inconveniente <> '-' AND (descr_inconveniente IS NULL OR descr_inconveniente = '');"
    },
    {
        "question": "Mostra gli inconvenienti (ID) associati a interventi a carico cliente.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_cliente_inconveniente = 'Cliente';"
    },
    {
        "question": "Quanti inconvenienti ci sono stati per ogni tipo di intervento?",
        "answer": "SELECT it.descr_tipo_intervento, COUNT(i.id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS it ON i.id_tipo_intervento = it.id_tipo_intervento GROUP BY it.descr_tipo_intervento;"
    },
    {
        "question": "Trova gli ID commessa che hanno più di un tipo di inconveniente registrato.",
        "answer": "SELECT id_commessa, COUNT(DISTINCT tipo_inconveniente) AS NumTipiInconveniente FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING COUNT(DISTINCT tipo_inconveniente) > 1;"
    },
    {
        "question": "Qual è il valore totale a listino delle righe della commessa 'COM9876'?",
        "answer": "SELECT SUM(imp_netto_riga_listino_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM9876';"
    },
    {
        "question": "Mostra le righe con costo medio ponderato superiore a 50 euro.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_medio_ponderato_commessa > 50;"
    },
    {
        "question": "Elenca i tipi di operazione (distinti) presenti nelle righe di commessa.",
        "answer": "SELECT DISTINCT tipo_operazione_commessa FROM [bi].[OFF_commesse_righe] WHERE tipo_operazione_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il prezzo unitario massimo registrato per una riga di commessa?",
        "answer": "SELECT MAX(imp_netto_prezzo_unitario_commessa) FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Trova le righe di commessa associate a voci del gruppo 'Accessori'.",
        "answer": "SELECT r.id_commessa, r.nr_riga_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce WHERE v.gruppo_voce = 'Accessori';"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni il cui movimento è avvenuto nel 2023?",
        "answer": "SELECT AVG(costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE YEAR(dt_movimento_lavorazione) = 2023;"
    },
    {
        "question": "Mostra le lavorazioni (descrizione riga) con ore fatturate nulle o zero.",
        "answer": "SELECT id_commessa, descr_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_fatturate_lavorazione IS NULL OR ore_fatturate_lavorazione = 0;"
    },
    {
        "question": "Quante ore totali di lavori esterni sono state registrate?",
        "answer": "SELECT SUM(ore_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE gruppo_voce_lavorazione = 13; -- Assumendo 13 = Lavori Esterni"
    },
    {
        "question": "Elenca le lavorazioni con costo nullo ma ore lavorate positive.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione > 0 AND (costo_lavorazione IS NULL OR costo_lavorazione = 0);"
    },
    {
        "question": "Trova gli ID inconveniente associati a lavorazioni con ore a tempario > 0.",
        "answer": "SELECT DISTINCT id_inconveniente FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_tempario_lavorazione > 0 AND id_inconveniente IS NOT NULL;"
    },
    {
        "question": "Qual è il rapporto medio tra ore di assenza e ore teoriche?",
        "answer": "SELECT AVG(ore_assenza_presenza / NULLIF(ore_teoriche_presenza, 0)) FROM [bi].[OFF_presenze] WHERE ore_teoriche_presenza > 0;"
    },
    {
        "question": "Mostra gli esecutori che hanno registrato solo ore di presenza (nessun'altra ora: ferie, permessi, straordinari, etc.) in un dato giorno.",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE ore_presenza > 0 AND ore_teoriche_presenza = ore_presenza AND ore_nonprod_presenza = 0 AND ore_straordinarie_presenza = 0 AND ore_assenza_presenza = 0 AND ore_ferie_presenza = 0 AND ore_permessi_presenza = 0;"
    },
    {
        "question": "Qual è il costo totale annuo delle ferie per l'officina Y?",
        "answer": "SELECT SUM(p.ore_ferie_presenza * p.imp_costo_orario_presenza) FROM [bi].[OFF_presenze] AS p WHERE p.id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE descr_officina = 'Officina Y') AND YEAR(p.dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Trova le date con il numero massimo di esecutori in permesso.",
        "answer": "SELECT TOP 1 dt_presenza, COUNT(id_esecutore) AS NumInPermesso FROM [bi].[OFF_presenze] WHERE ore_permessi_presenza > 0 GROUP BY dt_presenza ORDER BY NumInPermesso DESC;"
    },
    {
        "question": "Quale tipo esecutore ha il maggior numero di ore straordinarie registrate?",
        "answer": "SELECT TOP 1 et.descr_tipo_esecutore, SUM(p.ore_straordinarie_presenza) AS TotStraordinario FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore GROUP BY et.descr_tipo_esecutore ORDER BY TotStraordinario DESC;"
    },
    {
        "question": "Elenca i noleggi la cui data di ritiro è uguale alla data di consegna.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE dt_ritiro_noleggio = dt_consegna_noleggio;"
    },
    {
        "question": "Qual è il numero totale di giorni fatturati per noleggi a lungo termine?",
        "answer": "SELECT SUM(giorni_fatturati_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'S';"
    },
    {
        "question": "Trova i noleggi con 0 km percorsi (consegna = ritiro).",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE km_consegna_noleggio = km_ritiro_noleggio;"
    },
    {
        "question": "Mostra i noleggi non ancora chiusi.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE dt_chiusura_noleggio IS NULL;"
    },
    {
        "question": "Qual è il costo veicolo medio per i noleggi con più di 500 km extra?",
        "answer": "SELECT AVG(costo_veicolo_noleggio) FROM [bi].[OFF_noleggi] WHERE km_extra_noleggio > 500;"
    },
    {
        "question": "Cerca i contatti il cui indirizzo contiene 'Via Roma'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, indirizzo_contatto FROM [bi].[CONTT_contatti] WHERE indirizzo_contatto LIKE '%Via Roma%';"
    },
    {
        "question": "Quali sono i contatti senza email registrata?",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE email_contatto IS NULL OR email_contatto = '';"
    },
    {
        "question": "Mostra i contatti di sesso non specificato.",
        "answer": "SELECT id_contatto, COALESCE(ragione_sociale_contatto, nome_contatto + ' ' + cognome_contatto) FROM [bi].[CONTT_contatti] WHERE sesso_contatto IS NULL OR sesso_contatto = '';"
    },
    {
        "question": "Elenca i contatti con CAP che inizia per '9'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, cap_contatto FROM [bi].[CONTT_contatti] WHERE cap_contatto LIKE '9%';"
    },
    {
        "question": "Quanti contatti per ogni iniziale del cognome (persone fisiche)?",
        "answer": "SELECT LEFT(cognome_contatto, 1) AS Iniziale, COUNT(id_contatto) AS NumeroContatti FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'PF' AND cognome_contatto IS NOT NULL GROUP BY LEFT(cognome_contatto, 1) ORDER BY Iniziale;"
    },
    {
        "question": "Trova i contratti auto venduti a clienti che hanno avuto solo commesse di tipo 'Manutenzione' in officina.",
        "answer": "WITH WorkshopTypes AS ( SELECT id_cliente_officina, STRING_AGG(DISTINCT ct.descr_tipo_commessa, ',') AS TipiCommesse FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_commesse_tipi] ct ON oc.id_tipo_commessa = ct.id_tipo_commessa GROUP BY id_cliente_officina ) SELECT ac.nr_contratto FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente JOIN WorkshopTypes wt ON cli.id_contatto = wt.id_cliente_officina WHERE wt.TipiCommesse = 'Manutenzione';"
    },
    {
        "question": "Mostra il ranking dei tipi di intervento per costo medio di manodopera associato.",
        "answer": "WITH AvgLaborCost AS ( SELECT l.id_tipo_intervento, AVG(l.costo_lavorazione) AS AvgCost FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.costo_lavorazione > 0 GROUP BY l.id_tipo_intervento ) SELECT it.descr_tipo_intervento, alc.AvgCost, RANK() OVER (ORDER BY alc.AvgCost DESC) AS Ranking FROM AvgLaborCost alc JOIN [bi].[OFF_interventi_tipi] it ON alc.id_tipo_intervento = it.id_tipo_intervento;"
    },
    {
        "question": "Elenca i veicoli (targa) che sono stati venduti e poi sono tornati in officina entro 90 giorni dalla data di uscita.",
        "answer": "SELECT DISTINCT ov.targa_veicolo_officina FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina JOIN [bi].[AUTO_veicoli] av ON ov.targa_veicolo_officina = av.targa_veicolo WHERE av.dt_uscita_veicolo IS NOT NULL AND oc.dt_apertura_commessa > av.dt_uscita_veicolo AND DATEDIFF(day, av.dt_uscita_veicolo, oc.dt_apertura_commessa) <= 90;"
    },
    {
        "question": "Calcola, per ogni gruppo cliente auto, il valore medio delle permute.",
        "answer": "SELECT cli.gruppo_tipo_cliente, AVG(c.imp_netto_permute_contratto) AS MediaPermute FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente WHERE c.count_permute_contratto > 0 GROUP BY cli.gruppo_tipo_cliente;"
    },
    {
        "question": "Mostra l'andamento anno su anno del numero di contratti aperti per il canale 'Web'.",
        "answer": "WITH YearlySales AS ( SELECT YEAR(dt_apertura_contratto) AS Anno, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita WHERE cv.descr_canale_vendita = 'Web' GROUP BY YEAR(dt_apertura_contratto) ) SELECT Anno, NumContratti, LAG(NumContratti, 1, 0) OVER (ORDER BY Anno) AS ContrattiAnnoPrec, NumContratti - LAG(NumContratti, 1, 0) OVER (ORDER BY Anno) AS DiffAnnoPrec FROM YearlySales ORDER BY Anno;"
    },
    {
        "question": "Quali sono i 5 veicoli (targa) con il maggior numero di km percorsi?",
        "answer": "SELECT TOP 5 targa_veicolo, km_percorsi_veicolo FROM [bi].[AUTO_veicoli] ORDER BY km_percorsi_veicolo DESC;"
    },
    {
        "question": "Mostra i contratti del cliente con ID Contatto 'CL1001'.",
        "answer": "SELECT c.nr_contratto, c.dt_apertura_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE cli.id_contatto = 'CL1001';"
    },
    {
        "question": "Elenca i tipi di vendita (descrizione) associati a contratti con valore permuta nullo.",
        "answer": "SELECT DISTINCT tv.descr_tipo_vendita FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.imp_netto_permute_contratto IS NULL OR c.imp_netto_permute_contratto = 0;"
    },
    {
        "question": "Quanti contratti ha l'azienda 'A9' per ogni anno di chiusura?",
        "answer": "SELECT YEAR(c.dt_chiusura_contratto) AS AnnoChiusura, COUNT(c.id_contratto) AS NumeroContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE a.descr_azienda = 'Autoteam 9' AND c.dt_chiusura_contratto IS NOT NULL GROUP BY YEAR(c.dt_chiusura_contratto) ORDER BY AnnoChiusura DESC;"
    },
    {
        "question": "Qual è il valore totale di listino dei contratti che hanno almeno una permuta?",
        "answer": "SELECT SUM(imp_netto_listino_contratto) FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti con garanzia interna 'ND' e finanziamento attivo.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE codice_garanzia_interna_contratto = 'ND' AND has_finanziamento_contratto = 1;"
    },
    {
        "question": "Quali venditori hanno gestito contratti per veicoli GPL?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_veicoli] AS ve ON c.id_veicolo = ve.id_veicolo WHERE ve.alimentazione_veicolo = 'GPL';"
    },
    {
        "question": "Mostra i contratti aperti nel primo giorno dell'anno corrente.",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto = DATEFROMPARTS(YEAR(GETDATE()), 1, 1);"
    },
    {
        "question": "Qual è la provenienza (codice) con il valore medio di contratto più alto?",
        "answer": "SELECT TOP 1 p.codice_provenienza, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza GROUP BY p.codice_provenienza ORDER BY ValoreMedio DESC;"
    },
    {
        "question": "Elenca i gruppi sede disponibili nel sistema.",
        "answer": "SELECT DISTINCT gruppo_sede FROM [bi].[AUTO_sedi] WHERE gruppo_sede IS NOT NULL;"
    },
    {
        "question": "Qual è l'importo minimo finanziato per un contratto con assicurazione?",
        "answer": "SELECT MIN(imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 1 AND has_finanziamento_contratto = 1;"
    },
    {
        "question": "Mostra i contratti relativi a veicoli ritirati da 'Concessionario Partner'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.provenienza_veicolo = 'Concessionario Partner'; -- Verificare campo corretto per provenienza/ritiro"
    },
    {
        "question": "Quanti gruppi di tipo contatto esistono?",
        "answer": "SELECT COUNT(DISTINCT gruppo_tipo_contatto) FROM [bi].[AUTO_contatti_tipi] WHERE gruppo_tipo_contatto IS NOT NULL;"
    },
    {
        "question": "Trova i contratti relativi a veicoli forniti da 'Fornitore XYZ'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.codice_fornitore_veicolo = 'XYZ'; -- Assumendo che codice_fornitore sia l'identificativo"
    },
    {
        "question": "Elenca le aree (descrizione) associate a contratti chiusi.",
        "answer": "SELECT DISTINCT ar.descr_area FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_aree] AS ar ON c.id_area = ar.id_area WHERE c.status_contratto = 'Chiuso';"
    },
    {
        "question": "Qual è il valore massimo di permuta per un contratto senza assicurazione?",
        "answer": "SELECT MAX(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 0 AND count_permute_contratto > 0;"
    },
    {
        "question": "Mostra i veicoli (targa) il cui status è 'In Transito'.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE status_veicolo = 'In Transito';"
    },
    {
        "question": "Quali aziende non hanno contratti aperti?",
        "answer": "SELECT id_azienda, descr_azienda FROM [bi].[AUTO_aziende] WHERE id_azienda NOT IN (SELECT DISTINCT v.id_azienda FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.status_contratto <> 'Chiuso');"
    },
    {
        "question": "Trova i contratti la cui data di apertura è nel mese di Dicembre.",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE MONTH(dt_apertura_contratto) = 12;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) senza codice fiscale registrato.",
        "answer": "SELECT id_contatto, descr_cliente FROM [bi].[AUTO_clienti] WHERE codice_fiscale_cliente IS NULL OR codice_fiscale_cliente = '';"
    },
    {
        "question": "Qual è il margine consuntivo totale per i contratti con ricavo previsto nullo?",
        "answer": "SELECT SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd IS NULL OR imp_ricavo_previsto_redd = 0;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il costo previsto è identico al costo consuntivo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd = imp_costo_consuntivo_redd;"
    },
    {
        "question": "Quali descrizioni di costo/spesa sono associate al codice tipo '05'?",
        "answer": "SELECT DISTINCT COALESCE(descr_costo_redd, descr_spesa_redd) FROM [bi].[AUTO_contratti_redd] WHERE codice_tipo_costo_ricavo_redd = '05';"
    },
    {
        "question": "Elenca i contratti (ID Redd) con ricavo consuntivo negativo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd < 0;"
    },
    {
        "question": "Trova i contratti (ID Redd) con indice contabile nullo sia per costo che per spesa.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd IS NULL AND idx_contabile_spesa_redd IS NULL;"
    },
    {
        "question": "Qual è il valore massimo della provvigione registrata?",
        "answer": "SELECT MAX(imp_netto_provvigione_redd) FROM [bi].[AUTO_contratti_redd];"
    },
    {
        "question": "Mostra i livelli di margine associati a tipi di costo/ricavo con 'IVA' nella descrizione.",
        "answer": "SELECT DISTINCT liv_margine_redd, descr_margine_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd LIKE '%IVA%';"
    },
    {
        "question": "Quali contratti (ID Redd) hanno associato un costo o spesa il cui codice è 'EXTRA01'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_costo_redd = 'EXTRA01' OR codice_spesa_redd = 'EXTRA01';"
    },
    {
        "question": "Trova il costo consuntivo totale per il tipo totale 'COSTI VARIABILI'.",
        "answer": "SELECT SUM(imp_costo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd = 'COSTI VARIABILI';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove manca la descrizione riga.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd IS NULL OR descr_riga_redd = '';"
    },
    {
        "question": "Qual è la commessa aperta da più tempo?",
        "answer": "SELECT TOP 1 nr_commessa, dt_apertura_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL ORDER BY dt_apertura_commessa ASC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina del gruppo 'Privati'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.gruppo_cliente_officina = 'Privati';"
    },
    {
        "question": "Quante commesse sono state gestite da ogni officina nel mese di Maggio 2024?",
        "answer": "SELECT o.descr_officina, COUNT(c.id_commessa) AS NumeroCommesse FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE c.dt_apertura_commessa >= '2024-05-01' AND c.dt_apertura_commessa < '2024-06-01' GROUP BY o.descr_officina;"
    },
    {
        "question": "Elenca le commesse senza data di fine lavori registrata.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_fine_lavoro_commessa IS NULL;"
    },
    {
        "question": "Trova le commesse con codice Service Card definito.",
        "answer": "SELECT nr_commessa, codice_servicard_commessa FROM [bi].[OFF_commesse] WHERE codice_servicard_commessa IS NOT NULL AND codice_servicard_commessa <> '';"
    },
    {
        "question": "Qual è il valore minimo delle spese materiale di consumo?",
        "answer": "SELECT MIN(imp_netto_materiale_consumo_commessa) FROM [bi].[OFF_commesse] WHERE imp_netto_materiale_consumo_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli il cui modello è 'Golf'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_modello_veicolo_officina = 'Golf';"
    },
    {
        "question": "Quante commesse sono state chiuse da ogni accettatore?",
        "answer": "SELECT accettatore_commessa, COUNT(id_commessa) AS CommesseChiuse FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL GROUP BY accettatore_commessa;"
    },
    {
        "question": "Elenca i tipi di commessa (descrizione) associati a commesse aperte.",
        "answer": "SELECT DISTINCT ct.descr_tipo_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE c.dt_chiusura_commessa IS NULL;"
    },
    {
        "question": "Trova le commesse la cui data di creazione è successiva alla data di inizio lavori.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa > dt_inizio_lavoro_commessa;"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno almeno un inconveniente di tipo 'Carrozzeria'.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente = 'Carrozzeria';"
    },
    {
        "question": "Quali gruppi di inconveniente sono associati a interventi a carico cliente?",
        "answer": "SELECT DISTINCT gruppo_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_cliente_inconveniente = 'Cliente';"
    },
    {
        "question": "Mostra gli inconvenienti (ID) senza codice associato ('-').",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE codice_inconveniente = '-';"
    },
    {
        "question": "Quanti inconvenienti ci sono stati per ogni tipo di carico garanzia?",
        "answer": "SELECT tipo_carico_garanzia_inconveniente, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] GROUP BY tipo_carico_garanzia_inconveniente;"
    },
    {
        "question": "Trova gli ID commessa con esattamente un inconveniente registrato.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING COUNT(id_inconveniente) = 1;"
    },
    {
        "question": "Qual è il costo totale delle righe di commessa associate all'inconveniente 'GF_11223_1'?",
        "answer": "SELECT SUM(imp_netto_costo_commessa) FROM [bi].[OFF_commesse_righe] WHERE id_inconveniente = 'GF_11223_1';"
    },
    {
        "question": "Mostra le righe di commessa la cui lavorazione è stata fatta nel 2023.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE YEAR(dt_lavorazione_commessa) = 2023;"
    },
    {
        "question": "Elenca i codici articolo unici usati nelle righe di commessa.",
        "answer": "SELECT DISTINCT codice_articolo_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il valore totale delle righe associate alla voce 'Pneumatici'?",
        "answer": "SELECT SUM(r.imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce WHERE v.descr_voce = 'Pneumatici';"
    },
    {
        "question": "Trova le righe di commessa con segno positivo.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE segno_riga_commessa > 0;"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni per le commesse di tipo 'Riparazione Urgente'?",
        "answer": "SELECT AVG(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse_tipi] AS ct ON l.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa = 'Riparazione Urgente';"
    },
    {
        "question": "Mostra le lavorazioni associate a tipi di intervento legati alla garanzia.",
        "answer": "SELECT l.id_commessa, l.progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_interventi_tipi] AS it ON l.id_tipo_intervento = it.id_tipo_intervento WHERE it.tipo_garanzia_tipo_intervento IS NOT NULL AND it.tipo_garanzia_tipo_intervento <> '';"
    },
    {
        "question": "Quante ore totali sono state lavorate da esecutori con qualifica 'Capo Officina'?",
        "answer": "SELECT SUM(l.ore_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE e.qualifica_esecutore = 'Capo Officina';"
    },
    {
        "question": "Elenca le lavorazioni con ore fatturate diverse dalle ore a tempario.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_fatturate_lavorazione <> ore_tempario_lavorazione;"
    },
    {
        "question": "Trova le commesse che hanno sia lavorazioni interne che lavori esterni.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c WHERE EXISTS (SELECT 1 FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.id_commessa = c.id_commessa AND l.gruppo_voce_lavorazione <> 13) AND EXISTS (SELECT 1 FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.id_commessa = c.id_commessa AND l.gruppo_voce_lavorazione = 13);"
    },
    {
        "question": "Qual è il rapporto medio tra ore di ferie e ore teoriche?",
        "answer": "SELECT AVG(ore_ferie_presenza / NULLIF(ore_teoriche_presenza, 0)) FROM [bi].[OFF_presenze] WHERE ore_teoriche_presenza > 0;"
    },
    {
        "question": "Mostra gli esecutori che non hanno mai registrato ore non produttive.",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_esecutori] e WHERE e.id_esecutore NOT IN (SELECT DISTINCT id_esecutore FROM [bi].[OFF_presenze] WHERE ore_nonprod_presenza > 0);"
    },
    {
        "question": "Qual è il costo totale annuo dei permessi per l'officina Z?",
        "answer": "SELECT SUM(p.ore_permessi_presenza * p.imp_costo_orario_presenza) FROM [bi].[OFF_presenze] AS p WHERE p.id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE descr_officina = 'Officina Z') AND YEAR(p.dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Trova le date in cui più di 10 esecutori erano assenti.",
        "answer": "SELECT dt_presenza, COUNT(id_esecutore) AS NumAssenti FROM [bi].[OFF_presenze] WHERE ore_assenza_presenza > 0 GROUP BY dt_presenza HAVING COUNT(id_esecutore) > 10;"
    },
    {
        "question": "Quale tipo esecutore ha il minor costo straordinario medio?",
        "answer": "SELECT TOP 1 et.descr_tipo_esecutore, AVG(p.imp_costo_straordinario_presenza) AS CostoMedioStraordinario FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE p.imp_costo_straordinario_presenza IS NOT NULL GROUP BY et.descr_tipo_esecutore ORDER BY CostoMedioStraordinario ASC;"
    },
    {
        "question": "Elenca i noleggi per veicoli con modello alternativo 'Station Wagon'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE modello_alternativo_noleggio = 'Station Wagon';"
    },
    {
        "question": "Qual è il numero medio di giorni fatturati per i noleggi non a lungo termine?",
        "answer": "SELECT AVG(giorni_fatturati_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'N';"
    },
    {
        "question": "Trova i noleggi con costo carburante registrato ma costo veicolo nullo.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE costo_carburante_noleggio > 0 AND (costo_veicolo_noleggio IS NULL OR costo_veicolo_noleggio = 0);"
    },
    {
        "question": "Mostra i noleggi non ancora fatturati ma chiusi.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE dt_chiusura_noleggio IS NOT NULL AND nr_fatt_noleggio IS NULL;"
    },
    {
        "question": "Qual è l'importo totale fatturato per i noleggi di tipo 'Affidamento Cortesia'?",
        "answer": "SELECT SUM(imp_fatt_noleggio) FROM [bi].[OFF_noleggi] WHERE descr_tipo_affidamento_noleggio = 'Affidamento Cortesia';"
    },
    {
        "question": "Cerca i contatti con ID gestionale anagrafica '5001'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE id_anagrafica_contatto = 5001;"
    },
    {
        "question": "Quali sono i contatti con numero di telefono che inizia per '333'?",
        "answer": "SELECT id_contatto, telefono_contatto FROM [bi].[CONTT_contatti] WHERE telefono_contatto LIKE '333%';"
    },
    {
        "question": "Mostra i contatti di tipo 'Azienda Individuale'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'AI'; -- Verificare codice Azienda Individuale"
    },
    {
        "question": "Elenca i contatti residenti in provincia 'NA'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE provincia_contatto = 'NA';"
    },
    {
        "question": "Quanti contatti hanno un'email con dominio '.it'?",
        "answer": "SELECT COUNT(id_contatto) FROM [bi].[CONTT_contatti] WHERE email_contatto LIKE '%.it';"
    },
    {
        "question": "Mostra i venditori che hanno venduto auto a clienti che hanno avuto più di 3 commesse in officina.",
        "answer": "WITH HighFreqWorkshopCust AS ( SELECT id_cliente_officina FROM [bi].[OFF_commesse] GROUP BY id_cliente_officina HAVING COUNT(id_commessa) > 3 ) SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_venditori] v ON ac.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE cli.id_contatto IN (SELECT id_cliente_officina FROM HighFreqWorkshopCust);"
    },
    {
        "question": "Qual è il ranking dei tipi commessa per valore medio riga?",
        "answer": "SELECT ct.descr_tipo_commessa, AVG(r.imp_netto_riga_commessa) AS ValoreMedioRiga, RANK() OVER (ORDER BY AVG(r.imp_netto_riga_commessa) DESC) AS Ranking FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE r.imp_netto_riga_commessa IS NOT NULL GROUP BY ct.descr_tipo_commessa;"
    },
    {
        "question": "Elenca i veicoli (targa) per cui il tempo medio tra commesse in officina è inferiore a 60 giorni.",
        "answer": "WITH CommesseLag AS ( SELECT id_veicolo_officina, dt_apertura_commessa, LAG(dt_apertura_commessa, 1) OVER (PARTITION BY id_veicolo_officina ORDER BY dt_apertura_commessa) AS PrevApertura FROM [bi].[OFF_commesse] ), TimeBetween AS ( SELECT id_veicolo_officina, AVG(DATEDIFF(day, PrevApertura, dt_apertura_commessa)) AS AvgDaysBetween FROM CommesseLag WHERE PrevApertura IS NOT NULL GROUP BY id_veicolo_officina ) SELECT v.targa_veicolo_officina FROM TimeBetween tb JOIN [bi].[OFF_veicoli] v ON tb.id_veicolo_officina = v.id_veicolo_officina WHERE tb.AvgDaysBetween < 60;"
    },
    {
        "question": "Mostra i clienti (descr) che hanno acquistato auto da più di 2 venditori diversi.",
        "answer": "SELECT cli.descr_cliente, COUNT(DISTINCT c.id_venditore) AS NumVenditori FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.descr_cliente HAVING COUNT(DISTINCT c.id_venditore) > 2;"
    },
    {
        "question": "Calcola il valore percentuale del costo manodopera sul costo totale (manodopera + ricambi + terzi) per ogni commessa.",
        "answer": "WITH CostoRicambi AS (SELECT id_commessa, SUM(ISNULL(imp_netto_costo_commessa,0)) AS CstRic FROM [bi].[OFF_commesse_righe] WHERE gruppo_voce_commessa = 5 GROUP BY id_commessa), CostoLavoriTerzi AS (SELECT id_commessa, SUM(ISNULL(imp_netto_costo_lavori_terzi_commessa,0)) AS CstTerzi FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa), CostoManodopera AS (SELECT id_commessa, SUM(ISNULL(costo_lavorazione,0)) AS CstMO FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa) SELECT c.nr_commessa, ISNULL(cm.CstMO, 0) * 100 / NULLIF(ISNULL(cr.CstRic, 0) + ISNULL(clt.CstTerzi, 0) + ISNULL(cm.CstMO, 0), 0) AS PercCostoManodopera FROM [bi].[OFF_commesse] c LEFT JOIN CostoRicambi cr ON c.id_commessa = cr.id_commessa LEFT JOIN CostoLavoriTerzi clt ON c.id_commessa = clt.id_commessa LEFT JOIN CostoManodopera cm ON c.id_commessa = cm.id_commessa;"
    },
    {
        "question": "Qual è il rapporto medio tra valore finanziato e valore del contratto per i contratti con finanziamento?",
        "answer": "SELECT AVG(imp_netto_finanziato_contratto / NULLIF(imp_netto_contratto, 0)) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND imp_netto_contratto > 0;"
    },
    {
        "question": "Mostra i 3 gruppi di tipo cliente con il minor numero di contratti associati.",
        "answer": "SELECT TOP 3 cli.gruppo_tipo_cliente, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.gruppo_tipo_cliente ORDER BY NumContratti ASC;"
    },
    {
        "question": "Elenca i contratti per veicoli la cui area commerciale è 'Flotte Aziendali'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.area_commerciale_veicolo = 'Flotte Aziendali';"
    },
    {
        "question": "Quanti contratti ha aperto ogni 'gruppo venditori'?",
        "answer": "SELECT v.gruppo_venditori, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore GROUP BY v.gruppo_venditori;"
    },
    {
        "question": "Qual è il valore totale delle permute per i contratti che non hanno assicurazione?",
        "answer": "SELECT SUM(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 0 AND count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti di tipo 'Demo/Esposizione'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE ct.descr_tipo_contratto = 'Demo/Esposizione';"
    },
    {
        "question": "Quali sedi (descrizione) hanno venduto veicoli con più di 150.000 km?",
        "answer": "SELECT DISTINCT s.descr_sede FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.km_percorsi_veicolo > 150000;"
    },
    {
        "question": "Mostra i contratti chiusi nel 2023 senza garanzia interna specificata.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND YEAR(dt_chiusura_contratto) = 2023 AND (codice_garanzia_interna_contratto = 'ND' OR codice_garanzia_interna_contratto IS NULL);"
    },
    {
        "question": "Qual è la provenienza (descrizione) con il valore medio di listino più basso?",
        "answer": "SELECT TOP 1 p.descr_provenienza, AVG(c.imp_netto_listino_contratto) AS MediaListino FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE c.imp_netto_listino_contratto > 0 GROUP BY p.descr_provenienza ORDER BY MediaListino ASC;"
    },
    {
        "question": "Elenca i clienti (descrizione) il cui codice fiscale non è valido (lunghezza diversa da 16).",
        "answer": "SELECT descr_cliente, codice_fiscale_cliente FROM [bi].[AUTO_clienti] WHERE LEN(codice_fiscale_cliente) <> 16 AND tipo_cliente = 'Privato'; -- Controllo base, validazione più complessa richiede function"
    },
    {
        "question": "Qual è il tipo di vendita (descrizione) associato al maggior valore finanziato totale?",
        "answer": "SELECT TOP 1 tv.descr_tipo_vendita, SUM(c.imp_netto_finanziato_contratto) AS TotFinanziato FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.has_finanziamento_contratto = 1 GROUP BY tv.descr_tipo_vendita ORDER BY TotFinanziato DESC;"
    },
    {
        "question": "Mostra i contratti dove l'importo netto è zero.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_contratto = 0;"
    },
    {
        "question": "Quanti tipi di contatto cliente (gruppo) distinti ci sono?",
        "answer": "SELECT COUNT(DISTINCT gruppo_tipo_contatto) FROM [bi].[AUTO_contatti_tipi] WHERE gruppo_tipo_contatto IS NOT NULL;"
    },
    {
        "question": "Trova i contratti relativi a veicoli la cui data di uscita è nel mese scorso.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.dt_uscita_veicolo >= DATEADD(month, -1, DATEADD(day, 1-DAY(GETDATE()), GETDATE())) AND v.dt_uscita_veicolo < DATEADD(day, 1-DAY(GETDATE()), GETDATE());"
    },
    {
        "question": "Elenca i gruppi di area associati a venditori del gruppo 'Senior'.",
        "answer": "SELECT DISTINCT ar.gruppo_area FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_aree] ar ON c.id_area = ar.id_area JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore WHERE v.gruppo_venditori = 'Senior';"
    },
    {
        "question": "Qual è l'importo totale delle permute per contratti senza finanziamento né assicurazione?",
        "answer": "SELECT SUM(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 0 AND has_assicurazione_contratto = 0 AND count_permute_contratto > 0;"
    },
    {
        "question": "Mostra i veicoli (targa) ritirati dal fornitore 'Fornitore Alfa'.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE codice_fornitore_veicolo = (SELECT CodiceFornitore FROM Anag_Fornitori WHERE DescrFornitore = 'Fornitore Alfa'); -- Ipotizzando Anag_Fornitori"
    },
    {
        "question": "Quali aziende hanno chiuso contratti nell'anno corrente?",
        "answer": "SELECT DISTINCT a.descr_azienda FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE c.status_contratto = 'Chiuso' AND YEAR(c.dt_chiusura_contratto) = YEAR(GETDATE());"
    },
    {
        "question": "Trova i contratti la cui durata (chiusura - apertura) è stata esattamente di 30 giorni.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto IS NOT NULL AND DATEDIFF(day, dt_apertura_contratto, dt_chiusura_contratto) = 30;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) con più di un codice master associato (possibile duplicato).",
        "answer": "SELECT id_contatto, COUNT(DISTINCT codice_master_cliente) AS NumMaster FROM [bi].[AUTO_clienti] GROUP BY id_contatto HAVING COUNT(DISTINCT codice_master_cliente) > 1;"
    },
    {
        "question": "Qual è il margine previsto percentuale medio (margine/ricavo) per i contratti?",
        "answer": "SELECT AVG((ISNULL(imp_ricavo_previsto_redd, 0) - ISNULL(imp_costo_previsto_redd, 0)) / NULLIF(imp_ricavo_previsto_redd, 0)) * 100 FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd > 0;"
    },
    {
        "question": "Mostra i contratti (ID Redd) con ricavo consuntivo inferiore al ricavo previsto.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd < imp_ricavo_previsto_redd;"
    },
    {
        "question": "Quali descrizioni di costo/spesa sono associate al tipo totale 'COSTI FISSI'?",
        "answer": "SELECT DISTINCT COALESCE(descr_costo_redd, descr_spesa_redd) FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd = 'COSTI FISSI';"
    },
    {
        "question": "Elenca i contratti (ID Redd) con costo consuntivo negativo (es. storni).",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd < 0;"
    },
    {
        "question": "Trova i contratti (ID Redd) dove manca l'indice contabile costo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd IS NULL;"
    },
    {
        "question": "Qual è il valore massimo della provvigione registrata per il livello margine 'Margine Commerciale'?",
        "answer": "SELECT MAX(imp_netto_provvigione_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Margine Commerciale';"
    },
    {
        "question": "Mostra i tipi di costo/ricavo (codice) che hanno sempre avuto margine consuntivo positivo.",
        "answer": "SELECT codice_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] GROUP BY codice_tipo_costo_ricavo_redd HAVING MIN(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) > 0;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno costi o spese con descrizione 'Canone Leasing'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_costo_redd = 'Canone Leasing' OR descr_spesa_redd = 'Canone Leasing';"
    },
    {
        "question": "Trova il costo previsto totale per il livello margine 'Costo del Venduto'.",
        "answer": "SELECT SUM(imp_costo_previsto_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Costo del Venduto';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove manca la descrizione del margine.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd IS NULL OR descr_margine_redd = '';"
    },
    {
        "question": "Qual è la commessa officina con il maggior numero di righe?",
        "answer": "SELECT TOP 1 c.nr_commessa, COUNT(r.nr_riga_commessa) AS NumRighe FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa GROUP BY c.nr_commessa ORDER BY NumRighe DESC;"
    },
    {
        "question": "Mostra le commesse associate a veicoli con telaio non specificato.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE telaio_commessa IS NULL OR telaio_commessa = '';"
    },
    {
        "question": "Quanti clienti officina distinti (basato su ID Contatto) ci sono per ogni gruppo cliente?",
        "answer": "SELECT gruppo_cliente_officina, COUNT(DISTINCT id_contatto) AS ClientiUnici FROM [bi].[OFF_clienti] GROUP BY gruppo_cliente_officina;"
    },
    {
        "question": "Elenca le commesse con data fine lavori nel weekend.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE DATEPART(weekday, dt_fine_lavoro_commessa) IN (1, 7);"
    },
    {
        "question": "Trova le commesse senza codice estensione garanzia.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE codice_estgar_commessa IS NULL OR codice_estgar_commessa = '';"
    },
    {
        "question": "Qual è il valore medio delle spese materiale di consumo per le commesse chiuse?",
        "answer": "SELECT AVG(imp_netto_materiale_consumo_commessa) FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL AND imp_netto_materiale_consumo_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli il cui gruppo marca è 'Lusso'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.gruppo_marca_veicolo_officina = 'Lusso';"
    },
    {
        "question": "Quante commesse per ogni tipo (descrizione) ha aperto l'accettatore 'Silvia Neri'?",
        "answer": "SELECT ct.descr_tipo_commessa, COUNT(c.id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE c.accettatore_commessa = 'Silvia Neri' GROUP BY ct.descr_tipo_commessa;"
    },
    {
        "question": "Elenca le officine che hanno gestito solo commesse chiuse (nessuna aperta).",
        "answer": "SELECT o.descr_officina FROM [bi].[OFF_officine] AS o WHERE o.id_officina IN (SELECT id_officina FROM [bi].[OFF_commesse]) AND o.id_officina NOT IN (SELECT DISTINCT id_officina FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL);"
    },
    {
        "question": "Trova le commesse la cui data veicolo pronto è uguale alla data di consegna effettiva.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa = dt_effettiva_consegna_commessa;"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno inconvenienti associati a più di un tipo di intervento.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING COUNT(DISTINCT id_tipo_intervento) > 1;"
    },
    {
        "question": "Quali descrizioni brevi di inconveniente esistono?",
        "answer": "SELECT DISTINCT descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_breve_inconveniente <> '-';"
    },
    {
        "question": "Mostra gli inconvenienti (ID) non associati a nessun tipo di intervento.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE id_tipo_intervento IS NULL OR id_tipo_intervento = 0;"
    },
    {
        "question": "Quanti inconvenienti ci sono stati per ogni mese di apertura commessa?",
        "answer": "SELECT YEAR(c.dt_apertura_commessa) AS Anno, MONTH(c.dt_apertura_commessa) AS Mese, COUNT(i.id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa GROUP BY YEAR(c.dt_apertura_commessa), MONTH(c.dt_apertura_commessa) ORDER BY Anno, Mese;"
    },
    {
        "question": "Trova le commesse con inconvenienti ma senza descrizione estesa.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_inconvenienti] i JOIN [bi].[OFF_commesse] c ON i.id_commessa = c.id_commessa WHERE i.descr_inconveniente IS NULL OR i.descr_inconveniente = '';"
    },
    {
        "question": "Qual è il costo medio delle righe di commessa per tipo intervento?",
        "answer": "SELECT it.descr_tipo_intervento, AVG(r.imp_netto_costo_commessa) AS CostoMedio FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_interventi_tipi] AS it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE r.imp_netto_costo_commessa IS NOT NULL GROUP BY it.descr_tipo_intervento;"
    },
    {
        "question": "Mostra le righe con costo nullo.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_commessa = 0;"
    },
    {
        "question": "Elenca i codici conto usati nelle righe di commessa.",
        "answer": "SELECT DISTINCT codice_conto_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_conto_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il valore totale delle righe non omaggio?",
        "answer": "SELECT SUM(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 0;"
    },
    {
        "question": "Trova le righe di commessa associate a voci con codice 'VO001'.",
        "answer": "SELECT r.id_commessa, r.nr_riga_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce WHERE v.codice_voce = 'VO001';"
    },
    {
        "question": "Qual è il costo totale delle lavorazioni eseguite da esecutori senza ID specificato (ID 0)?",
        "answer": "SELECT SUM(costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE id_esecutore = 0;"
    },
    {
        "question": "Mostra le lavorazioni con ore lavorate superiori a 10 ore.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione > 10;"
    },
    {
        "question": "Quante ore totali sono state registrate a tempario dagli esecutori di tipo 'Carrozziere'?",
        "answer": "SELECT SUM(l.ore_tempario_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori_tipi] AS et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE et.descr_tipo_esecutore = 'Carrozziere';"
    },
    {
        "question": "Elenca le lavorazioni con costo lavori esterni superiore a 500 euro.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_lavoro_ext_lavorazione > 500;"
    },
    {
        "question": "Trova il rapporto medio tra costo lavorazione e quota fatturato.",
        "answer": "SELECT AVG(costo_lavorazione / NULLIF(quota_fatturato_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] WHERE quota_fatturato_lavorazione > 0;"
    },
    {
        "question": "Qual è la media delle ore non produttive per giorno della settimana?",
        "answer": "SELECT DATENAME(weekday, dt_presenza) AS Giorno, AVG(ore_nonprod_presenza) AS MediaOreNonProd FROM [bi].[OFF_presenze] GROUP BY DATENAME(weekday, dt_presenza), DATEPART(weekday, dt_presenza) ORDER BY DATEPART(weekday, dt_presenza);"
    },
    {
        "question": "Mostra gli esecutori che hanno registrato ore di presenza ma nessuna ora teorica.",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.ore_presenza > 0 AND (p.ore_teoriche_presenza IS NULL OR p.ore_teoriche_presenza = 0);"
    },
    {
        "question": "Qual è il costo totale annuo delle assenze (ore * costo orario) per l'officina X?",
        "answer": "SELECT SUM(p.ore_assenza_presenza * p.imp_costo_orario_presenza) FROM [bi].[OFF_presenze] AS p WHERE p.id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE descr_officina = 'Officina X') AND YEAR(p.dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Trova le date in cui nessun esecutore era in ferie.",
        "answer": "SELECT dt_presenza FROM [bi].[OFF_presenze] GROUP BY dt_presenza HAVING SUM(ore_ferie_presenza) = 0;"
    },
    {
        "question": "Quale tipo esecutore ha accumulato più ore di permesso?",
        "answer": "SELECT TOP 1 et.descr_tipo_esecutore, SUM(p.ore_permessi_presenza) AS TotPermessi FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore GROUP BY et.descr_tipo_esecutore ORDER BY TotPermessi DESC;"
    },
    {
        "question": "Elenca i noleggi associati a commesse di tipo 'Soccorso Stradale'.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] AS n JOIN [bi].[OFF_commesse] AS c ON n.id_commessa = c.id_commessa JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa = 'Soccorso Stradale';"
    },
    {
        "question": "Trova i noleggi con tipo fatturazione 'Anticipata'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE tipo_fatturazione_noleggio = 'Anticipata';"
    },
    {
        "question": "Mostra i noleggi con costo veicolo nullo.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE costo_veicolo_noleggio IS NULL OR costo_veicolo_noleggio = 0;"
    },
    {
        "question": "Qual è l'importo minimo fatturato per un noleggio chiuso?",
        "answer": "SELECT MIN(imp_fatt_noleggio) FROM [bi].[OFF_noleggi] WHERE dt_chiusura_noleggio IS NOT NULL AND imp_fatt_noleggio IS NOT NULL;"
    },
    {
        "question": "Cerca i contatti il cui codice fiscale è presente anche come partita IVA.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE codice_fiscale_contatto = partita_iva_contatto AND codice_fiscale_contatto IS NOT NULL;"
    },
    {
        "question": "Quali sono i contatti con telefono fisso (inizia per '0')?",
        "answer": "SELECT id_contatto, telefono_contatto FROM [bi].[CONTT_contatti] WHERE telefono_contatto LIKE '0%';"
    },
    {
        "question": "Mostra i contatti senza cognome specificato (persone fisiche).",
        "answer": "SELECT id_contatto, nome_contatto FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'PF' AND (cognome_contatto IS NULL OR cognome_contatto = '');"
    },
    {
        "question": "Elenca i contatti con CAP compreso tra 20100 e 20199.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, cap_contatto FROM [bi].[CONTT_contatti] WHERE cap_contatto >= '20100' AND cap_contatto <= '20199';"
    },
    {
        "question": "Quanti contatti per ogni iniziale della ragione sociale (aziende)?",
        "answer": "SELECT LEFT(ragione_sociale_contatto, 1) AS Iniziale, COUNT(id_contatto) AS NumeroContatti FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto <> 'PF' AND ragione_sociale_contatto IS NOT NULL GROUP BY LEFT(ragione_sociale_contatto, 1) ORDER BY Iniziale;"
    },
    {
        "question": "Trova i clienti auto che hanno avuto commesse in officina ma non hanno mai fatto noleggi.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_clienti] cli JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina WHERE cli.id_contatto NOT IN (SELECT DISTINCT id_contatto FROM [bi].[OFF_noleggi]);"
    },
    {
        "question": "Mostra il ranking delle marche (auto) per margine consuntivo medio per contratto.",
        "answer": "WITH AvgMargin AS ( SELECT v.marca_veicolo, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS AvgMargine FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY v.marca_veicolo ) SELECT marca_veicolo, AvgMargine, RANK() OVER (ORDER BY AvgMargine DESC) AS Ranking FROM AvgMargin;"
    },
    {
        "question": "Elenca i veicoli (targa) che sono stati noleggiati più di 5 volte.",
        "answer": "SELECT targa_noleggio, COUNT(id_riga_noleggio) AS NumNoleggi FROM [bi].[OFF_noleggi] GROUP BY targa_noleggio HAVING COUNT(id_riga_noleggio) > 5;"
    },
    {
        "question": "Calcola, per ogni accettatore, il numero medio di inconvenienti per commessa gestita.",
        "answer": "WITH InconvenientiPerCommessa AS ( SELECT id_commessa, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa ) SELECT c.accettatore_commessa, AVG(CAST(ipc.NumInconvenienti AS FLOAT)) AS MediaInconvenienti FROM [bi].[OFF_commesse] c JOIN InconvenientiPerCommessa ipc ON c.id_commessa = ipc.id_commessa GROUP BY c.accettatore_commessa;"
    },
    {
        "question": "Mostra la differenza percentuale mese su mese del numero di contratti aperti nell'ultimo anno.",
        "answer": "WITH MonthlyContracts AS ( SELECT YEAR(dt_apertura_contratto) AS Anno, MONTH(dt_apertura_contratto) AS Mese, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto >= DATEADD(year, -1, GETDATE()) GROUP BY YEAR(dt_apertura_contratto), MONTH(dt_apertura_contratto) ), LaggedContracts AS ( SELECT Anno, Mese, NumContratti, LAG(NumContratti, 1, 0) OVER (ORDER BY Anno, Mese) AS PrevMonthContracts FROM MonthlyContracts ) SELECT Anno, Mese, NumContratti, PrevMonthContracts, CASE WHEN PrevMonthContracts > 0 THEN (CAST(NumContratti AS FLOAT) - PrevMonthContracts) * 100 / PrevMonthContracts ELSE NULL END AS VariazionePercMensile FROM LaggedContracts ORDER BY Anno, Mese;"
    },
    {
        "question": "Mostra i codici spesa/costo che appaiono sia come costo che come ricavo.",
        "answer": "SELECT codice_spesa_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_spesa_costo_redd IS NOT NULL GROUP BY codice_spesa_costo_redd HAVING MIN(CASE WHEN imp_costo_consuntivo_redd <> 0 THEN 1 ELSE 0 END) = 1 AND MIN(CASE WHEN imp_ricavo_consuntivo_redd <> 0 THEN 1 ELSE 0 END) = 1;"
    },
    {
        "question": "Mostra gli inconvenienti (ID) associati a interventi non in garanzia.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_garanzia_inconveniente IS NULL OR tipo_carico_garanzia_inconveniente = '';"
    },
    {
        "question": "Mostra gli esecutori che hanno registrato solo ore di presenza (nessuna altra ora: ferie, permessi, straordinari, etc.) in un dato giorno.",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE ore_presenza > 0 AND ore_teoriche_presenza = ore_presenza AND ore_nonprod_presenza = 0 AND ore_straordinarie_presenza = 0 AND ore_assenza_presenza = 0 AND ore_ferie_presenza = 0 AND ore_permessi_presenza = 0;"
    },
    {
        "question": "Qual è il tempo medio che intercorre tra l'acquisto di un veicolo e la sua prima commessa in officina?",
        "answer": "WITH FirstWorkshop AS ( SELECT oc.id_cliente_officina, v.targa_veicolo_officina, MIN(oc.dt_apertura_commessa) AS PrimaCommessa FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] v ON oc.id_veicolo_officina = v.id_veicolo_officina GROUP BY oc.id_cliente_officina, v.targa_veicolo_officina ) SELECT AVG(DATEDIFF(day, av.dt_acquisto_veicolo, fw.PrimaCommessa)) AS GiorniMediAcquistoPrimaCommessa FROM [bi].[AUTO_veicoli] av JOIN FirstWorkshop fw ON av.targa_veicolo = fw.targa_veicolo_officina WHERE av.dt_acquisto_veicolo IS NOT NULL;"
    },
    {
        "question": "Mostra il ranking delle sedi basato sul valore totale dei contratti chiusi nell'ultimo anno.",
        "answer": "WITH SedeSales AS ( SELECT id_sede, SUM(imp_netto_contratto) AS VenditeTotali FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND dt_chiusura_contratto >= DATEADD(year, -1, GETDATE()) GROUP BY id_sede ) SELECT s.descr_sede, ss.VenditeTotali, RANK() OVER (ORDER BY ss.VenditeTotali DESC) AS Ranking FROM SedeSales ss JOIN [bi].[AUTO_sedi] s ON ss.id_sede = s.id_sede;"
    },
    {
        "question": "Calcola la percentuale di commesse che hanno avuto almeno un inconveniente sul totale delle commesse.",
        "answer": "SELECT CAST(COUNT(DISTINCT id_commessa) AS FLOAT) * 100 / (SELECT COUNT(id_commessa) FROM [bi].[OFF_commesse]) FROM [bi].[OFF_commesse_inconvenienti];"
    },
    {
        "question": "Elenca i veicoli (targa) che sono stati noleggiati e hanno anche avuto commesse con lavori esterni > 0.",
        "answer": "SELECT DISTINCT n.targa_noleggio FROM [bi].[OFF_noleggi] n JOIN [bi].[OFF_commesse_righe] r ON n.id_commessa = r.id_commessa WHERE r.imp_netto_costo_lavori_terzi_commessa > 0;"
    },
    {
        "question": "Mostra per ogni venditore, il mese con il maggior numero di contratti aperti quest'anno.",
        "answer": "WITH MonthlyCounts AS ( SELECT id_venditore, MONTH(dt_apertura_contratto) AS Mese, COUNT(id_contratto) AS NumContratti, ROW_NUMBER() OVER (PARTITION BY id_venditore ORDER BY COUNT(id_contratto) DESC) AS rn FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) = YEAR(GETDATE()) GROUP BY id_venditore, MONTH(dt_apertura_contratto) ) SELECT v.descr_venditore, mc.Mese, mc.NumContratti FROM MonthlyCounts mc JOIN [bi].[AUTO_venditori] v ON mc.id_venditore = v.id_venditore WHERE mc.rn = 1;"
    },
    {
        "question": "Quali sono i 10 veicoli (targa) con il minor numero di km percorsi?",
        "answer": "SELECT TOP 10 targa_veicolo, km_percorsi_veicolo FROM [bi].[AUTO_veicoli] WHERE km_percorsi_veicolo IS NOT NULL ORDER BY km_percorsi_veicolo ASC;"
    },
    {
        "question": "Mostra i contratti del cliente 'Rossi Mario' (codice fiscale specificato).",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE cli.codice_fiscale_cliente = 'RSSMRA...';"
    },
    {
        "question": "Elenca i tipi di vendita (codice) associati a contratti senza permuta.",
        "answer": "SELECT DISTINCT tv.codice_tipo_vendita FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.count_permute_contratto = 0;"
    },
    {
        "question": "Quanti contratti totali (aperti e chiusi) ha l'azienda 'A9'?",
        "answer": "SELECT COUNT(c.id_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.id_azienda = 'A9';"
    },
    {
        "question": "Qual è il valore medio di listino dei contratti che hanno assicurazione?",
        "answer": "SELECT AVG(imp_netto_listino_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 1 AND imp_netto_listino_contratto > 0;"
    },
    {
        "question": "Trova i contratti con garanzia interna 'Light'.",
        "answer": "SELECT nr_contratto, garanzia_interna_contratto FROM [bi].[AUTO_contratti] WHERE garanzia_interna_contratto = 'Light';"
    },
    {
        "question": "Quali venditori hanno gestito contratti per veicoli la cui destinazione al ritiro era 'Stock Concessionaria'?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_veicoli] AS ve ON c.id_veicolo = ve.id_veicolo WHERE ve.destinazione_al_ritiro_veicolo = 'Stock Concessionaria';"
    },
    {
        "question": "Mostra i contratti aperti l'ultimo giorno lavorativo (escludi sabato/domenica).",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto = (SELECT MAX(dt_apertura_contratto) FROM [bi].[AUTO_contratti] WHERE DATEPART(weekday, dt_apertura_contratto) NOT IN (1, 7));"
    },
    {
        "question": "Qual è la provenienza (gruppo) con il minor valore totale di contratti?",
        "answer": "SELECT TOP 1 p.gruppo_provenienza, SUM(c.imp_netto_contratto) AS ValoreTotale FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza GROUP BY p.gruppo_provenienza ORDER BY ValoreTotale ASC;"
    },
    {
        "question": "Elenca i punti vendita (distinti) presenti nel sistema.",
        "answer": "SELECT DISTINCT descr_punto_vendita FROM [bi].[AUTO_sedi] WHERE descr_punto_vendita IS NOT NULL;"
    },
    {
        "question": "Qual è l'importo massimo finanziato per un contratto senza assicurazione?",
        "answer": "SELECT MAX(imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 0 AND has_finanziamento_contratto = 1;"
    },
    {
        "question": "Mostra i contratti relativi a veicoli la cui ubicazione al ritiro è NULL.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.ubicazione_al_ritiro_veicolo IS NULL;"
    },
    {
        "question": "Quali gruppi di tipo contatto esistono?",
        "answer": "SELECT DISTINCT gruppo_tipo_contatto FROM [bi].[AUTO_contatti_tipi] WHERE gruppo_tipo_contatto IS NOT NULL;"
    },
    {
        "question": "Trova i contratti relativi a veicoli il cui ID contratto ritiro è 'RIT100'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.id_contratto_ritiro_veicolo = 'RIT100';"
    },
    {
        "question": "Elenca le aree (codice) associate a contratti aperti.",
        "answer": "SELECT DISTINCT ar.codice_area FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_aree] AS ar ON c.id_area = ar.id_area WHERE c.status_contratto <> 'Chiuso';"
    },
    {
        "question": "Qual è il valore medio delle permute per i contratti con finanziamento?",
        "answer": "SELECT AVG(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND count_permute_contratto > 0;"
    },
    {
        "question": "Mostra i veicoli (targa) con status 'In Ricondizionamento'.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE status_veicolo = 'In Ricondizionamento';"
    },
    {
        "question": "Quali aziende hanno solo contratti chiusi (nessun contratto aperto)?",
        "answer": "SELECT a.id_azienda, a.descr_azienda FROM [bi].[AUTO_aziende] AS a WHERE a.id_azienda IN (SELECT DISTINCT v.id_azienda FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo) AND a.id_azienda NOT IN (SELECT DISTINCT v.id_azienda FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.status_contratto <> 'Chiuso');"
    },
    {
        "question": "Trova i contratti chiusi nello stesso mese dell'apertura.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto IS NOT NULL AND YEAR(dt_apertura_contratto) = YEAR(dt_chiusura_contratto) AND MONTH(dt_apertura_contratto) = MONTH(dt_chiusura_contratto);"
    },
    {
        "question": "Elenca i clienti (ID Contatto) associati a contratti di tipo 'Noleggio'.",
        "answer": "SELECT DISTINCT c.id_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE ct.descr_tipo_contratto LIKE '%Noleggio%';"
    },
    {
        "question": "Qual è il margine consuntivo medio per livello margine?",
        "answer": "SELECT liv_margine_redd, descr_margine_redd, AVG(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS MargineMedio FROM [bi].[AUTO_contratti_redd] GROUP BY liv_margine_redd, descr_margine_redd;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il costo previsto dal venditore è negativo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_venditore_redd < 0;"
    },
    {
        "question": "Quali tipi totali (parziale/totale) sono associati a costi o ricavi previsti?",
        "answer": "SELECT DISTINCT tipo_totale_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NOT NULL OR imp_ricavo_previsto_redd IS NOT NULL;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con ricavo previsto zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd = 0;"
    },
    {
        "question": "Trova i contratti (ID Redd) dove manca l'indice contabile spesa.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_spesa_redd IS NULL;"
    },
    {
        "question": "Qual è la provvigione massima registrata per un singolo contratto?",
        "answer": "SELECT MAX(TotProvvigione) FROM (SELECT id_contratto_redd, SUM(ISNULL(imp_netto_provvigione_redd, 0)) AS TotProvvigione FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd) AS Prov;"
    },
    {
        "question": "Mostra i tipi di costo/ricavo (descrizione) che hanno almeno una voce con costo consuntivo > 5000.",
        "answer": "SELECT DISTINCT descr_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd > 5000;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno costi o spese con codice 'AMM01'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_costo_redd = 'AMM01' OR codice_spesa_redd = 'AMM01';"
    },
    {
        "question": "Trova il ricavo consuntivo totale per il livello margine 'Ricavi Operativi'.",
        "answer": "SELECT SUM(imp_ricavo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Ricavi Operativi';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove la descrizione riga è uguale alla descrizione costo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd = descr_costo_redd AND descr_riga_redd IS NOT NULL;"
    },
    {
        "question": "Qual è la commessa con la data di chiusura più vecchia?",
        "answer": "SELECT TOP 1 nr_commessa, dt_chiusura_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL ORDER BY dt_chiusura_commessa ASC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina il cui nome contiene 'Service'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.descr_cliente_officina LIKE '%Service%';"
    },
    {
        "question": "Quanti tipi di commessa (codice) ha gestito ogni officina?",
        "answer": "SELECT o.descr_officina, COUNT(DISTINCT c.id_tipo_commessa) AS NumTipiCommessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina GROUP BY o.descr_officina;"
    },
    {
        "question": "Elenca le commesse con data veicolo pronto ma senza data consegna effettiva.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa IS NOT NULL AND dt_effettiva_consegna_commessa IS NULL;"
    },
    {
        "question": "Trova le commesse con codice ODL che inizia per 'W'.",
        "answer": "SELECT nr_commessa, codice_odl_commessa FROM [bi].[OFF_commesse] WHERE codice_odl_commessa LIKE 'W%';"
    },
    {
        "question": "Qual è il valore totale delle spese materiale consumo per le commesse aperte?",
        "answer": "SELECT SUM(imp_netto_materiale_consumo_commessa) FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli con telaio che contiene 'ABC'.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE telaio_commessa LIKE '%ABC%';"
    },
    {
        "question": "Quante commesse per anno di chiusura?",
        "answer": "SELECT YEAR(dt_chiusura_commessa) AS AnnoChiusura, COUNT(id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL GROUP BY YEAR(dt_chiusura_commessa) ORDER BY AnnoChiusura DESC;"
    },
    {
        "question": "Elenca gli accettatori che hanno gestito commesse per l'officina 'Auto Express'.",
        "answer": "SELECT DISTINCT c.accettatore_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE o.descr_officina = 'Auto Express';"
    },
    {
        "question": "Trova le commesse la cui data di creazione è uguale alla data veicolo pronto.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa = dt_veicolo_pronto_commessa;"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno solo inconvenienti di tipo 'Elettrico'.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING MIN(tipo_inconveniente) = 'Elettrico' AND MAX(tipo_inconveniente) = 'Elettrico';"
    },
    {
        "question": "Quali descrizioni brevi di inconveniente sono associate al tipo 'Guasto'? ",
        "answer": "SELECT DISTINCT descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente = 'Guasto';"
    },
    {
        "question": "Mostra gli inconvenienti (ID) senza tipo carico cliente specificato.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_cliente_inconveniente IS NULL OR tipo_carico_cliente_inconveniente = '';"
    },
    {
        "question": "Quanti inconvenienti per ogni gruppo e tipo intervento?",
        "answer": "SELECT i.gruppo_inconveniente, it.descr_tipo_intervento, COUNT(i.id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS it ON i.id_tipo_intervento = it.id_tipo_intervento GROUP BY i.gruppo_inconveniente, it.descr_tipo_intervento;"
    },
    {
        "question": "Trova gli ID commessa con zero inconvenienti registrati.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse] WHERE id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti]);"
    },
    {
        "question": "Qual è il costo massimo di una riga di commessa relativa a lavori terzi?",
        "answer": "SELECT MAX(imp_netto_costo_lavori_terzi_commessa) FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Mostra le righe con prezzo listino nullo o zero.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_prezzo_listino_commessa IS NULL OR imp_netto_prezzo_listino_commessa = 0;"
    },
    {
        "question": "Elenca le voci (descrizione) associate a righe con quantità superiore a 50.",
        "answer": "SELECT DISTINCT v.descr_voce FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce WHERE r.qta_commessa > 50;"
    },
    {
        "question": "Qual è il valore totale delle righe omaggio?",
        "answer": "SELECT SUM(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 1;"
    },
    {
        "question": "Trova le righe di commessa associate al tipo intervento 'Revisione'.",
        "answer": "SELECT r.id_commessa, r.nr_riga_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_interventi_tipi] AS it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE it.descr_tipo_intervento = 'Revisione';"
    },
    {
        "question": "Qual è il costo totale delle lavorazioni eseguite da 'Esecutore Non Specificato' (ID 0)?",
        "answer": "SELECT SUM(costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE id_esecutore = 0;"
    },
    {
        "question": "Mostra le lavorazioni con ore lavorate inferiori a 1 ora.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione < 1;"
    },
    {
        "question": "Quante ore totali sono state fatturate dagli esecutori con qualifica null o vuota?",
        "answer": "SELECT SUM(l.ore_fatturate_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE e.qualifica_esecutore IS NULL OR e.qualifica_esecutore = '';"
    },
    {
        "question": "Elenca le lavorazioni con quota fatturato negativa.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE quota_fatturato_lavorazione < 0;"
    },
    {
        "question": "Trova il rapporto medio tra ore lavorate e ore tempario per tipo esecutore.",
        "answer": "SELECT et.descr_tipo_esecutore, AVG(l.ore_lavorazione / NULLIF(l.ore_tempario_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori_tipi] AS et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE l.ore_tempario_lavorazione > 0 GROUP BY et.descr_tipo_esecutore;"
    },
    {
        "question": "Qual è la media delle ore di straordinario per giorno della settimana?",
        "answer": "SELECT DATENAME(weekday, dt_presenza) AS Giorno, AVG(ore_straordinarie_presenza) AS MediaOreStraordinario FROM [bi].[OFF_presenze] GROUP BY DATENAME(weekday, dt_presenza), DATEPART(weekday, dt_presenza) ORDER BY DATEPART(weekday, dt_presenza);"
    },
    {
        "question": "Mostra gli esecutori che hanno sempre avuto ore di presenza uguali alle ore teoriche.",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING MIN(CASE WHEN ore_presenza = ore_teoriche_presenza THEN 1 ELSE 0 END) = 1;"
    },
    {
        "question": "Qual è il costo totale annuo delle ferie per l'officina principale?",
        "answer": "SELECT SUM(p.ore_ferie_presenza * p.imp_costo_orario_presenza) FROM [bi].[OFF_presenze] AS p WHERE p.id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE gruppo_officina = 'Sede Principale') AND YEAR(p.dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Trova le date in cui almeno 5 esecutori erano in permesso.",
        "answer": "SELECT dt_presenza, COUNT(id_esecutore) AS NumInPermesso FROM [bi].[OFF_presenze] WHERE ore_permessi_presenza > 0 GROUP BY dt_presenza HAVING COUNT(id_esecutore) >= 5;"
    },
    {
        "question": "Quale tipo esecutore ha il minor numero di ore di assenza registrate?",
        "answer": "SELECT TOP 1 et.descr_tipo_esecutore, SUM(p.ore_assenza_presenza) AS TotAssenze FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore GROUP BY et.descr_tipo_esecutore ORDER BY TotAssenze ASC;"
    },
    {
        "question": "Elenca i noleggi associati a commesse chiuse da più di un anno.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] AS n JOIN [bi].[OFF_commesse] AS c ON n.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa < DATEADD(year, -1, GETDATE());"
    },
    {
        "question": "Qual è la durata massima (in giorni) di un noleggio attivo?",
        "answer": "SELECT MAX(DATEDIFF(day, dt_ritiro_noleggio, GETDATE())) FROM [bi].[OFF_noleggi] WHERE dt_chiusura_noleggio IS NULL;"
    },
    {
        "question": "Trova i noleggi con 0 km extra.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE km_extra_noleggio = 0;"
    },
    {
        "question": "Mostra i noleggi con pagamento non specificato.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE pagamento_noleggio IS NULL;"
    },
    {
        "question": "Qual è il costo medio del carburante per i noleggi a lungo termine?",
        "answer": "SELECT AVG(costo_carburante_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'S' AND costo_carburante_noleggio IS NOT NULL;"
    },
    {
        "question": "Cerca i contatti con codice fiscale nullo ma partita IVA presente.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE (codice_fiscale_contatto IS NULL OR codice_fiscale_contatto = '') AND partita_iva_contatto IS NOT NULL AND partita_iva_contatto <> '';"
    },
    {
        "question": "Quali sono i contatti con telefono che contiene '555'?",
        "answer": "SELECT id_contatto, telefono_contatto FROM [bi].[CONTT_contatti] WHERE telefono_contatto LIKE '%555%';"
    },
    {
        "question": "Mostra i contatti il cui nome o cognome è uguale alla ragione sociale.",
        "answer": "SELECT id_contatto FROM [bi].[CONTT_contatti] WHERE ragione_sociale_contatto = nome_contatto OR ragione_sociale_contatto = cognome_contatto;"
    },
    {
        "question": "Elenca i contatti nella provincia di 'FI' o 'BO'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, provincia_contatto FROM [bi].[CONTT_contatti] WHERE provincia_contatto IN ('FI', 'BO');"
    },
    {
        "question": "Quanti contatti per ogni tipo soggetto e sesso?",
        "answer": "SELECT tipo_soggetto_contatto, sesso_contatto, COUNT(id_contatto) AS NumeroContatti FROM [bi].[CONTT_contatti] GROUP BY tipo_soggetto_contatto, sesso_contatto;"
    },
    {
        "question": "Mostra il cliente e l'accettatore per la commessa 'COM1234'.",
        "answer": "SELECT cli.descr_cliente_officina, c.accettatore_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE c.nr_commessa = 'COM1234';"
    },
    {
        "question": "Calcola il ranking dei clienti (auto) per valore totale contratti.",
        "answer": "WITH CustomerValue AS ( SELECT id_cliente, SUM(imp_netto_contratto) AS ValoreTotale FROM [bi].[AUTO_contratti] GROUP BY id_cliente ) SELECT cli.descr_cliente, cv.ValoreTotale, RANK() OVER (ORDER BY cv.ValoreTotale DESC) AS Ranking FROM CustomerValue cv JOIN [bi].[AUTO_clienti] cli ON cv.id_cliente = cli.id_cliente;"
    },
    {
        "question": "Elenca le auto (targa) che hanno avuto più lavorazioni esterne che interne (conteggio righe).",
        "answer": "SELECT v.targa_veicolo_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina JOIN ( SELECT id_commessa, SUM(CASE WHEN gruppo_voce_lavorazione = 13 THEN 1 ELSE 0 END) AS Ext, SUM(CASE WHEN gruppo_voce_lavorazione <> 13 THEN 1 ELSE 0 END) AS Int FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa ) AS l ON c.id_commessa = l.id_commessa WHERE l.Ext > l.Int;"
    },
    {
        "question": "Mostra, per ogni sede, il venditore con il maggior numero di contratti.",
        "answer": "WITH RankedSellers AS ( SELECT id_sede, id_venditore, COUNT(id_contratto) AS NumContratti, ROW_NUMBER() OVER (PARTITION BY id_sede ORDER BY COUNT(id_contratto) DESC) AS rn FROM [bi].[AUTO_contratti] GROUP BY id_sede, id_venditore ) SELECT s.descr_sede, v.descr_venditore, rs.NumContratti FROM RankedSellers rs JOIN [bi].[AUTO_sedi] s ON rs.id_sede = s.id_sede JOIN [bi].[AUTO_venditori] v ON rs.id_venditore = v.id_venditore WHERE rs.rn = 1;"
    },
    {
        "question": "Calcola la differenza tra ore lavorate e ore fatturate medie per tipo esecutore.",
        "answer": "SELECT et.descr_tipo_esecutore, AVG(l.ore_lavorazione - l.ore_fatturate_lavorazione) AS DiffMediaOre FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori_tipi] et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE l.ore_lavorazione IS NOT NULL AND l.ore_fatturate_lavorazione IS NOT NULL GROUP BY et.descr_tipo_esecutore;"
    },
    {
        "question": "Qual è il ranking dei tipi di contratto per valore medio di listino?",
        "answer": "SELECT ct.descr_tipo_contratto, AVG(c.imp_netto_listino_contratto) AS ValoreMedioListino, RANK() OVER (ORDER BY AVG(c.imp_netto_listino_contratto) DESC) AS Ranking FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_tipi] ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE c.imp_netto_listino_contratto > 0 GROUP BY ct.descr_tipo_contratto;"
    },
    {
        "question": "Mostra i veicoli (targa) la cui data di scadenza bollo è già passata quest'anno.",
        "answer": "SELECT targa_veicolo, dt_scadenza_bollo FROM [bi].[AUTO_veicoli] WHERE dt_scadenza_bollo < GETDATE() AND YEAR(dt_scadenza_bollo) = YEAR(GETDATE());"
    },
    {
        "question": "Elenca i contratti con valore permuta negativo (possibile errore).",
        "answer": "SELECT nr_contratto, imp_netto_permute_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_permute_contratto < 0;"
    },
    {
        "question": "Quanti clienti (ID Contatto) unici sono associati a ciascun gruppo venditori?",
        "answer": "SELECT v.gruppo_venditori, COUNT(DISTINCT c.id_cliente) AS ClientiUnici FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore GROUP BY v.gruppo_venditori;"
    },
    {
        "question": "Qual è il valore totale finanziato per i contratti senza permuta?",
        "answer": "SELECT SUM(imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND count_permute_contratto = 0;"
    },
    {
        "question": "Trova i contratti di tipo 'Usato Garantito' che non includono assicurazione.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE ct.descr_tipo_contratto = 'Usato Garantito' AND c.has_assicurazione_contratto = 0;"
    },
    {
        "question": "Quali sedi (punto vendita) hanno venduto veicoli con alimentazione 'Diesel'?",
        "answer": "SELECT DISTINCT s.descr_punto_vendita FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.alimentazione_veicolo = 'Diesel';"
    },
    {
        "question": "Mostra i contratti con garanzia interna 'Full Kasko'.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE garanzia_interna_contratto = 'Full Kasko';"
    },
    {
        "question": "Qual è la provenienza (codice) associata al contratto ID 'AT_CONTR555'?",
        "answer": "SELECT p.codice_provenienza FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE c.id_contratto = 'AT_CONTR555';"
    },
    {
        "question": "Elenca i clienti (codice fiscale) con più di 10 contratti totali.",
        "answer": "SELECT cli.codice_fiscale_cliente, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.codice_fiscale_cliente HAVING COUNT(c.id_contratto) > 10;"
    },
    {
        "question": "Qual è il tipo di vendita (gruppo) con il minor valore medio di contratto?",
        "answer": "SELECT TOP 1 tv.gruppo_tipo_vendita, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita GROUP BY tv.gruppo_tipo_vendita ORDER BY ValoreMedio ASC;"
    },
    {
        "question": "Mostra i contratti dove il valore finanziato è inferiore a 5000 euro.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_finanziato_contratto < 5000;"
    },
    {
        "question": "Quali gruppi di tipo contatto esistono per i contratti aperti?",
        "answer": "SELECT DISTINCT tc.gruppo_tipo_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contatti_tipi] AS tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.status_contratto <> 'Chiuso';"
    },
    {
        "question": "Trova i contratti relativi a veicoli la cui data di uscita è NULL.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.dt_uscita_veicolo IS NULL;"
    },
    {
        "question": "Elenca le aree (gruppo) associate a contratti con finanziamento.",
        "answer": "SELECT DISTINCT ar.gruppo_area FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_aree] AS ar ON c.id_area = ar.id_area WHERE c.has_finanziamento_contratto = 1;"
    },
    {
        "question": "Qual è il valore minimo di permuta per un contratto con finanziamento?",
        "answer": "SELECT MIN(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND count_permute_contratto > 0;"
    },
    {
        "question": "Mostra i veicoli (ID Gestionale) con codice tipo ritiro 'Leasing'.",
        "answer": "SELECT id_gesionale_veicolo FROM [bi].[AUTO_veicoli] WHERE codice_tipo_ritiro_veicolo = 'Leasing';"
    },
    {
        "question": "Quali aziende hanno almeno un contratto con permuta?",
        "answer": "SELECT DISTINCT a.descr_azienda FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE c.count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti la cui data di apertura e chiusura cadono nello stesso trimestre.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto IS NOT NULL AND DATEPART(quarter, dt_apertura_contratto) = DATEPART(quarter, dt_chiusura_contratto) AND YEAR(dt_apertura_contratto) = YEAR(dt_chiusura_contratto);"
    },
    {
        "question": "Elenca i clienti (ID Contatto) associati solo a contratti aperti.",
        "answer": "SELECT cli.id_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.id_contatto HAVING MIN(c.status_contratto) <> 'Chiuso' AND MAX(c.status_contratto) <> 'Chiuso';"
    },
    {
        "question": "Qual è il margine consuntivo medio per i contratti dove il ricavo previsto è zero?",
        "answer": "SELECT AVG(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd = 0;"
    },
    {
        "question": "Mostra i contratti (ID Redd) con costo previsto negativo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd < 0;"
    },
    {
        "question": "Quali descrizioni di costo/spesa sono associate all'indice contabile costo 3?",
        "answer": "SELECT DISTINCT COALESCE(descr_costo_redd, descr_spesa_redd) FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd = 3;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con provvigioni negative.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd < 0;"
    },
    {
        "question": "Trova i contratti (ID Redd) associati a ricavi di tipo 'Vendita Ricambi'.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd = 'Vendita Ricambi';"
    },
    {
        "question": "Qual è la somma dei ricavi previsti dal venditore per il livello margine 'Margine Lordo'?",
        "answer": "SELECT SUM(imp_ricavo_previsto_venditore_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Margine Lordo';"
    },
    {
        "question": "Mostra i codici spesa/costo univoci che iniziano con 'S_'.",
        "answer": "SELECT DISTINCT codice_spesa_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_spesa_costo_redd LIKE 'S\\_%' ESCAPE '\\';"
    },
    {
        "question": "Quali contratti (ID Redd) hanno una descrizione riga che termina con '(Promo)'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd LIKE '%(Promo)';"
    },
    {
        "question": "Trova il ricavo consuntivo massimo registrato per la voce 'Servizi Finanziari'.",
        "answer": "SELECT MAX(imp_ricavo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_ricavo_redd = 'Servizi Finanziari'; -- Assumendo colonna descr_ricavo_redd"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il tipo totale è NULL.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd IS NULL;"
    },
    {
        "question": "Qual è la commessa con la maggior differenza (in giorni) tra data apertura e data inizio lavori?",
        "answer": "SELECT TOP 1 nr_commessa, DATEDIFF(day, dt_apertura_commessa, dt_inizio_lavoro_commessa) AS DiffGiorni FROM [bi].[OFF_commesse] WHERE dt_apertura_commessa IS NOT NULL AND dt_inizio_lavoro_commessa IS NOT NULL ORDER BY DiffGiorni DESC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina il cui gruppo è 'Concessionari'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.gruppo_cliente_officina = 'Concessionari';"
    },
    {
        "question": "Quanti tipi di commessa (descrizione) ha gestito ogni officina?",
        "answer": "SELECT o.descr_officina, COUNT(DISTINCT c.id_tipo_commessa) AS NumTipiCommessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina GROUP BY o.descr_officina;"
    },
    {
        "question": "Elenca le commesse con data veicolo pronto ma ancora aperte.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa IS NOT NULL AND dt_chiusura_commessa IS NULL;"
    },
    {
        "question": "Trova le commesse con codice Service Card vuoto.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE codice_servicard_commessa = '';"
    },
    {
        "question": "Qual è il valore minimo delle spese rifiuti registrato?",
        "answer": "SELECT MIN(imp_netto_spese_rifiuti_commessa) FROM [bi].[OFF_commesse] WHERE imp_netto_spese_rifiuti_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli il cui macro modello contiene 'Van'.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE descr_macro_modello_commessa LIKE '%Van%';"
    },
    {
        "question": "Quante commesse chiuse ha l'accettatore 'Mario Rossi'?",
        "answer": "SELECT COUNT(id_commessa) FROM [bi].[OFF_commesse] WHERE accettatore_commessa = 'Mario Rossi' AND dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Elenca le officine che non hanno mai gestito commesse per clienti con Partita IVA.",
        "answer": "SELECT o.descr_officina FROM [bi].[OFF_officine] AS o WHERE o.id_officina NOT IN (SELECT DISTINCT id_officina FROM [bi].[OFF_commesse] WHERE partita_iva_cliente_commessa IS NOT NULL AND partita_iva_cliente_commessa <> '');"
    },
    {
        "question": "Trova le commesse la cui data di creazione è oggi.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa = CONVERT(date, GETDATE());"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno solo inconvenienti di tipo 'Garanzia'.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING MIN(tipo_carico_garanzia_inconveniente) IS NOT NULL AND MAX(tipo_carico_cliente_inconveniente) IS NULL;"
    },
    {
        "question": "Quali descrizioni complete di inconveniente esistono?",
        "answer": "SELECT DISTINCT descr_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_inconveniente IS NOT NULL AND descr_inconveniente <> '-';"
    },
    {
        "question": "Mostra gli inconvenienti (ID) associati a interventi pagati dal cliente.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_cliente_inconveniente = 'Cliente';"
    },
    {
        "question": "Quanti tipi di intervento diversi sono associati a inconvenienti?",
        "answer": "SELECT COUNT(DISTINCT id_tipo_intervento) FROM [bi].[OFF_commesse_inconvenienti] WHERE id_tipo_intervento <> 0;"
    },
    {
        "question": "Trova gli ID commessa senza inconvenienti associati a tipi intervento.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE id_tipo_intervento IS NULL OR id_tipo_intervento = 0;"
    },
    {
        "question": "Qual è il costo medio per riga nelle commesse dell'officina 'Alfa Service'?",
        "answer": "SELECT AVG(r.imp_netto_costo_commessa) FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_commesse] AS c ON r.id_commessa = c.id_commessa JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE o.descr_officina = 'Alfa Service';"
    },
    {
        "question": "Mostra le righe con quantità zero.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE qta_commessa = 0;"
    },
    {
        "question": "Elenca i tipi di carico cliente (distinti) presenti nelle righe di commessa.",
        "answer": "SELECT DISTINCT tipo_carico_cliente_commessa FROM [bi].[OFF_commesse_righe] WHERE tipo_carico_cliente_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il valore totale fatturato come ricambi (non omaggio)?",
        "answer": "SELECT SUM(imp_fattura_ricambi) FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 0;"
    },
    {
        "question": "Trova le righe di commessa associate a voci il cui gruppo è 'Manutenzione'.",
        "answer": "SELECT r.id_commessa, r.nr_riga_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_voci] AS v ON r.id_voce = v.id_voce WHERE v.gruppo_voce = 'Manutenzione';"
    },
    {
        "question": "Qual è il costo massimo di una singola lavorazione?",
        "answer": "SELECT MAX(costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni];"
    },
    {
        "question": "Mostra le lavorazioni associate a interventi di tipo 'Diagnosi Elettronica'.",
        "answer": "SELECT l.id_commessa, l.progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_interventi_tipi] AS it ON l.id_tipo_intervento = it.id_tipo_intervento WHERE it.descr_tipo_intervento = 'Diagnosi Elettronica';"
    },
    {
        "question": "Quante ore totali di lavori esterni sono state fatturate?",
        "answer": "SELECT SUM(l.ore_fatturate_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l WHERE l.gruppo_voce_lavorazione = 13; -- Assumendo 13 = Lavori Esterni"
    },
    {
        "question": "Elenca le lavorazioni eseguite da tecnici con qualifica 'Senior'.",
        "answer": "SELECT l.id_commessa, l.progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE e.qualifica_esecutore = 'Senior';"
    },
    {
        "question": "Trova il rapporto medio tra quota fatturato e costo lavorazione.",
        "answer": "SELECT AVG(quota_fatturato_lavorazione / NULLIF(costo_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_lavorazione > 0;"
    },
    {
        "question": "Qual è la media delle ore di permesso per tipo esecutore?",
        "answer": "SELECT et.descr_tipo_esecutore, AVG(p.ore_permessi_presenza) AS MediaOrePermessi FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore GROUP BY et.descr_tipo_esecutore;"
    },
    {
        "question": "Mostra gli esecutori che hanno registrato ore di assenza ma nessuna ora di ferie o permesso nello stesso giorno.",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.ore_assenza_presenza > 0 AND p.ore_ferie_presenza = 0 AND p.ore_permessi_presenza = 0;"
    },
    {
        "question": "Qual è il totale delle ore non produttive registrate finora?",
        "answer": "SELECT SUM(ore_nonprod_presenza) FROM [bi].[OFF_presenze];"
    },
    {
        "question": "Trova le date in cui il costo totale giornaliero di presenza ha superato i 1000 euro per una specifica officina.",
        "answer": "SELECT dt_presenza FROM [bi].[OFF_presenze] WHERE id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE descr_officina = 'Officina Specifica') GROUP BY dt_presenza HAVING SUM(ore_presenza * imp_costo_orario_presenza + ore_straordinarie_presenza * imp_costo_straordinario_presenza) > 1000;"
    },
    {
        "question": "Quale officina ha il costo orario medio (presenze) più basso?",
        "answer": "SELECT TOP 1 o.descr_officina, AVG(p.imp_costo_orario_presenza) AS CostoMedio FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_officine] AS o ON p.id_officina = o.id_officina WHERE p.imp_costo_orario_presenza IS NOT NULL GROUP BY o.descr_officina ORDER BY CostoMedio ASC;"
    },
    {
        "question": "Elenca i noleggi relativi a veicoli con telaio che inizia per 'WBA'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE telaio_noleggio LIKE 'WBA%';"
    },
    {
        "question": "Qual è il numero medio di giorni tra ritiro e consegna per i noleggi a breve termine?",
        "answer": "SELECT AVG(DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio)) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'N' AND dt_ritiro_noleggio IS NOT NULL AND dt_consegna_noleggio IS NOT NULL;"
    },
    {
        "question": "Trova i noleggi con costo veicolo superiore a 100 e costo carburante superiore a 20.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE costo_veicolo_noleggio > 100 AND costo_carburante_noleggio > 20;"
    },
    {
        "question": "Mostra i noleggi chiusi ma non ancora contabilizzati.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE dt_chiusura_noleggio IS NOT NULL AND idx_contabilizzazione_noleggio = 0;"
    },
    {
        "question": "Qual è il tipo di fatturazione più comune per i noleggi?",
        "answer": "SELECT TOP 1 tipo_fatturazione_noleggio, COUNT(*) AS Frequenza FROM [bi].[OFF_noleggi] GROUP BY tipo_fatturazione_noleggio ORDER BY Frequenza DESC;"
    },
    {
        "question": "Cerca i contatti il cui ID inizia con 'AT_'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE id_contatto LIKE 'AT_%';"
    },
    {
        "question": "Quali sono i contatti senza provincia specificata?",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE provincia_contatto IS NULL OR provincia_contatto = '';"
    },
    {
        "question": "Mostra i contatti il cui cognome è uguale al nome.",
        "answer": "SELECT id_contatto, nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE nome_contatto = cognome_contatto AND nome_contatto IS NOT NULL;"
    },
    {
        "question": "Elenca i contatti con CAP di 5 cifre ma non numerico.",
        "answer": "SELECT id_contatto, cap_contatto FROM [bi].[CONTT_contatti] WHERE LEN(cap_contatto) = 5 AND ISNUMERIC(cap_contatto) = 0;"
    },
    {
        "question": "Quanti contatti hanno un indirizzo email valido (contiene '@' e '.')?",
        "answer": "SELECT COUNT(id_contatto) FROM [bi].[CONTT_contatti] WHERE email_contatto LIKE '%@%.%'; "
    },
    {
        "question": "Mostra i clienti auto che hanno avuto commesse officina per veicoli diversi da quelli acquistati (basato su targa/telaio).",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_clienti] cli JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina WHERE ov.targa_veicolo_officina NOT IN (SELECT v.targa_veicolo FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.id_cliente = cli.id_cliente);"
    },
    {
        "question": "Calcola il tempo medio dalla chiusura della commessa all'emissione della fattura di noleggio associata.",
        "answer": "SELECT AVG(DATEDIFF(day, c.dt_chiusura_commessa, n.dt_doc_noleggio)) FROM [bi].[OFF_noleggi] n JOIN [bi].[OFF_commesse] c ON n.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa IS NOT NULL AND n.dt_doc_noleggio IS NOT NULL;"
    },
    {
        "question": "Elenca, per ogni tipo intervento, l'esecutore che vi ha dedicato più ore.",
        "answer": "WITH RankedExecutors AS ( SELECT l.id_tipo_intervento, l.id_esecutore, SUM(l.ore_lavorazione) AS OreTotali, ROW_NUMBER() OVER (PARTITION BY l.id_tipo_intervento ORDER BY SUM(l.ore_lavorazione) DESC) AS rn FROM [bi].[OFF_commesse_lavorazioni] l GROUP BY l.id_tipo_intervento, l.id_esecutore ) SELECT it.descr_tipo_intervento, e.descr_esecutore, re.OreTotali FROM RankedExecutors re JOIN [bi].[OFF_interventi_tipi] it ON re.id_tipo_intervento = it.id_tipo_intervento JOIN [bi].[OFF_esecutori] e ON re.id_esecutore = e.id_esecutore WHERE re.rn = 1;"
    },
    {
        "question": "Mostra i clienti (ID Contatto) il cui ultimo contratto è stato aperto più di 3 anni fa.",
        "answer": "SELECT id_cliente FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING MAX(dt_apertura_contratto) < DATEADD(year, -3, GETDATE());"
    },
    {
        "question": "Calcola il rapporto tra costo lavori terzi e costo totale (lavorazioni + righe) per ogni commessa.",
        "answer": "WITH CostoTerzi AS (SELECT id_commessa, SUM(ISNULL(imp_netto_costo_lavori_terzi_commessa,0)) AS CstTerzi FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa), CostoTot AS (SELECT id_commessa, SUM(Costo) AS CstTot FROM (SELECT id_commessa, ISNULL(imp_netto_costo_commessa,0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0) AS Costo FROM [bi].[OFF_commesse_righe] UNION ALL SELECT id_commessa, ISNULL(costo_lavorazione,0) FROM [bi].[OFF_commesse_lavorazioni]) AS T GROUP BY id_commessa) SELECT c.nr_commessa, ISNULL(ct.CstTerzi, 0) / NULLIF(cst.CstTot, 0) AS RapportoCostoTerzi FROM [bi].[OFF_commesse] c LEFT JOIN CostoTerzi ct ON c.id_commessa = ct.id_commessa LEFT JOIN CostoTot cst ON c.id_commessa = cst.id_commessa WHERE cst.CstTot > 0;"
    },
    {
        "question": "Mostra il valore del contratto e il valore di listino per i contratti aperti oggi.",
        "answer": "SELECT nr_contratto, imp_netto_contratto, imp_netto_listino_contratto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto = CONVERT(date, GETDATE());"
    },
    {
        "question": "Quali clienti (codice master) hanno contratti con più di una permuta?",
        "answer": "SELECT DISTINCT cli.codice_master_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente WHERE c.count_permute_contratto > 1;"
    },
    {
        "question": "Elenca i tipi di contratto (codice) associati a veicoli usati.",
        "answer": "SELECT DISTINCT ct.codice_tipo_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.nuovo_usato_veicolo = 'Usato';"
    },
    {
        "question": "Qual è il valore medio delle permute per l'azienda 'Gruppo Ferrari'?",
        "answer": "SELECT AVG(c.imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.id_azienda = 'GF' AND c.count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti con finanziamento ma senza importo finanziato specificato (o zero).",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND (imp_netto_finanziato_contratto IS NULL OR imp_netto_finanziato_contratto = 0);"
    },
    {
        "question": "Quali venditori hanno venduto auto con garanzia interna 'Argento'?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE c.garanzia_interna_contratto = 'Argento';"
    },
    {
        "question": "Mostra i contratti per veicoli la cui destinazione alla vendita è 'Commercianti'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.destinazione_alla_vendita_veicolo = 'Commercianti';"
    },
    {
        "question": "Qual è il giorno della settimana con il maggior numero medio di contratti aperti?",
        "answer": "SELECT TOP 1 DATENAME(weekday, dt_apertura_contratto) AS Giorno, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY DATENAME(weekday, dt_apertura_contratto), DATEPART(weekday, dt_apertura_contratto) ORDER BY NumContratti DESC;"
    },
    {
        "question": "Qual è la provenienza (gruppo) con il maggior valore medio di contratto?",
        "answer": "SELECT TOP 1 p.gruppo_provenienza, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza GROUP BY p.gruppo_provenienza ORDER BY ValoreMedio DESC;"
    },
    {
        "question": "Elenca le sedi (descrizione) associate a contratti con segnalatore specificato.",
        "answer": "SELECT DISTINCT s.descr_sede FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede WHERE c.segnalatore_contratto IS NOT NULL AND c.segnalatore_contratto <> '(Non definito)';"
    },
    {
        "question": "Qual è il valore totale dei contratti senza permuta?",
        "answer": "SELECT SUM(imp_netto_contratto) FROM [bi].[AUTO_contratti] WHERE count_permute_contratto = 0;"
    },
    {
        "question": "Mostra i contratti relativi a veicoli con data di arrivo NULL.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.dt_arrivo_veicolo IS NULL;"
    },
    {
        "question": "Quanti tipi di contatto cliente (gruppo) distinti sono presenti?",
        "answer": "SELECT COUNT(DISTINCT gruppo_tipo_contatto) FROM [bi].[AUTO_contatti_tipi] WHERE gruppo_tipo_contatto IS NOT NULL;"
    },
    {
        "question": "Trova i contratti relativi a veicoli ritirati tramite contratto 'RIT200'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.id_contratto_ritiro_veicolo = 'RIT200';"
    },
    {
        "question": "Elenca i gruppi di aree che hanno avuto contratti quest'anno.",
        "answer": "SELECT DISTINCT ar.gruppo_area FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_aree] AS ar ON c.id_area = ar.id_area WHERE YEAR(c.dt_apertura_contratto) = YEAR(GETDATE());"
    },
    {
        "question": "Qual è il valore massimo di permuta per un contratto con assicurazione e finanziamento?",
        "answer": "SELECT MAX(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_assicurazione_contratto = 1 AND has_finanziamento_contratto = 1 AND count_permute_contratto > 0;"
    },
    {
        "question": "Mostra i veicoli (targa) con codice tipo ritiro 'Asta'.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE codice_tipo_ritiro_veicolo = 'Asta';"
    },
    {
        "question": "Quali aziende (ID) hanno registrato contratti nel 2024?",
        "answer": "SELECT DISTINCT a.id_azienda FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda WHERE YEAR(c.dt_apertura_contratto) = 2024;"
    },
    {
        "question": "Trova i contratti la cui data di chiusura è avvenuta nel primo trimestre 2023.",
        "answer": "SELECT nr_contratto, dt_chiusura_contratto FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto >= '2023-01-01' AND dt_chiusura_contratto < '2023-04-01';"
    },
    {
        "question": "Elenca i clienti (ID Contatto) associati a contratti con tipo vendita 'Privato'.",
        "answer": "SELECT DISTINCT c.id_cliente FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE tv.descr_tipo_vendita = 'Privato';"
    },
    {
        "question": "Qual è la differenza media tra costo consuntivo e costo previsto?",
        "answer": "SELECT AVG(imp_costo_consuntivo_redd - imp_costo_previsto_redd) AS DiffMediaCosto FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL AND imp_costo_previsto_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il ricavo previsto dal venditore è zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_venditore_redd = 0;"
    },
    {
        "question": "Quali tipi totali (parziale/totale) sono associati al livello margine '2'?",
        "answer": "SELECT DISTINCT tipo_totale_redd FROM [bi].[AUTO_contratti_redd] WHERE liv_margine_redd = '2';"
    },
    {
        "question": "Elenca i contratti (ID Redd) con costo previsto dal venditore negativo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_venditore_redd < 0;"
    },
    {
        "question": "Trova i contratti (ID Redd) senza indice contabile specificato (né costo né spesa).",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd IS NULL AND idx_contabile_spesa_redd IS NULL;"
    },
    {
        "question": "Qual è il valore minimo della provvigione registrata?",
        "answer": "SELECT MIN(imp_netto_provvigione_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd IS NOT NULL;"
    },
    {
        "question": "Mostra i tipi di costo/ricavo (codice) che hanno un margine consuntivo sempre positivo.",
        "answer": "SELECT codice_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] GROUP BY codice_tipo_costo_ricavo_redd HAVING MIN(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) > 0;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno costi o spese con codice che termina con '_VAR'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_costo_redd LIKE '%\\_VAR' ESCAPE '\\' OR codice_spesa_redd LIKE '%\\_VAR' ESCAPE '\\';"
    },
    {
        "question": "Trova il ricavo consuntivo totale per il tipo totale 'ALTRI RICAVI'.",
        "answer": "SELECT SUM(imp_ricavo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd = 'ALTRI RICAVI';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove la descrizione riga è uguale alla descrizione spesa.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd = descr_spesa_redd AND descr_riga_redd IS NOT NULL;"
    },
    {
        "question": "Qual è la commessa con la data di inizio lavori più vecchia?",
        "answer": "SELECT TOP 1 nr_commessa, dt_inizio_lavoro_commessa FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa IS NOT NULL ORDER BY dt_inizio_lavoro_commessa ASC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina la cui partita IVA inizia per '012'.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE partita_iva_cliente_commessa LIKE '012%';"
    },
    {
        "question": "Quante commesse per marca veicolo ha gestito l'officina 'Service Sud'?",
        "answer": "SELECT v.descr_marca_veicolo_officina, COUNT(c.id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE o.descr_officina = 'Service Sud' GROUP BY v.descr_marca_veicolo_officina;"
    },
    {
        "question": "Elenca le commesse la cui data veicolo pronto è nel mese corrente.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa >= DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) AND dt_veicolo_pronto_commessa < DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 1, 0);"
    },
    {
        "question": "Trova le commesse con codice EstGar 'GARPLUS'.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE codice_estgar_commessa = 'GARPLUS';"
    },
    {
        "question": "Qual è il valore totale del materiale di consumo per tutte le commesse?",
        "answer": "SELECT SUM(imp_netto_materiale_consumo_commessa) FROM [bi].[OFF_commesse];"
    },
    {
        "question": "Mostra le commesse per veicoli con codice interno che contiene 'USATO'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.codice_veicolo_officina LIKE '%USATO%';"
    },
    {
        "question": "Quante commesse aperte ha ogni accettatore?",
        "answer": "SELECT accettatore_commessa, COUNT(id_commessa) AS CommesseAperte FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL GROUP BY accettatore_commessa;"
    },
    {
        "question": "Elenca le officine associate a commesse di tipo 'Campagna Promozionale'.",
        "answer": "SELECT DISTINCT o.descr_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE ct.descr_tipo_commessa = 'Campagna Promozionale';"
    },
    {
        "question": "Trova le commesse la cui data di consegna effettiva è oggi.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_effettiva_consegna_commessa = CONVERT(date, GETDATE());"
    },
    {
        "question": "Elenca gli ID delle commesse con inconvenienti di tipo 'Rumorosità'.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente = 'Rumorosità';"
    },
    {
        "question": "Quali gruppi inconveniente sono associati a interventi di tipo 'Tagliando'?",
        "answer": "SELECT DISTINCT i.gruppo_inconveniente FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS it ON i.id_tipo_intervento = it.id_tipo_intervento WHERE it.descr_tipo_intervento = 'Tagliando';"
    },
    {
        "question": "Mostra gli inconvenienti (ID) senza codice di carico specificato.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE codice_carico_inconveniente IS NULL OR codice_carico_inconveniente = '';"
    },
    {
        "question": "Quanti inconvenienti totali per ogni tipo (garanzia vs cliente)?",
        "answer": "SELECT tipo_carico_cliente_inconveniente, tipo_carico_garanzia_inconveniente, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] GROUP BY tipo_carico_cliente_inconveniente, tipo_carico_garanzia_inconveniente;"
    },
    {
        "question": "Trova gli ID commessa con più di 3 tipi di inconveniente diversi.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING COUNT(DISTINCT tipo_inconveniente) > 3;"
    },
    {
        "question": "Qual è il costo medio delle righe associate all'inconveniente 'ID12345'?",
        "answer": "SELECT AVG(imp_netto_costo_commessa) FROM [bi].[OFF_commesse_righe] WHERE id_inconveniente = 'ID12345';"
    },
    {
        "question": "Mostra le righe di commessa con quantità 1 e unità di misura 'PZ' (Pezzi).",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE qta_commessa = 1 AND codice_umis_commessa = 'PZ';"
    },
    {
        "question": "Elenca i tipi di carico garanzia (distinti) presenti nelle righe di commessa.",
        "answer": "SELECT DISTINCT tipo_carico_garanzia_commessa FROM [bi].[OFF_commesse_righe] WHERE tipo_carico_garanzia_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il valore totale fatturato come 'Altro'?",
        "answer": "SELECT SUM(imp_fatturato_altro) FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Trova le righe di commessa con percentuale addebito cliente del 100%.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE perc_addebito_cliente_commessa = 1.0;"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni per le commesse chiuse il mese scorso?",
        "answer": "SELECT AVG(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa >= DATEADD(month, -1, DATEADD(day, 1-DAY(GETDATE()), GETDATE())) AND c.dt_chiusura_commessa < DATEADD(day, 1-DAY(GETDATE()), GETDATE());"
    },
    {
        "question": "Mostra le lavorazioni con codice voce uguale al codice lavorazione.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE codice_voce_lavorazione_lavorazione = codice_lavorazione_commessa; -- Assumendo colonna codice_lavorazione"
    },
    {
        "question": "Quante ore totali sono state lavorate dagli esecutori appartenenti al gruppo 'Senior'?",
        "answer": "SELECT SUM(l.ore_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE e.gruppo_esecutore = 'Senior';"
    },
    {
        "question": "Elenca le lavorazioni associate a inconvenienti senza descrizione breve.",
        "answer": "SELECT l.id_commessa, l.progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse_inconvenienti] AS i ON l.id_inconveniente = i.id_inconveniente WHERE i.descr_breve_inconveniente = '-';"
    },
    {
        "question": "Trova il rapporto medio tra costo lavorazione e costo lavori esterni (dove entrambi presenti).",
        "answer": "SELECT AVG(l.costo_lavorazione / NULLIF(l.costo_lavoro_ext_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.costo_lavoro_ext_lavorazione > 0 AND l.costo_lavorazione IS NOT NULL;"
    },
    {
        "question": "Qual è la media delle ore di ferie per tipo esecutore?",
        "answer": "SELECT et.descr_tipo_esecutore, AVG(p.ore_ferie_presenza) AS MediaOreFerie FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore GROUP BY et.descr_tipo_esecutore;"
    },
    {
        "question": "Mostra gli esecutori che hanno avuto giorni con solo ore teoriche (senza presenza, assenza, ferie, etc).",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.ore_teoriche_presenza > 0 AND p.ore_presenza = 0 AND p.ore_assenza_presenza = 0 AND p.ore_ferie_presenza = 0 AND p.ore_permessi_presenza = 0 GROUP BY e.descr_esecutore;"
    },
    {
        "question": "Qual è il totale delle ore di presenza registrate per gli accettatori?",
        "answer": "SELECT SUM(ore_presenza) FROM [bi].[OFF_presenze] WHERE accettatore_presenza = 1;"
    },
    {
        "question": "Trova le date in cui il totale delle ore straordinarie ha superato le 20 ore.",
        "answer": "SELECT dt_presenza, SUM(ore_straordinarie_presenza) AS TotStraordinario FROM [bi].[OFF_presenze] GROUP BY dt_presenza HAVING SUM(ore_straordinarie_presenza) > 20;"
    },
    {
        "question": "Quale officina ha la media più alta di ore non produttive per esecutore?",
        "answer": "SELECT TOP 1 o.descr_officina, AVG(p.ore_nonprod_presenza) AS MediaOreNonProd FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_officine] AS o ON p.id_officina = o.id_officina GROUP BY o.descr_officina ORDER BY MediaOreNonProd DESC;"
    },
    {
        "question": "Elenca i noleggi per veicoli il cui telaio è specificato.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE telaio_noleggio IS NOT NULL AND telaio_noleggio <> '';"
    },
    {
        "question": "Qual è il numero medio di km percorsi al giorno nei noleggi chiusi?",
        "answer": "SELECT AVG((km_consegna_noleggio - km_ritiro_noleggio) / NULLIF(DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio), 0)) FROM [bi].[OFF_noleggi] WHERE dt_chiusura_noleggio IS NOT NULL AND DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio) > 0;"
    },
    {
        "question": "Trova i noleggi di tipo affidamento 'Noleggio a Breve'.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE descr_tipo_affidamento_noleggio = 'Noleggio a Breve';"
    },
    {
        "question": "Mostra i noleggi con costo veicolo o costo carburante negativi.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE costo_veicolo_noleggio < 0 OR costo_carburante_noleggio < 0;"
    },
    {
        "question": "Qual è l'importo massimo fatturato per un noleggio a breve termine?",
        "answer": "SELECT MAX(imp_fatt_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'N';"
    },
    {
        "question": "Cerca i contatti la cui email contiene 'info@'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE email_contatto LIKE 'info@%';"
    },
    {
        "question": "Quali sono i contatti senza CAP specificato?",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE cap_contatto IS NULL OR cap_contatto = '';"
    },
    {
        "question": "Mostra i contatti con sesso 'M' e provincia 'MI'.",
        "answer": "SELECT id_contatto, nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE sesso_contatto = 'M' AND provincia_contatto = 'MI';"
    },
    {
        "question": "Elenca i contatti senza partita IVA (anche se aziende).",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE partita_iva_contatto IS NULL OR partita_iva_contatto = '';"
    },
    {
        "question": "Quanti contatti hanno un ID anagrafica inferiore a 1000?",
        "answer": "SELECT COUNT(id_contatto) FROM [bi].[CONTT_contatti] WHERE id_anagrafica_contatto < 1000;"
    },
    {
        "question": "Mostra i clienti che hanno acquistato un'auto con finanziamento e hanno avuto una commessa in garanzia.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina JOIN [bi].[OFF_commesse_inconvenienti] i ON oc.id_commessa = i.id_commessa WHERE ac.has_finanziamento_contratto = 1 AND i.tipo_carico_garanzia_inconveniente IS NOT NULL AND i.tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Calcola il rapporto tra ore lavorate su commesse auto (tramite veicolo) e ore lavorate su commesse non auto (se distinguibili).",
        "answer": "SELECT SUM(CASE WHEN av.id_veicolo IS NOT NULL THEN l.ore_lavorazione ELSE 0 END) / NULLIF(SUM(CASE WHEN av.id_veicolo IS NULL THEN l.ore_lavorazione ELSE 0 END), 0) AS RapportoOreAutoVsNonAuto FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_commesse] oc ON l.id_commessa = oc.id_commessa LEFT JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina LEFT JOIN [bi].[AUTO_veicoli] av ON ov.targa_veicolo_officina = av.targa_veicolo; -- Join e logica ipotetica"
    },
    {
        "question": "Elenca, per ogni anno, il venditore con il maggior valore totale di contratti.",
        "answer": "WITH YearlySales AS ( SELECT YEAR(dt_apertura_contratto) AS Anno, id_venditore, SUM(imp_netto_contratto) AS ValoreTotale, ROW_NUMBER() OVER (PARTITION BY YEAR(dt_apertura_contratto) ORDER BY SUM(imp_netto_contratto) DESC) AS rn FROM [bi].[AUTO_contratti] GROUP BY YEAR(dt_apertura_contratto), id_venditore ) SELECT ys.Anno, v.descr_venditore, ys.ValoreTotale FROM YearlySales ys JOIN [bi].[AUTO_venditori] v ON ys.id_venditore = v.id_venditore WHERE ys.rn = 1 ORDER BY ys.Anno DESC;"
    },
    {
        "question": "Mostra il ranking dei clienti officina basato sul numero totale di ore lavorate sulle loro commesse.",
        "answer": "WITH CustomerLabor AS ( SELECT oc.id_cliente_officina, SUM(l.ore_lavorazione) AS OreTotali FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_commesse_lavorazioni] l ON oc.id_commessa = l.id_commessa GROUP BY oc.id_cliente_officina ) SELECT cli.descr_cliente_officina, cl.OreTotali, RANK() OVER (ORDER BY cl.OreTotali DESC) AS Ranking FROM CustomerLabor cl JOIN [bi].[OFF_clienti] cli ON cl.id_cliente_officina = cli.id_cliente_officina;"
    },
    {
        "question": "Calcola la differenza media, per ogni mese, tra le ore teoriche e le ore di presenza effettive.",
        "answer": "SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, AVG(ore_teoriche_presenza - ore_presenza) AS DiffMediaOreTeoPres FROM [bi].[OFF_presenze] WHERE ore_presenza IS NOT NULL GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ORDER BY Anno, Mese;"
    },
    {
        "question": "Mostra il valore del contratto precedente per ogni contratto dello stesso cliente.",
        "answer": "WITH ContractLag AS ( SELECT id_cliente, nr_contratto, dt_apertura_contratto, imp_netto_contratto, LAG(imp_netto_contratto, 1, 0) OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto) AS PrevContractValue FROM [bi].[AUTO_contratti] ) SELECT cl.nr_contratto, cl.dt_apertura_contratto, cl.imp_netto_contratto, cl.PrevContractValue FROM ContractLag cl;"
    },
    {
        "question": "Quali clienti hanno avuto un aumento del valore del contratto di oltre il 20% rispetto al contratto precedente?",
        "answer": "WITH ContractLag AS ( SELECT id_cliente, nr_contratto, dt_apertura_contratto, imp_netto_contratto, LAG(imp_netto_contratto, 1, 0) OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto) AS PrevContractValue FROM [bi].[AUTO_contratti] ) SELECT DISTINCT cli.descr_cliente FROM ContractLag cl JOIN [bi].[AUTO_clienti] cli ON cl.id_cliente = cli.id_cliente WHERE cl.PrevContractValue > 0 AND cl.imp_netto_contratto > (cl.PrevContractValue * 1.20);"
    },
    {
        "question": "Elenca i veicoli (targa) la cui ultima data di uscita è stata più di 1 anno fa.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE dt_uscita_veicolo < DATEADD(year, -1, GETDATE());"
    },
    {
        "question": "Quanti contratti ha ogni gruppo di clienti per tipo di contratto?",
        "answer": "SELECT cli.gruppo_tipo_cliente, ct.descr_tipo_contratto, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto GROUP BY cli.gruppo_tipo_cliente, ct.descr_tipo_contratto;"
    },
    {
        "question": "Qual è il valore totale del listino per i contratti senza permuta e senza finanziamento?",
        "answer": "SELECT SUM(imp_netto_listino_contratto) FROM [bi].[AUTO_contratti] WHERE count_permute_contratto = 0 AND has_finanziamento_contratto = 0;"
    },
    {
        "question": "Trova i contratti associati a veicoli ritirati dal fornitore 'ImportAuto'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.codice_fornitore_veicolo = 'IMPORTAUTO';"
    },
    {
        "question": "Quali venditori hanno venduto veicoli con status 'Km 0'?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_veicoli] AS ve ON c.id_veicolo = ve.id_veicolo WHERE ve.status_veicolo = 'Km 0';"
    },
    {
        "question": "Mostra i contratti aperti il primo lunedì di quest'anno.",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto = DATEADD(wk, DATEDIFF(wk, 0, DATEADD(dd, -DATEPART(dw, DATEFROMPARTS(YEAR(GETDATE()), 1, 1))+1, DATEFROMPARTS(YEAR(GETDATE()), 1, 1))), 1);"
    },
    {
        "question": "Qual è il canale di vendita (gruppo) con il minor valore medio di permuta?",
        "answer": "SELECT TOP 1 cv.gruppo_canale_vendita, AVG(c.imp_netto_permute_contratto) AS MediaPermuta FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_canali_vendita] AS cv ON c.id_canale_vendita = cv.id_canale_vendita WHERE c.count_permute_contratto > 0 GROUP BY cv.gruppo_canale_vendita ORDER BY MediaPermuta ASC;"
    },
    {
        "question": "Elenca le sedi (descrizione) associate a contratti di tipo 'Noleggio'.",
        "answer": "SELECT DISTINCT s.descr_sede FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede JOIN [bi].[AUTO_contratti_tipi] AS ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE ct.descr_tipo_contratto LIKE '%Noleggio%';"
    },
    {
        "question": "Qual è il valore mediano (approssimato) dei contratti?",
        "answer": "SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY imp_netto_contratto) OVER () AS MedianValue FROM [bi].[AUTO_contratti];"
    },
    {
        "question": "Mostra i contratti relativi a veicoli la cui destinazione alla vendita è nulla.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.destinazione_alla_vendita_veicolo IS NULL;"
    },
    {
        "question": "Quanti gruppi di tipo contatto diversi sono associati a contratti con assicurazione?",
        "answer": "SELECT COUNT(DISTINCT tc.gruppo_tipo_contatto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contatti_tipi] AS tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.has_assicurazione_contratto = 1;"
    },
    {
        "question": "Trova i contratti relativi a veicoli con codice tipo ritiro 'Privato'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.codice_tipo_ritiro_veicolo = 'Privato';"
    },
    {
        "question": "Elenca le aree (descrizione) che non hanno contratti associati a veicoli usati.",
        "answer": "SELECT descr_area FROM [bi].[AUTO_aree] WHERE id_area NOT IN (SELECT DISTINCT id_area FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE v.nuovo_usato_veicolo = 'Usato');"
    },
    {
        "question": "Qual è la differenza media tra valore di listino e valore netto del contratto per ogni venditore?",
        "answer": "SELECT v.descr_venditore, AVG(c.imp_netto_listino_contratto - c.imp_netto_contratto) AS ScontoMedio FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore WHERE c.imp_netto_listino_contratto > 0 GROUP BY v.descr_venditore;"
    },
    {
        "question": "Mostra i veicoli (targa) il cui status è cambiato nell'ultimo mese (richiede storico).",
        "answer": "SELECT v.targa_veicolo FROM [bi].[AUTO_veicoli] v JOIN [bi].[AUTO_veicoli] v_prev ON v.id_veicolo = v_prev.id_veicolo WHERE v.data_modifica >= DATEADD(month, -1, GETDATE()) AND v.status_veicolo <> v_prev.status_veicolo; -- Questa query è ipotetica, necessita di uno snapshot precedente o tabella storica"
    },
    {
        "question": "Quali aziende hanno un valore medio di contratto superiore a 40000 euro?",
        "answer": "SELECT a.descr_azienda, AVG(c.imp_netto_contratto) AS MediaContratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] AS a ON v.id_azienda = a.id_azienda GROUP BY a.descr_azienda HAVING AVG(c.imp_netto_contratto) > 40000;"
    },
    {
        "question": "Trova i contratti la cui data di apertura è un giorno festivo (es. 1 Gen, 25 Apr, 1 Mag, etc. - richiede tabella festività).",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE CONVERT(date, dt_apertura_contratto) IN ('2024-01-01', '2024-04-25', '2024-05-01', '2024-06-02', '2024-08-15', '2024-11-01', '2024-12-08', '2024-12-25', '2024-12-26'); -- Esempio per il 2024"
    },
    {
        "question": "Elenca i clienti (ID Contatto) con contratti in più di una area.",
        "answer": "SELECT id_cliente, COUNT(DISTINCT id_area) AS NumAree FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(DISTINCT id_area) > 1;"
    },
    {
        "question": "Qual è il rapporto tra costo previsto venditore e costo previsto generale?",
        "answer": "SELECT AVG(imp_costo_previsto_venditore_redd / NULLIF(imp_costo_previsto_redd, 0)) FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd > 0;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il ricavo consuntivo è maggiore del ricavo previsto dal venditore.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd > imp_ricavo_previsto_venditore_redd;"
    },
    {
        "question": "Quali descrizioni di margine sono associate all'indice contabile costo 5?",
        "answer": "SELECT DISTINCT descr_margine_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd = 5;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con provvigione esattamente pari a 100 euro.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd = 100;"
    },
    {
        "question": "Trova i contratti (ID Redd) associati a costi il cui codice inizia per 'INT'.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_costo_redd LIKE 'INT%';"
    },
    {
        "question": "Qual è la somma dei ricavi consuntivi per il livello margine 'Margine Industriale'?",
        "answer": "SELECT SUM(imp_ricavo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Margine Industriale';"
    },
    {
        "question": "Mostra i codici spesa/costo che non hanno mai avuto un valore previsto.",
        "answer": "SELECT DISTINCT codice_spesa_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_spesa_costo_redd NOT IN (SELECT DISTINCT codice_spesa_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NOT NULL OR imp_ricavo_previsto_redd IS NOT NULL);"
    },
    {
        "question": "Quali contratti (ID Redd) hanno una descrizione riga uguale a 'Manutenzione Standard'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd = 'Manutenzione Standard';"
    },
    {
        "question": "Trova il ricavo previsto minimo registrato.",
        "answer": "SELECT MIN(imp_ricavo_previsto_redd) FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd IS NOT NULL;"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il margine previsto è negativo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE (ISNULL(imp_ricavo_previsto_redd, 0) - ISNULL(imp_costo_previsto_redd, 0)) < 0;"
    },
    {
        "question": "Qual è la commessa con la durata maggiore tra inizio e fine lavori?",
        "answer": "SELECT TOP 1 nr_commessa, DATEDIFF(day, dt_inizio_lavoro_commessa, dt_fine_lavoro_commessa) AS DurataLavori FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa IS NOT NULL AND dt_fine_lavoro_commessa IS NOT NULL ORDER BY DurataLavori DESC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina la cui descrizione termina con 'SPA'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.descr_cliente_officina LIKE '%SPA';"
    },
    {
        "question": "Quanti veicoli unici (per telaio) sono stati gestiti da ogni accettatore?",
        "answer": "SELECT accettatore_commessa, COUNT(DISTINCT telaio_commessa) AS VeicoliUnici FROM [bi].[OFF_commesse] WHERE telaio_commessa IS NOT NULL GROUP BY accettatore_commessa;"
    },
    {
        "question": "Elenca le commesse con data chiusura nel mese corrente ma aperte l'anno scorso.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa >= DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) AND dt_chiusura_commessa < DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 1, 0) AND YEAR(dt_apertura_commessa) = YEAR(GETDATE()) - 1;"
    },
    {
        "question": "Trova le commesse senza codice Service Card definito.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE codice_servicard_commessa IS NULL OR codice_servicard_commessa = '';"
    },
    {
        "question": "Qual è il valore massimo delle spese materiale di consumo?",
        "answer": "SELECT MAX(imp_netto_materiale_consumo_commessa) FROM [bi].[OFF_commesse];"
    },
    {
        "question": "Mostra le commesse per veicoli il cui modello inizia per 'C'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_modello_veicolo_officina LIKE 'C%';"
    },
    {
        "question": "Quante commesse chiuse ha ogni tipo commessa?",
        "answer": "SELECT ct.descr_tipo_commessa, COUNT(c.id_commessa) AS CommesseChiuse FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE c.dt_chiusura_commessa IS NOT NULL GROUP BY ct.descr_tipo_commessa;"
    },
    {
        "question": "Elenca gli accettatori che hanno gestito commesse solo per l'officina 'Auto City'.",
        "answer": "SELECT accettatore_commessa FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_officine] o ON c.id_officina = o.id_officina WHERE o.descr_officina = 'Auto City' GROUP BY accettatore_commessa HAVING MIN(o.descr_officina) = 'Auto City' AND MAX(o.descr_officina) = 'Auto City';"
    },
    {
        "question": "Trova le commesse la cui data di creazione è la stessa della data veicolo pronto.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa = dt_veicolo_pronto_commessa;"
    },
    {
        "question": "Elenca gli ID delle commesse con inconvenienti di gruppo 'Impianto Frenante'.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE gruppo_inconveniente = 'Impianto Frenante';"
    },
    {
        "question": "Quali tipi di intervento sono associati agli inconvenienti caricati in garanzia?",
        "answer": "SELECT DISTINCT it.descr_tipo_intervento FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS it ON i.id_tipo_intervento = it.id_tipo_intervento WHERE i.tipo_carico_garanzia_inconveniente IS NOT NULL AND i.tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Mostra gli inconvenienti (descrizione breve) con codice che contiene 'WARN'.",
        "answer": "SELECT id_inconveniente, descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE codice_inconveniente LIKE '%WARN%';"
    },
    {
        "question": "Quanti inconvenienti ci sono stati per ogni azienda?",
        "answer": "SELECT c.id_azienda, COUNT(i.id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_commesse] AS c ON i.id_commessa = c.id_commessa GROUP BY c.id_azienda;"
    },
    {
        "question": "Trova gli ID commessa con riga inconveniente > 10.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE ISNUMERIC(riga_inconveniente) = 1 AND CAST(riga_inconveniente AS INT) > 10;"
    },
    {
        "question": "Qual è il valore totale delle righe (importo netto) per la commessa 'COM1010'?",
        "answer": "SELECT SUM(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM1010';"
    },
    {
        "question": "Mostra le righe dove il prezzo di listino è negativo.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_prezzo_listino_commessa < 0;"
    },
    {
        "question": "Elenca i codici articolo unici associati a righe omaggio.",
        "answer": "SELECT DISTINCT codice_articolo_commessa FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 1 AND codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Qual è il costo medio delle righe per tipo di carico cliente?",
        "answer": "SELECT tipo_carico_cliente_commessa, AVG(imp_netto_costo_commessa) AS CostoMedio FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_commessa IS NOT NULL GROUP BY tipo_carico_cliente_commessa;"
    },
    {
        "question": "Trova le righe di commessa con quantità tempario > 0.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE qta_tempario_commessa > 0;"
    },
    {
        "question": "Qual è il costo totale delle lavorazioni eseguite da esecutori con qualifica 'Meccanico'?",
        "answer": "SELECT SUM(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE e.qualifica_esecutore = 'Meccanico';"
    },
    {
        "question": "Mostra le lavorazioni con ore lavorate ma senza costo specificato.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione > 0 AND (costo_lavorazione IS NULL OR costo_lavorazione = 0);"
    },
    {
        "question": "Quante ore totali sono state fatturate per il gruppo voce 'Manodopera Diretta'?",
        "answer": "SELECT SUM(ore_fatturate_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] WHERE gruppo_voce_lavorazione = 12; -- Assumendo 12 = Manodopera"
    },
    {
        "question": "Elenca le lavorazioni con quota fatturato inferiore a 10 euro.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE quota_fatturato_lavorazione < 10;"
    },
    {
        "question": "Trova la commessa con il maggior numero di ore lavorate totali.",
        "answer": "SELECT TOP 1 c.nr_commessa, SUM(l.ore_lavorazione) AS OreTotali FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_commesse] AS c ON l.id_commessa = c.id_commessa GROUP BY c.nr_commessa ORDER BY OreTotali DESC;"
    },
    {
        "question": "Qual è la media delle ore di straordinario per tipo esecutore?",
        "answer": "SELECT et.descr_tipo_esecutore, AVG(p.ore_straordinarie_presenza) AS MediaOreStraordinario FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore GROUP BY et.descr_tipo_esecutore;"
    },
    {
        "question": "Mostra gli esecutori che non hanno mai registrato ore di permesso.",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_esecutori] e WHERE e.id_esecutore NOT IN (SELECT DISTINCT id_esecutore FROM [bi].[OFF_presenze] WHERE ore_permessi_presenza > 0);"
    },
    {
        "question": "Qual è il costo totale annuo delle ore teoriche per l'officina Z?",
        "answer": "SELECT SUM(p.ore_teoriche_presenza * p.imp_costo_orario_presenza) FROM [bi].[OFF_presenze] AS p WHERE p.id_officina = (SELECT id_officina FROM [bi].[OFF_officine] WHERE descr_officina = 'Officina Z') AND YEAR(p.dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Trova le date in cui tutti gli esecutori presenti avevano ore teoriche > 0.",
        "answer": "SELECT dt_presenza FROM [bi].[OFF_presenze] WHERE ore_presenza > 0 GROUP BY dt_presenza HAVING MIN(ore_teoriche_presenza) > 0;"
    },
    {
        "question": "Quale officina ha il maggior numero di accettatori?",
        "answer": "SELECT TOP 1 o.descr_officina, COUNT(DISTINCT p.id_esecutore) AS NumAccettatori FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_officine] o ON p.id_officina = o.id_officina WHERE p.accettatore_presenza = 1 GROUP BY o.descr_officina ORDER BY NumAccettatori DESC;"
    },
    {
        "question": "Elenca i noleggi associati a commesse aperte da 'Giovanni Verdi'.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] AS n JOIN [bi].[OFF_commesse] AS c ON n.id_commessa = c.id_commessa WHERE c.accettatore_commessa = 'Giovanni Verdi';"
    },
    {
        "question": "Qual è il costo veicolo medio per i noleggi fatturati?",
        "answer": "SELECT AVG(costo_veicolo_noleggio) FROM [bi].[OFF_noleggi] WHERE nr_fatt_noleggio IS NOT NULL AND costo_veicolo_noleggio IS NOT NULL;"
    },
    {
        "question": "Trova i noleggi con note di ritiro specificate.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, note_ritiro_noleggio FROM [bi].[OFF_noleggi] WHERE note_ritiro_noleggio IS NOT NULL AND note_ritiro_noleggio <> '';"
    },
    {
        "question": "Mostra i noleggi non contabilizzati.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE idx_contabilizzazione_noleggio = 0;"
    },
    {
        "question": "Qual è il numero medio di km percorsi per i noleggi a lungo termine?",
        "answer": "SELECT AVG(km_consegna_noleggio - km_ritiro_noleggio) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'S' AND km_consegna_noleggio IS NOT NULL AND km_ritiro_noleggio IS NOT NULL;"
    },
    {
        "question": "Cerca i contatti la cui ragione sociale o nome contiene 'Mario'.",
        "answer": "SELECT id_contatto, COALESCE(ragione_sociale_contatto, nome_contatto + ' ' + cognome_contatto) FROM [bi].[CONTT_contatti] WHERE ragione_sociale_contatto LIKE '%Mario%' OR nome_contatto LIKE '%Mario%';"
    },
    {
        "question": "Quali sono i contatti senza nazione specificata?",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE nazione_contatto IS NULL OR nazione_contatto = '';"
    },
    {
        "question": "Mostra i contatti con CAP che contiene lettere.",
        "answer": "SELECT id_contatto, cap_contatto FROM [bi].[CONTT_contatti] WHERE cap_contatto LIKE '%[a-zA-Z]%'; -- Specifico SQL Server"
    },
    {
        "question": "Elenca i contatti persone fisiche senza email.",
        "answer": "SELECT id_contatto, nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'PF' AND (email_contatto IS NULL OR email_contatto = '');"
    },
    {
        "question": "Quanti contatti hanno un codice master che inizia per 'MSTR_'?",
        "answer": "SELECT COUNT(id_contatto) FROM [bi].[CONTT_contatti] WHERE codice_master_contatto LIKE 'MSTR\\_%' ESCAPE '\\';"
    },
    {
        "question": "Trova i clienti che hanno acquistato un'auto elettrica e hanno avuto una commessa con intervento 'Batteria'.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina JOIN [bi].[OFF_commesse_righe] r ON oc.id_commessa = r.id_commessa JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE av.alimentazione_veicolo = 'Elettrica' AND v.descr_voce LIKE '%Batteria%';"
    },
    {
        "question": "Calcola il ranking dei tipi di commessa in base al costo medio totale (righe + lavorazioni).",
        "answer": "WITH CostoCommessa AS ( SELECT c.id_tipo_commessa, AVG(ISNULL(CostRighe, 0) + ISNULL(CostLav, 0)) AS CostoMedio FROM [bi].[OFF_commesse] c LEFT JOIN (SELECT id_commessa, SUM(ISNULL(imp_netto_costo_commessa,0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0)) AS CostRighe FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa) r ON c.id_commessa = r.id_commessa LEFT JOIN (SELECT id_commessa, SUM(ISNULL(costo_lavorazione,0)) AS CostLav FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa) l ON c.id_commessa = l.id_commessa GROUP BY c.id_tipo_commessa ) SELECT ct.descr_tipo_commessa, cc.CostoMedio, RANK() OVER (ORDER BY cc.CostoMedio DESC) AS Ranking FROM CostoCommessa cc JOIN [bi].[OFF_commesse_tipi] ct ON cc.id_tipo_commessa = ct.id_tipo_commessa;"
    },
    {
        "question": "Elenca i veicoli (targa) per cui il tempo tra la data di uscita (vendita) e la successiva commessa è superiore a 365 giorni.",
        "answer": "WITH NextCommessa AS ( SELECT v.targa_veicolo, MIN(oc.dt_apertura_commessa) AS NextDataCommessa FROM [bi].[AUTO_veicoli] v JOIN [bi].[OFF_veicoli] ov ON v.targa_veicolo = ov.targa_veicolo_officina JOIN [bi].[OFF_commesse] oc ON ov.id_veicolo_officina = oc.id_veicolo_officina WHERE v.dt_uscita_veicolo IS NOT NULL AND oc.dt_apertura_commessa > v.dt_uscita_veicolo GROUP BY v.targa_veicolo, v.dt_uscita_veicolo HAVING MIN(oc.dt_apertura_commessa) > DATEADD(year, 1, v.dt_uscita_veicolo) ) SELECT targa_veicolo FROM NextCommessa;"
    },
    {
        "question": "Mostra, per ogni gruppo cliente (auto), la marca di veicolo più acquistata.",
        "answer": "WITH RankedBrands AS ( SELECT cli.gruppo_tipo_cliente, v.marca_veicolo, COUNT(c.id_contratto) AS NumAcquisti, ROW_NUMBER() OVER (PARTITION BY cli.gruppo_tipo_cliente ORDER BY COUNT(c.id_contratto) DESC) AS rn FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo GROUP BY cli.gruppo_tipo_cliente, v.marca_veicolo ) SELECT gruppo_tipo_cliente, marca_veicolo, NumAcquisti FROM RankedBrands WHERE rn = 1;"
    },
    {
        "question": "Calcola il rapporto tra ore di straordinario e ore lavorate totali per ogni tecnico.",
        "answer": "WITH TechHours AS ( SELECT id_esecutore, SUM(ISNULL(ore_straordinarie_presenza, 0)) AS OreStraordinario, SUM(ISNULL(ore_lavorazione, 0)) AS OreLavorate FROM [bi].[OFF_presenze] p FULL OUTER JOIN [bi].[OFF_commesse_lavorazioni] l ON p.id_esecutore = l.id_esecutore AND p.dt_presenza = CONVERT(date, l.dt_movimento_lavorazione) GROUP BY p.id_esecutore ) SELECT e.descr_esecutore, th.OreStraordinario / NULLIF(th.OreLavorate, 0) AS RapportoStraordinarioLavorate FROM TechHours th JOIN [bi].[OFF_esecutori] e ON th.id_esecutore = e.id_esecutore WHERE th.OreLavorate > 0;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno costi o spese con codice 'EXTRA01'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_costo_redd = 'EXTRA01' OR codice_spesa_redd = 'EXTRA01';"
    },
    {
        "question": "Quante commesse chiuse ha ogni accettatore?",
        "answer": "SELECT accettatore_commessa, COUNT(id_commessa) AS CommesseChiuse FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL GROUP BY accettatore_commessa;"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno almeno un inconveniente di tipo 'Garanzia'.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_garanzia_inconveniente IS NOT NULL AND tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Trova il rapporto medio tra costo lavorazione e costo lavori esterni (dove entrambi presenti).",
        "answer": "SELECT AVG(costo_lavorazione / NULLIF(costo_lavoro_ext_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.costo_lavoro_ext_lavorazione > 0 AND l.costo_lavorazione IS NOT NULL;"
    },
    {
        "question": "Qual è il tempo medio che intercorre tra l'acquisto di un veicolo e la sua prima commessa in officina?",
        "answer": "WITH FirstWorkshop AS ( SELECT v.targa_veicolo_officina, MIN(oc.dt_apertura_commessa) AS PrimaCommessa FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] v ON oc.id_veicolo_officina = v.id_veicolo_officina GROUP BY v.targa_veicolo_officina ) SELECT AVG(DATEDIFF(day, av.dt_acquisto_veicolo, fw.PrimaCommessa)) AS GiorniMediAcquistoPrimaCommessa FROM [bi].[AUTO_veicoli] av JOIN FirstWorkshop fw ON av.targa_veicolo = fw.targa_veicolo_officina WHERE av.dt_acquisto_veicolo IS NOT NULL;"
    },
    {
        "question": "Quali sono i 5 tipi di vendita (descrizione) con il valore medio di permuta più alto?",
        "answer": "SELECT TOP 5 tv.descr_tipo_vendita, AVG(c.imp_netto_permute_contratto) AS MediaPermuta FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.count_permute_contratto > 0 GROUP BY tv.descr_tipo_vendita ORDER BY MediaPermuta DESC;"
    },
    {
        "question": "Mostra i contratti chiusi quest'anno dove il valore netto è maggiore del valore di listino.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND YEAR(dt_chiusura_contratto) = YEAR(GETDATE()) AND imp_netto_contratto > imp_netto_listino_contratto;"
    },
    {
        "question": "Elenca i gruppi di clienti (auto) che hanno contratti associati a più di 5 venditori diversi.",
        "answer": "SELECT cli.gruppo_tipo_cliente, COUNT(DISTINCT c.id_venditore) AS NumVenditori FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_clienti] AS cli ON c.id_cliente = cli.id_cliente GROUP BY cli.gruppo_tipo_cliente HAVING COUNT(DISTINCT c.id_venditore) > 5;"
    },
    {
        "question": "Quanti veicoli per ogni gruppo alimentazione sono stati venduti nel 2023?",
        "answer": "SELECT v.gruppo_alimentazione_veicolo, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE YEAR(c.dt_apertura_contratto) = 2023 GROUP BY v.gruppo_alimentazione_veicolo;"
    },
    {
        "question": "Qual è la percentuale di contratti con assicurazione sul totale per ogni sede?",
        "answer": "SELECT s.descr_sede, CAST(SUM(CASE WHEN c.has_assicurazione_contratto = 1 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(c.id_contratto) AS PercAssicurazione FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_sedi] AS s ON c.id_sede = s.id_sede GROUP BY s.descr_sede;"
    },
    {
        "question": "Trova i contratti senza finanziamento ma con garanzia interna 'Gold'.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 0 AND garanzia_interna_contratto = 'Gold';"
    },
    {
        "question": "Quali venditori hanno venduto veicoli la cui data di acquisto è precedente al 2020?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_veicoli] AS ve ON c.id_veicolo = ve.id_veicolo WHERE ve.dt_acquisto_veicolo < '2020-01-01';"
    },
    {
        "question": "Mostra i contratti aperti nel giorno 15 di ogni mese dell'anno scorso.",
        "answer": "SELECT nr_contratto, dt_apertura_contratto FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) = YEAR(GETDATE()) - 1 AND DAY(dt_apertura_contratto) = 15;"
    },
    {
        "question": "Qual è il canale di vendita (descrizione) con il valore medio di contratto più basso?",
        "answer": "SELECT TOP 1 cv.descr_canale_vendita, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_canali_vendita] AS cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY cv.descr_canale_vendita ORDER BY ValoreMedio ASC;"
    },
    {
        "question": "Elenca i tipi di contatto (gruppo) associati a contratti senza permuta.",
        "answer": "SELECT DISTINCT tc.gruppo_tipo_contatto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_contatti_tipi] AS tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.count_permute_contratto = 0;"
    },
    {
        "question": "Qual è l'importo netto medio dei contratti aperti nell'area 'Centro Italia'?",
        "answer": "SELECT AVG(c.imp_netto_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_aree] AS a ON c.id_area = a.id_area WHERE a.descr_area = 'Centro Italia';"
    },
    {
        "question": "Mostra i contratti relativi a veicoli il cui fornitore non è specificato.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.codice_fornitore_veicolo IS NULL OR v.codice_fornitore_veicolo = '';"
    },
    {
        "question": "Quanti contratti per ogni status?",
        "answer": "SELECT status_contratto, COUNT(id_contratto) AS NumeroContratti FROM [bi].[AUTO_contratti] GROUP BY status_contratto;"
    },
    {
        "question": "Trova i contratti relativi a veicoli con scadenza bollo nell'anno prossimo.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE YEAR(v.dt_scadenza_bollo) = YEAR(GETDATE()) + 1;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) associati a più di un tipo di contratto.",
        "answer": "SELECT id_cliente, COUNT(DISTINCT id_tipo_contratto) AS NumTipiContratto FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(DISTINCT id_tipo_contratto) > 1;"
    },
    {
        "question": "Qual è il valore totale finanziato per i contratti associati a veicoli usati?",
        "answer": "SELECT SUM(c.imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.nuovo_usato_veicolo = 'Usato' AND c.has_finanziamento_contratto = 1;"
    },
    {
        "question": "Mostra i veicoli (ID Gestionale) con data di uscita definita ma status diverso da 'Venduto'.",
        "answer": "SELECT id_gesionale_veicolo FROM [bi].[AUTO_veicoli] WHERE dt_uscita_veicolo IS NOT NULL AND status_veicolo <> 'Venduto';"
    },
    {
        "question": "Quali tipi di vendita (descrizione) sono associati a contratti senza assicurazione?",
        "answer": "SELECT DISTINCT tv.descr_tipo_vendita FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_tipi_vendita] tv ON c.id_tipo_vendita = tv.id_tipo_vendita WHERE c.has_assicurazione_contratto = 0;"
    },
    {
        "question": "Trova i contratti chiusi ma con importo netto nullo o zero.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND (imp_netto_contratto IS NULL OR imp_netto_contratto = 0);"
    },
    {
        "question": "Elenca i venditori che hanno gestito contratti in una sola sede.",
        "answer": "SELECT v.descr_venditore FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_venditori] AS v ON c.id_venditore = v.id_venditore GROUP BY v.descr_venditore HAVING COUNT(DISTINCT c.id_sede) = 1;"
    },
    {
        "question": "Qual è il margine consuntivo medio per i contratti con valore previsto nullo?",
        "answer": "SELECT AVG(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd IS NULL AND imp_ricavo_previsto_redd IS NULL;"
    },
    {
        "question": "Mostra i contratti (ID Redd) dove il costo previsto è maggiore di 10000 e il ricavo previsto è minore di 10000.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd > 10000 AND imp_ricavo_previsto_redd < 10000;"
    },
    {
        "question": "Quali descrizioni di costo/spesa sono associate al tipo totale 'RICAVO'?",
        "answer": "SELECT DISTINCT COALESCE(descr_costo_redd, descr_spesa_redd) FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd = 'RICAVO';"
    },
    {
        "question": "Elenca i contratti (ID Redd) con ricavo previsto dal venditore nullo o zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_venditore_redd IS NULL OR imp_ricavo_previsto_venditore_redd = 0;"
    },
    {
        "question": "Trova i contratti (ID Redd) con indice contabile costo definito ma indice contabile spesa nullo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_costo_redd IS NOT NULL AND idx_contabile_spesa_redd IS NULL;"
    },
    {
        "question": "Qual è il valore totale delle provvigioni per i contratti con margine consuntivo positivo?",
        "answer": "SELECT SUM(r.imp_netto_provvigione_redd) FROM [bi].[AUTO_contratti_redd] r JOIN (SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS Margine FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd) m ON r.id_contratto_redd = m.id_contratto_redd WHERE m.Margine > 0;"
    },
    {
        "question": "Mostra i tipi di costo/ricavo (descrizione) associati al livello margine '3'.",
        "answer": "SELECT DISTINCT descr_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] WHERE liv_margine_redd = '3';"
    },
    {
        "question": "Quali contratti (ID Redd) hanno costi o spese con codice 'GARANZIA_EXT'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE codice_costo_redd = 'GARANZIA_EXT' OR codice_spesa_redd = 'GARANZIA_EXT';"
    },
    {
        "question": "Trova il costo consuntivo medio per il tipo totale 'COSTI VARIABILI'.",
        "answer": "SELECT AVG(imp_costo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE tipo_totale_redd = 'COSTI VARIABILI';"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove la descrizione costo è nulla.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_costo_redd IS NULL OR descr_costo_redd = '';"
    },
    {
        "question": "Qual è la commessa con la minor durata tra apertura e chiusura?",
        "answer": "SELECT TOP 1 nr_commessa, DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa) AS Durata FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL ORDER BY Durata ASC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina con ID gestionale 'CLI007'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.id_gestionale_cliente_officina = 'CLI007';"
    },
    {
        "question": "Quante commesse per ogni gruppo officina?",
        "answer": "SELECT o.gruppo_officina, COUNT(c.id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina GROUP BY o.gruppo_officina;"
    },
    {
        "question": "Elenca le commesse con data consegna effettiva precedente alla data veicolo pronto.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_effettiva_consegna_commessa < dt_veicolo_pronto_commessa;"
    },
    {
        "question": "Trova le commesse con codice ODL definito ma codice EstGar non definito.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE codice_odl_commessa IS NOT NULL AND codice_odl_commessa <> '' AND (codice_estgar_commessa IS NULL OR codice_estgar_commessa = '');"
    },
    {
        "question": "Qual è il valore medio delle spese rifiuto per le commesse aperte?",
        "answer": "SELECT AVG(imp_netto_spese_rifiuti_commessa) FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL AND imp_netto_spese_rifiuti_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli con modello 'Polo' o 'Clio'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_modello_veicolo_officina IN ('Polo', 'Clio');"
    },
    {
        "question": "Quante commesse per ogni anno ha gestito l'accettatore 'Marco Polo'?",
        "answer": "SELECT YEAR(dt_apertura_commessa) AS Anno, COUNT(id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] WHERE accettatore_commessa = 'Marco Polo' GROUP BY YEAR(dt_apertura_commessa) ORDER BY Anno DESC;"
    },
    {
        "question": "Elenca le officine che hanno gestito commesse di tipo 'Carrozzeria' e 'Meccanica'.",
        "answer": "SELECT o.descr_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina WHERE ct.descr_tipo_commessa IN ('Carrozzeria', 'Meccanica') GROUP BY o.descr_officina HAVING COUNT(DISTINCT ct.descr_tipo_commessa) = 2;"
    },
    {
        "question": "Trova le commesse la cui data inizio lavori è NULL.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa IS NULL;"
    },
    {
        "question": "Elenca gli ID delle commesse che hanno almeno un inconveniente di tipo 'Sistema Elettrico'.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente = 'Sistema Elettrico';"
    },
    {
        "question": "Quali tipi di intervento sono associati a inconvenienti caricati al cliente?",
        "answer": "SELECT DISTINCT it.descr_tipo_intervento FROM [bi].[OFF_commesse_inconvenienti] AS i JOIN [bi].[OFF_interventi_tipi] AS it ON i.id_tipo_intervento = it.id_tipo_intervento WHERE i.tipo_carico_cliente_inconveniente = 'Cliente';"
    },
    {
        "question": "Mostra gli inconvenienti (descrizione breve) con codice riga '00'.",
        "answer": "SELECT id_inconveniente, descr_breve_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE riga_inconveniente = '00';"
    },
    {
        "question": "Quanti inconvenienti totali ci sono per ogni tipo (carico cliente vs garanzia)?",
        "answer": "SELECT CASE WHEN tipo_carico_cliente_inconveniente = 'Cliente' THEN 'Cliente' WHEN tipo_carico_garanzia_inconveniente IS NOT NULL AND tipo_carico_garanzia_inconveniente <> '' THEN 'Garanzia' ELSE 'Altro' END AS TipoCarico, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] GROUP BY CASE WHEN tipo_carico_cliente_inconveniente = 'Cliente' THEN 'Cliente' WHEN tipo_carico_garanzia_inconveniente IS NOT NULL AND tipo_carico_garanzia_inconveniente <> '' THEN 'Garanzia' ELSE 'Altro' END;"
    },
    {
        "question": "Trova gli ID commessa con almeno 5 righe inconveniente.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING COUNT(id_inconveniente) >= 5;"
    },
    {
        "question": "Qual è il valore medio delle righe (importo netto) per le commesse con inconvenienti?",
        "answer": "SELECT AVG(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] WHERE id_commessa IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti]);"
    },
    {
        "question": "Mostra le righe di commessa con codice articolo che inizia per 'FIL'.",
        "answer": "SELECT id_commessa, nr_riga_commessa, codice_articolo_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa LIKE 'FIL%';"
    },
    {
        "question": "Elenca i tipi di carico cliente (distinti) associati a righe omaggio.",
        "answer": "SELECT DISTINCT tipo_carico_cliente_commessa FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 1;"
    },
    {
        "question": "Qual è il valore totale fatturato come manodopera?",
        "answer": "SELECT SUM(imp_fattura_manodopera) FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Trova le righe di commessa associate a interventi il cui gruppo è 'Manutenzione'.",
        "answer": "SELECT r.id_commessa, r.nr_riga_commessa FROM [bi].[OFF_commesse_righe] AS r JOIN [bi].[OFF_interventi_tipi] AS it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE it.gruppo_intervento_tipo = 'Manutenzione';"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni associate a commesse con lavori esterni?",
        "answer": "SELECT AVG(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] AS l WHERE l.id_commessa IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_lavori_terzi_commessa > 0);"
    },
    {
        "question": "Mostra le lavorazioni la cui descrizione contiene 'verifica' o 'controllo'.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione, descr_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE descr_riga_lavorazione LIKE '%verifica%' OR descr_riga_lavorazione LIKE '%controllo%';"
    },
    {
        "question": "Quante ore totali sono state lavorate per ogni tipo di intervento?",
        "answer": "SELECT it.descr_tipo_intervento, SUM(l.ore_lavorazione) AS OreTotali FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_interventi_tipi] AS it ON l.id_tipo_intervento = it.id_tipo_intervento GROUP BY it.descr_tipo_intervento;"
    },
    {
        "question": "Elenca le lavorazioni con ore fatturate superiori a 5 ore.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_fatturate_lavorazione > 5;"
    },
    {
        "question": "Trova il rapporto medio tra ore lavorate e ore a tempario per esecutore.",
        "answer": "SELECT e.descr_esecutore, AVG(l.ore_lavorazione / NULLIF(l.ore_tempario_lavorazione, 0)) AS RapportoOre FROM [bi].[OFF_commesse_lavorazioni] AS l JOIN [bi].[OFF_esecutori] AS e ON l.id_esecutore = e.id_esecutore WHERE l.ore_tempario_lavorazione > 0 GROUP BY e.descr_esecutore;"
    },
    {
        "question": "Mostra gli esecutori che hanno registrato ore di assenza in più di 10 giorni diversi.",
        "answer": "SELECT e.descr_esecutore, COUNT(DISTINCT p.dt_presenza) AS GiorniAssenza FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori] AS e ON p.id_esecutore = e.id_esecutore WHERE p.ore_assenza_presenza > 0 GROUP BY e.descr_esecutore HAVING COUNT(DISTINCT p.dt_presenza) > 10;"
    },
    {
        "question": "Qual è il costo totale annuo delle ore di permesso?",
        "answer": "SELECT SUM(p.ore_permessi_presenza * p.imp_costo_orario_presenza) FROM [bi].[OFF_presenze] AS p WHERE YEAR(p.dt_presenza) = YEAR(GETDATE());"
    },
    {
        "question": "Trova le date in cui il numero di ore di presenza è stato inferiore al 50% delle ore teoriche totali.",
        "answer": "SELECT dt_presenza FROM [bi].[OFF_presenze] GROUP BY dt_presenza HAVING SUM(ore_presenza) < (SUM(ore_teoriche_presenza) * 0.5);"
    },
    {
        "question": "Quale tipo esecutore ha il maggior numero di ore non produttive totali?",
        "answer": "SELECT TOP 1 et.descr_tipo_esecutore, SUM(p.ore_nonprod_presenza) AS TotOreNonProd FROM [bi].[OFF_presenze] AS p JOIN [bi].[OFF_esecutori_tipi] AS et ON p.id_tipo_esecutore = et.id_tipo_esecutore GROUP BY et.descr_tipo_esecutore ORDER BY TotOreNonProd DESC;"
    },
    {
        "question": "Elenca i noleggi per l'officina 'Service Nord' chiusi nell'ultimo trimestre.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] AS n JOIN [bi].[OFF_officine] AS o ON n.id_officina = o.id_officina WHERE o.descr_officina = 'Service Nord' AND n.dt_chiusura_noleggio >= DATEADD(quarter, -1, GETDATE());"
    },
    {
        "question": "Qual è la durata massima (in giorni) di un noleggio a breve termine?",
        "answer": "SELECT MAX(DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio)) FROM [bi].[OFF_noleggi] WHERE is_lungo_termine_noleggio = 'N';"
    },
    {
        "question": "Trova i noleggi con km extra superiori a 500.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, km_extra_noleggio FROM [bi].[OFF_noleggi] WHERE km_extra_noleggio > 500;"
    },
    {
        "question": "Mostra i noleggi con costo carburante specificato.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, costo_carburante_noleggio FROM [bi].[OFF_noleggi] WHERE costo_carburante_noleggio IS NOT NULL AND costo_carburante_noleggio > 0;"
    },
    {
        "question": "Qual è l'importo medio fatturato per i noleggi associati a commesse?",
        "answer": "SELECT AVG(imp_fatt_noleggio) FROM [bi].[OFF_noleggi] WHERE id_commessa IS NOT NULL AND id_commessa <> 0;"
    },
    {
        "question": "Cerca i contatti con codice master nullo o vuoto.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE codice_master_contatto IS NULL OR codice_master_contatto = '';"
    },
    {
        "question": "Quali sono i contatti con telefono che non inizia per '3' o '0'?",
        "answer": "SELECT id_contatto, telefono_contatto FROM [bi].[CONTT_contatti] WHERE telefono_contatto NOT LIKE '3%' AND telefono_contatto NOT LIKE '0%';"
    },
    {
        "question": "Mostra i contatti di tipo 'Ente Pubblico'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'EP'; -- Verificare codice Ente Pubblico"
    },
    {
        "question": "Elenca i contatti con email che contengono 'pec'.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE email_contatto LIKE '%pec%';"
    },
    {
        "question": "Quanti contatti hanno un ID anagrafica specificato?",
        "answer": "SELECT COUNT(id_contatto) FROM [bi].[CONTT_contatti] WHERE id_anagrafica_contatto IS NOT NULL;"
    },
    {
        "question": "Mostra i clienti (descr) che hanno acquistato auto elettriche e hanno avuto commesse per sostituzione batteria.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_clienti] cli JOIN [bi].[AUTO_contratti] ac ON cli.id_cliente = ac.id_cliente JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina JOIN [bi].[OFF_commesse_righe] r ON oc.id_commessa = r.id_commessa JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE av.alimentazione_veicolo = 'Elettrica' AND v.descr_voce LIKE '%Batteria%';"
    },
    {
        "question": "Calcola il rapporto tra valore totale contratti e valore totale commesse per i clienti comuni.",
        "answer": "WITH ClientiComuni AS ( SELECT DISTINCT id_cliente FROM [bi].[AUTO_contratti] INTERSECT SELECT DISTINCT id_cliente_officina FROM [bi].[OFF_commesse] ), ValoreContratti AS ( SELECT SUM(imp_netto_contratto) AS TotContratti FROM [bi].[AUTO_contratti] WHERE id_cliente IN (SELECT id_cliente FROM ClientiComuni) ), ValoreCommesse AS ( SELECT SUM(Valore) AS TotCommesse FROM (SELECT r.imp_netto_riga_commessa AS Valore FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa=c.id_commessa WHERE c.id_cliente_officina IN (SELECT id_cliente FROM ClientiComuni)) AS V ) SELECT (SELECT TotContratti FROM ValoreContratti) / NULLIF((SELECT TotCommesse FROM ValoreCommesse), 0) AS RapportoValoreContrattiCommesse;"
    },
    {
        "question": "Elenca, per ogni venditore, il contratto con il margine consuntivo più alto.",
        "answer": "WITH RankedMargin AS ( SELECT c.id_venditore, c.nr_contratto, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS Margine, ROW_NUMBER() OVER (PARTITION BY c.id_venditore ORDER BY SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) DESC) AS rn FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY c.id_venditore, c.nr_contratto ) SELECT v.descr_venditore, rm.nr_contratto, rm.Margine FROM RankedMargin rm JOIN [bi].[AUTO_venditori] v ON rm.id_venditore = v.id_venditore WHERE rm.rn = 1;"
    },
    {
        "question": "Mostra i veicoli (targa) per cui il tempo medio tra la data veicolo pronto e la consegna effettiva supera i 3 giorni.",
        "answer": "SELECT v.targa_veicolo_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE c.dt_veicolo_pronto_commessa IS NOT NULL AND c.dt_effettiva_consegna_commessa IS NOT NULL GROUP BY v.targa_veicolo_officina HAVING AVG(DATEDIFF(day, c.dt_veicolo_pronto_commessa, c.dt_effettiva_consegna_commessa)) > 3;"
    },
    {
        "question": "Calcola la percentuale di ore lavorate sul totale ore di presenza per ogni tipo esecutore.",
        "answer": "WITH Hours AS ( SELECT p.id_tipo_esecutore, SUM(p.ore_presenza) AS OrePresenza, SUM(l.ore_lavorazione) AS OreLavorate FROM [bi].[OFF_presenze] p LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON p.id_esecutore = l.id_esecutore AND p.dt_presenza = CONVERT(date, l.dt_movimento_lavorazione) GROUP BY p.id_tipo_esecutore ) SELECT et.descr_tipo_esecutore, h.OreLavorate * 100.0 / NULLIF(h.OrePresenza, 0) AS PercOreLavorate FROM Hours h JOIN [bi].[OFF_esecutori_tipi] et ON h.id_tipo_esecutore = et.id_tipo_esecutore WHERE h.OrePresenza > 0;"
    },
    {
        "question": "Qual è il ranking dei clienti per numero di contratti auto?",
        "answer": "SELECT cli.descr_cliente, COUNT(c.id_contratto) AS NumContratti, RANK() OVER (ORDER BY COUNT(c.id_contratto) DESC) AS RankCliente FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente GROUP BY cli.descr_cliente;"
    },
    {
        "question": "Mostra, per ogni contratto, il valore del contratto precedente dello stesso venditore.",
        "answer": "WITH SellerContractLag AS ( SELECT id_venditore, nr_contratto, dt_apertura_contratto, imp_netto_contratto, LAG(imp_netto_contratto, 1, 0) OVER (PARTITION BY id_venditore ORDER BY dt_apertura_contratto) AS PrevContractValue FROM [bi].[AUTO_contratti] ) SELECT scl.nr_contratto, scl.imp_netto_contratto, scl.PrevContractValue FROM SellerContractLag scl;"
    },
    {
        "question": "Elenca le 5 combinazioni marca/modello con il maggior margine consuntivo medio.",
        "answer": "WITH AvgMargin AS ( SELECT v.marca_veicolo, v.modello_veicolo, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS MargineMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY v.marca_veicolo, v.modello_veicolo ) SELECT TOP 5 marca_veicolo, modello_veicolo, MargineMedio FROM AvgMargin ORDER BY MargineMedio DESC;"
    },
    {
        "question": "Quali veicoli (targa) hanno avuto commesse sia di tipo 'Tagliando' che 'Riparazione Guasto'?",
        "answer": "SELECT v.targa_veicolo_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa IN ('Tagliando', 'Riparazione Guasto') GROUP BY v.targa_veicolo_officina HAVING COUNT(DISTINCT ct.descr_tipo_commessa) = 2;"
    },
    {
        "question": "Mostra il numero di contratti aperti per giorno della settimana.",
        "answer": "SELECT DATENAME(weekday, dt_apertura_contratto) AS GiornoSettimana, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY DATEPART(weekday, dt_apertura_contratto), DATENAME(weekday, dt_apertura_contratto) ORDER BY DATEPART(weekday, dt_apertura_contratto);"
    },
    {
        "question": "Quali sono i clienti (ID Contatto) che hanno acquistato solo auto elettriche?",
        "answer": "SELECT cli.id_contatto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo GROUP BY cli.id_contatto HAVING MIN(v.alimentazione_veicolo) = 'Elettrica' AND MAX(v.alimentazione_veicolo) = 'Elettrica';"
    },
    {
        "question": "Elenca le commesse il cui costo totale lavori esterni supera il costo totale manodopera interna.",
        "answer": "WITH CostExt AS (SELECT id_commessa, SUM(ISNULL(costo_lavoro_ext_lavorazione, 0)) AS TotExt FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa), CostInt AS (SELECT id_commessa, SUM(ISNULL(costo_lavorazione, 0)) AS TotInt FROM [bi].[OFF_commesse_lavorazioni] WHERE gruppo_voce_lavorazione <> 13 GROUP BY id_commessa) SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN CostExt ce ON c.id_commessa = ce.id_commessa JOIN CostInt ci ON c.id_commessa = ci.id_commessa WHERE ce.TotExt > ci.TotInt;"
    },
    {
        "question": "Mostra la percentuale di sconto (listino-netto)/listino per ogni contratto aperto ieri.",
        "answer": "SELECT nr_contratto, CASE WHEN imp_netto_listino_contratto > 0 THEN (imp_netto_listino_contratto - imp_netto_contratto) * 100.0 / imp_netto_listino_contratto ELSE 0 END AS PercSconto FROM [bi].[AUTO_contratti] WHERE dt_apertura_contratto = CONVERT(date, DATEADD(day, -1, GETDATE()));"
    },
    {
        "question": "Qual è il tempo medio (in giorni) tra la data di apertura commessa e la prima lavorazione registrata?",
        "answer": "WITH FirstLabor AS ( SELECT id_commessa, MIN(dt_movimento_lavorazione) AS PrimaLavorazione FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa ) SELECT AVG(DATEDIFF(day, c.dt_apertura_commessa, fl.PrimaLavorazione)) AS GiorniMediPrimaLavorazione FROM [bi].[OFF_commesse] c JOIN FirstLabor fl ON c.id_commessa = fl.id_commessa WHERE c.dt_apertura_commessa IS NOT NULL;"
    },
    {
        "question": "Elenca i 5 tipi di voce commessa più costosi in media (costo medio riga).",
        "answer": "SELECT TOP 5 v.descr_voce, AVG(r.imp_netto_costo_commessa) AS CostoMedioRiga FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE r.imp_netto_costo_commessa IS NOT NULL GROUP BY v.descr_voce ORDER BY CostoMedioRiga DESC;"
    },
    {
        "question": "Quali sono i contratti (ID Redd) dove il margine consuntivo è tra 1000 e 2000 euro?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd HAVING SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) BETWEEN 1000 AND 2000;"
    },
    {
        "question": "Mostra, per ogni venditore, il contratto più recente.",
        "answer": "WITH LastContract AS ( SELECT nr_contratto, id_venditore, dt_apertura_contratto, ROW_NUMBER() OVER (PARTITION BY id_venditore ORDER BY dt_apertura_contratto DESC) AS rn FROM [bi].[AUTO_contratti] ) SELECT v.descr_venditore, lc.nr_contratto, lc.dt_apertura_contratto FROM LastContract lc JOIN [bi].[AUTO_venditori] v ON lc.id_venditore = v.id_venditore WHERE lc.rn = 1;"
    },
    {
        "question": "Elenca le commesse che hanno avuto inconvenienti di tipo 'Elettrico' e 'Meccanico'.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente IN ('Elettrico', 'Meccanico') GROUP BY id_commessa HAVING COUNT(DISTINCT tipo_inconveniente) = 2;"
    },
    {
        "question": "Quanti tecnici (esecutori) per ogni qualifica?",
        "answer": "SELECT qualifica_esecutore, COUNT(id_esecutore) AS NumeroTecnici FROM [bi].[OFF_esecutori] GROUP BY qualifica_esecutore;"
    },
    {
        "question": "Qual è il rapporto tra valore permuta e valore contratto medio per i contratti con permuta?",
        "answer": "SELECT AVG(imp_netto_permute_contratto / NULLIF(imp_netto_contratto, 0)) AS RapportoMedioPermutaContratto FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 0 AND imp_netto_contratto > 0;"
    },
    {
        "question": "Trova le commesse con almeno una riga omaggio e almeno una riga a pagamento.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa HAVING MIN(is_omaggio_commessa) = 0 AND MAX(is_omaggio_commessa) = 1;"
    },
    {
        "question": "Quali sono i 3 mesi con il maggior numero di contratti chiusi l'anno scorso?",
        "answer": "SELECT TOP 3 MONTH(dt_chiusura_contratto) AS Mese, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] WHERE YEAR(dt_chiusura_contratto) = YEAR(GETDATE()) - 1 AND status_contratto = 'Chiuso' GROUP BY MONTH(dt_chiusura_contratto) ORDER BY NumContratti DESC;"
    },
    {
        "question": "Mostra l'importo netto e la data di apertura del penultimo contratto per ogni cliente.",
        "answer": "WITH RankedContracts AS ( SELECT id_cliente, nr_contratto, dt_apertura_contratto, imp_netto_contratto, ROW_NUMBER() OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto DESC) AS rn FROM [bi].[AUTO_contratti] ) SELECT cli.descr_cliente, rc.nr_contratto, rc.dt_apertura_contratto, rc.imp_netto_contratto FROM RankedContracts rc JOIN [bi].[AUTO_clienti] cli ON rc.id_cliente = cli.id_cliente WHERE rc.rn = 2;"
    },
    {
        "question": "Qual è il costo medio per ora lavorata (costo lavorazione / ore lavorate) per ogni tipo esecutore?",
        "answer": "SELECT et.descr_tipo_esecutore, SUM(l.costo_lavorazione) / NULLIF(SUM(l.ore_lavorazione), 0) AS CostoMedioOrario FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori_tipi] et ON l.id_tipo_esecutore = et.id_tipo_esecutore WHERE l.ore_lavorazione > 0 GROUP BY et.descr_tipo_esecutore;"
    },
    {
        "question": "Elenca i veicoli (targa) per cui la data di arrivo è stata più di 7 giorni dopo la data di acquisto.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE dt_arrivo_veicolo IS NOT NULL AND dt_acquisto_veicolo IS NOT NULL AND DATEDIFF(day, dt_acquisto_veicolo, dt_arrivo_veicolo) > 7;"
    },
    {
        "question": "Qual è il codice tipo costo/ricavo più frequente nella vista redditività?",
        "answer": "SELECT TOP 1 codice_tipo_costo_ricavo_redd, COUNT(*) AS Frequenza FROM [bi].[AUTO_contratti_redd] GROUP BY codice_tipo_costo_ricavo_redd ORDER BY Frequenza DESC;"
    },
    {
        "question": "Mostra le commesse che hanno avuto lavorazioni ma nessun ricambio associato.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_commesse] c ON l.id_commessa = c.id_commessa WHERE c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_righe] WHERE gruppo_voce_commessa = 5); -- Assumendo 5 = Ricambi"
    },
    {
        "question": "Quali sono i clienti (ID Contatto) che hanno effettuato noleggi per più di 10 giorni totali?",
        "answer": "SELECT id_contatto, SUM(giorni_fatturati_noleggio) AS TotGiorniNoleggio FROM [bi].[OFF_noleggi] GROUP BY id_contatto HAVING SUM(giorni_fatturati_noleggio) > 10;"
    },
    {
        "question": "Trova il rapporto tra ore di ferie e ore di permesso per ogni esecutore.",
        "answer": "SELECT e.descr_esecutore, SUM(p.ore_ferie_presenza) / NULLIF(SUM(p.ore_permessi_presenza), 0) AS RapportoFeriePermessi FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING SUM(p.ore_permessi_presenza) > 0;"
    },
    {
        "question": "Elenca i contatti la cui provincia non è presente nell'anagrafica delle sedi.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, provincia_contatto FROM [bi].[CONTT_contatti] WHERE provincia_contatto NOT IN (SELECT DISTINCT provincia_sede FROM [bi].[AUTO_sedi]); -- Assumendo campo provincia_sede"
    },
    {
        "question": "Qual è il valore del contratto auto associato alla commessa con costo manodopera più alto?",
        "answer": "WITH TopLaborCommessa AS (SELECT TOP 1 l.id_commessa FROM [bi].[OFF_commesse_lavorazioni] l ORDER BY l.costo_lavorazione DESC) SELECT ac.nr_contratto, ac.imp_netto_contratto FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina JOIN [bi].[AUTO_veicoli] av ON ov.targa_veicolo_officina = av.targa_veicolo JOIN [bi].[AUTO_contratti] ac ON av.id_veicolo = ac.id_veicolo WHERE oc.id_commessa = (SELECT id_commessa FROM TopLaborCommessa);"
    },
    {
        "question": "Mostra i 5 tipi di voce (descrizione) con il maggior valore totale fatturato (righe commessa).",
        "answer": "SELECT TOP 5 v.descr_voce, SUM(r.imp_netto_riga_commessa) AS ValoreTotale FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce GROUP BY v.descr_voce ORDER BY ValoreTotale DESC;"
    },
    {
        "question": "Quali sono i contratti (ID Redd) dove il costo previsto venditore è superiore al ricavo previsto?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_venditore_redd > imp_ricavo_previsto_redd;"
    },
    {
        "question": "Elenca le commesse che hanno avuto solo inconvenienti di tipo 'Normale Usura'.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING MIN(tipo_inconveniente) = 'Normale Usura' AND MAX(tipo_inconveniente) = 'Normale Usura';"
    },
    {
        "question": "Trova il numero medio di ore lavorate per commessa.",
        "answer": "SELECT AVG(OreLavorate) FROM (SELECT id_commessa, SUM(ore_lavorazione) AS OreLavorate FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa) AS OrePerCommessa;"
    },
    {
        "question": "Qual è il mese con la media più alta di ore straordinarie per esecutore?",
        "answer": "WITH MonthlyAvgOT AS ( SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, AVG(ore_straordinarie_presenza) AS AvgOT FROM [bi].[OFF_presenze] WHERE ore_straordinarie_presenza > 0 GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ) SELECT TOP 1 Anno, Mese, AvgOT FROM MonthlyAvgOT ORDER BY AvgOT DESC;"
    },
    {
        "question": "Mostra i noleggi la cui durata effettiva (consegna-ritiro) è superiore ai giorni fatturati.",
        "answer": "SELECT id_riga_noleggio FROM [bi].[OFF_noleggi] WHERE dt_consegna_noleggio IS NOT NULL AND dt_ritiro_noleggio IS NOT NULL AND DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio) > giorni_fatturati_noleggio;"
    },
    {
        "question": "Elenca i clienti (descrizione) che hanno acquistato un veicolo 'Usato' e uno 'Nuovo' dallo stesso venditore.",
        "answer": "SELECT cli.descr_cliente FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo GROUP BY cli.descr_cliente, c.id_venditore HAVING COUNT(DISTINCT v.nuovo_usato_veicolo) > 1;"
    },
    {
        "question": "Qual è il tempo medio tra la data di fine lavori e la data di chiusura della commessa?",
        "answer": "SELECT AVG(DATEDIFF(day, dt_fine_lavoro_commessa, dt_chiusura_commessa)) FROM [bi].[OFF_commesse] WHERE dt_fine_lavoro_commessa IS NOT NULL AND dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Trova i contratti auto associati a veicoli per cui non esiste una commessa officina.",
        "answer": "SELECT ac.nr_contratto FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo LEFT JOIN [bi].[OFF_veicoli] ov ON av.targa_veicolo = ov.targa_veicolo_officina LEFT JOIN [bi].[OFF_commesse] oc ON ov.id_veicolo_officina = oc.id_veicolo_officina WHERE oc.id_commessa IS NULL;"
    },
    {
        "question": "Mostra il ranking dei canali di vendita per margine consuntivo medio per contratto.",
        "answer": "WITH ChannelMargin AS ( SELECT c.id_canale_vendita, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS AvgMargin FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY c.id_canale_vendita ) SELECT cv.descr_canale_vendita, cm.AvgMargin, RANK() OVER (ORDER BY cm.AvgMargin DESC) AS Ranking FROM ChannelMargin cm JOIN [bi].[AUTO_canali_vendita] cv ON cm.id_canale_vendita = cv.id_canale_vendita;"
    },
    {
        "question": "Quali sono le commesse che hanno avuto solo lavori esterni (nessuna manodopera interna registrata)?",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] c WHERE EXISTS (SELECT 1 FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.id_commessa = c.id_commessa AND l.gruppo_voce_lavorazione = 13) AND NOT EXISTS (SELECT 1 FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.id_commessa = c.id_commessa AND l.gruppo_voce_lavorazione <> 13);"
    },
    {
        "question": "Elenca i tipi di intervento (descrizione) che non sono mai stati associati a inconvenienti.",
        "answer": "SELECT descr_tipo_intervento FROM [bi].[OFF_interventi_tipi] WHERE id_tipo_intervento NOT IN (SELECT DISTINCT id_tipo_intervento FROM [bi].[OFF_commesse_inconvenienti] WHERE id_tipo_intervento IS NOT NULL AND id_tipo_intervento <> 0);"
    },
    {
        "question": "Mostra il rapporto tra ore di permesso e ore lavorate totali per ogni officina.",
        "answer": "WITH OfficeHours AS ( SELECT p.id_officina, SUM(ISNULL(p.ore_permessi_presenza, 0)) AS OrePermessi, SUM(ISNULL(l.ore_lavorazione, 0)) AS OreLavorate FROM [bi].[OFF_presenze] p LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON p.id_esecutore = l.id_esecutore AND p.dt_presenza = CONVERT(date, l.dt_movimento_lavorazione) GROUP BY p.id_officina ) SELECT o.descr_officina, oh.OrePermessi / NULLIF(oh.OreLavorate, 0) AS RapportoPermessiLavorate FROM OfficeHours oh JOIN [bi].[OFF_officine] o ON oh.id_officina = o.id_officina WHERE oh.OreLavorate > 0;"
    },
    {
        "question": "Trova i contatti (codice master) che hanno sia contratti auto che commesse officina ma nessun noleggio.",
        "answer": "SELECT DISTINCT cli.codice_master_cliente FROM [bi].[AUTO_clienti] cli JOIN [bi].[AUTO_contratti] ac ON cli.id_cliente = ac.id_cliente JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina WHERE cli.id_contatto NOT IN (SELECT DISTINCT id_contatto FROM [bi].[OFF_noleggi]);"
    },
    {
        "question": "Qual è il costo totale previsto per i contratti con più di una permuta?",
        "answer": "SELECT SUM(ISNULL(r.imp_costo_previsto_redd, 0)) FROM [bi].[AUTO_contratti_redd] r JOIN [bi].[AUTO_contratti] c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.count_permute_contratto > 1;"
    },
    {
        "question": "Mostra le commesse la cui data di chiusura è avvenuta dopo più di 10 giorni dalla data veicolo pronto.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL AND dt_veicolo_pronto_commessa IS NOT NULL AND DATEDIFF(day, dt_veicolo_pronto_commessa, dt_chiusura_commessa) > 10;"
    },
    {
        "question": "Elenca i tipi esecutore (descrizione) che hanno lavorato su commesse di tipo 'Soccorso'.",
        "answer": "SELECT DISTINCT et.descr_tipo_esecutore FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori_tipi] et ON l.id_tipo_esecutore = et.id_tipo_esecutore JOIN [bi].[OFF_commesse_tipi] ct ON l.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa = 'Soccorso';"
    },
    {
        "question": "Qual è il numero medio di righe per commessa?",
        "answer": "SELECT AVG(CAST(NumRighe AS FLOAT)) FROM (SELECT id_commessa, COUNT(*) AS NumRighe FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa) AS RighePerCommessa;"
    },
    {
        "question": "Trova i contratti la cui data di apertura è nello stesso mese e anno della prima commessa del cliente.",
        "answer": "WITH FirstWorkshop AS (SELECT id_cliente_officina, MIN(dt_apertura_commessa) AS PrimaCommessa FROM [bi].[OFF_commesse] GROUP BY id_cliente_officina) SELECT ac.nr_contratto FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente JOIN FirstWorkshop fw ON cli.id_contatto = fw.id_cliente_officina WHERE YEAR(ac.dt_apertura_contratto) = YEAR(fw.PrimaCommessa) AND MONTH(ac.dt_apertura_contratto) = MONTH(fw.PrimaCommessa);"
    },
    {
        "question": "Mostra il valore medio dei ricavi consuntivi per i contratti con margine negativo.",
        "answer": "SELECT AVG(r.imp_ricavo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] r JOIN (SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS Margine FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd) m ON r.id_contratto_redd = m.id_contratto_redd WHERE m.Margine < 0 AND r.imp_ricavo_consuntivo_redd IS NOT NULL;"
    },
    {
        "question": "Quali sono i 5 articoli (codice) con il maggior costo totale registrato nelle righe commessa?",
        "answer": "SELECT TOP 5 codice_articolo_commessa, SUM(imp_netto_costo_commessa) AS CostoTotale FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL GROUP BY codice_articolo_commessa ORDER BY CostoTotale DESC;"
    },
    {
        "question": "Elenca le commesse con più di 100 ore lavorate totali.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN (SELECT id_commessa, SUM(ore_lavorazione) AS TotOre FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa) l ON c.id_commessa = l.id_commessa WHERE l.TotOre > 100;"
    },
    {
        "question": "Trova il rapporto tra ore non produttive e ore di presenza totali per ciascun esecutore.",
        "answer": "SELECT e.descr_esecutore, SUM(p.ore_nonprod_presenza) / NULLIF(SUM(p.ore_presenza), 0) AS RapportoNonProdPresenza FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING SUM(p.ore_presenza) > 0;"
    },
    {
        "question": "Quali veicoli (targa) sono stati noleggiati per più di 7 giorni consecutivi?",
        "answer": "SELECT targa_noleggio FROM [bi].[OFF_noleggi] WHERE DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio) > 7;"
    },
    {
        "question": "Mostra i contatti (ragione sociale) con Partita IVA duplicata.",
        "answer": "SELECT partita_iva_contatto, COUNT(*) FROM [bi].[CONTT_contatti] WHERE partita_iva_contatto IS NOT NULL AND partita_iva_contatto <> '' GROUP BY partita_iva_contatto HAVING COUNT(*) > 1;"
    },
    {
        "question": "Calcola la media mobile a 3 mesi del numero di contratti aperti.",
        "answer": "WITH MonthlyContracts AS ( SELECT EOMONTH(dt_apertura_contratto) AS MonthEnd, COUNT(id_contratto) AS Contracts FROM [bi].[AUTO_contratti] GROUP BY EOMONTH(dt_apertura_contratto) ) SELECT MonthEnd, Contracts, AVG(Contracts) OVER (ORDER BY MonthEnd ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS MovingAvg3M FROM MonthlyContracts ORDER BY MonthEnd;"
    },
    {
        "question": "Quali sono i clienti (descr) che rientrano nel 10% superiore per valore totale contratti?",
        "answer": "WITH CustomerValue AS ( SELECT id_cliente, SUM(imp_netto_contratto) AS TotalValue, NTILE(10) OVER (ORDER BY SUM(imp_netto_contratto) DESC) AS Decile FROM [bi].[AUTO_contratti] GROUP BY id_cliente ) SELECT cli.descr_cliente, cv.TotalValue FROM CustomerValue cv JOIN [bi].[AUTO_clienti] cli ON cv.id_cliente = cli.id_cliente WHERE cv.Decile = 1;"
    },
    {
        "question": "Mostra, per ogni commessa, il costo della manodopera rispetto alla commessa precedente dello stesso veicolo.",
        "answer": "WITH CommessaLaborCost AS ( SELECT c.id_veicolo_officina, c.dt_apertura_commessa, c.nr_commessa, SUM(l.costo_lavorazione) AS LaborCost FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_lavorazioni] l ON c.id_commessa = l.id_commessa GROUP BY c.id_veicolo_officina, c.dt_apertura_commessa, c.nr_commessa ), LaggedLabor AS ( SELECT id_veicolo_officina, dt_apertura_commessa, nr_commessa, LaborCost, LAG(LaborCost, 1, 0) OVER (PARTITION BY id_veicolo_officina ORDER BY dt_apertura_commessa) AS PrevLaborCost FROM CommessaLaborCost ) SELECT ll.nr_commessa, ll.LaborCost, ll.PrevLaborCost FROM LaggedLabor ll;"
    },
    {
        "question": "Elenca i 3 tipi di inconveniente che causano il maggior ritardo medio sulla consegna prevista.",
        "answer": "SELECT TOP 3 i.tipo_inconveniente, AVG(DATEDIFF(day, c.dt_previsione_consegna_commessa, c.dt_effettiva_consegna_commessa)) AS AvgDelay FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_inconvenienti] i ON c.id_commessa = i.id_commessa WHERE c.dt_effettiva_consegna_commessa > c.dt_previsione_consegna_commessa GROUP BY i.tipo_inconveniente ORDER BY AvgDelay DESC;"
    },
    {
        "question": "Trova i contratti con valore superiore alla media della loro sede.",
        "answer": "WITH AvgSede AS (SELECT id_sede, AVG(imp_netto_contratto) AS AvgVal FROM [bi].[AUTO_contratti] GROUP BY id_sede) SELECT c.nr_contratto FROM [bi].[AUTO_contratti] c JOIN AvgSede avgs ON c.id_sede = avgs.id_sede WHERE c.imp_netto_contratto > avgs.AvgVal;"
    },
    {
        "question": "Classifica i contratti in fasce di valore (Basso, Medio, Alto) basate sull'importo netto.",
        "answer": "SELECT nr_contratto, imp_netto_contratto, CASE WHEN imp_netto_contratto < 15000 THEN 'Basso' WHEN imp_netto_contratto BETWEEN 15000 AND 30000 THEN 'Medio' ELSE 'Alto' END AS FasciaValore FROM [bi].[AUTO_contratti];"
    },
    {
        "question": "Mostra la differenza in giorni tra l'apertura di un contratto e il precedente contratto dello stesso cliente.",
        "answer": "WITH ContractLagDate AS ( SELECT id_cliente, nr_contratto, dt_apertura_contratto, LAG(dt_apertura_contratto, 1) OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto) AS PrevContractDate FROM [bi].[AUTO_contratti] ) SELECT cld.nr_contratto, cld.dt_apertura_contratto, DATEDIFF(day, cld.PrevContractDate, cld.dt_apertura_contratto) AS DaysSincePrevious FROM ContractLagDate cld WHERE cld.PrevContractDate IS NOT NULL;"
    },
    {
        "question": "Elenca i 3 gruppi di veicoli (marca/modello) con il maggior numero di contratti con finanziamento.",
        "answer": "SELECT TOP 3 v.marca_veicolo, v.modello_veicolo, COUNT(c.id_contratto) AS NumFinanziati FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.has_finanziamento_contratto = 1 GROUP BY v.marca_veicolo, v.modello_veicolo ORDER BY NumFinanziati DESC;"
    },
    {
        "question": "Quali veicoli (targa) hanno avuto più commesse in officina quest'anno rispetto all'anno scorso?",
        "answer": "WITH YearlyCommesse AS ( SELECT v.targa_veicolo_officina, YEAR(c.dt_apertura_commessa) AS Anno, COUNT(c.id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE YEAR(c.dt_apertura_commessa) >= YEAR(GETDATE()) - 1 GROUP BY v.targa_veicolo_officina, YEAR(c.dt_apertura_commessa) ), CompareCommesse AS ( SELECT targa_veicolo_officina, SUM(CASE WHEN Anno = YEAR(GETDATE()) THEN NumCommesse ELSE 0 END) AS CurrentYear, SUM(CASE WHEN Anno = YEAR(GETDATE()) - 1 THEN NumCommesse ELSE 0 END) AS PreviousYear FROM YearlyCommesse GROUP BY targa_veicolo_officina ) SELECT targa_veicolo_officina FROM CompareCommesse WHERE CurrentYear > PreviousYear;"
    },
    {
        "question": "Mostra il numero di contratti per mese e per canale di vendita.",
        "answer": "SELECT YEAR(c.dt_apertura_contratto) AS Anno, MONTH(c.dt_apertura_contratto) AS Mese, cv.descr_canale_vendita, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY YEAR(c.dt_apertura_contratto), MONTH(c.dt_apertura_contratto), cv.descr_canale_vendita ORDER BY Anno, Mese, cv.descr_canale_vendita;"
    },
    {
        "question": "Quali clienti (ID Contatto) hanno acquistato solo veicoli usati?",
        "answer": "SELECT cli.id_contatto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo GROUP BY cli.id_contatto HAVING MIN(v.nuovo_usato_veicolo) = 'Usato' AND MAX(v.nuovo_usato_veicolo) = 'Usato';"
    },
    {
        "question": "Elenca le commesse il cui costo totale ricambi è superiore al 50% del valore totale della commessa (ipotizzando campo valore).",
        "answer": "WITH CostoRicambi AS ( SELECT id_commessa, SUM(imp_netto_costo_commessa) AS TotRicambi FROM [bi].[OFF_commesse_righe] WHERE gruppo_voce_commessa = 5 GROUP BY id_commessa ) SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN CostoRicambi cr ON c.id_commessa = cr.id_commessa WHERE cr.TotRicambi > (c.valore_commessa * 0.5); -- Assumendo colonna 'valore_commessa' in OFF_commesse"
    },
    {
        "question": "Mostra la differenza media tra importo netto contratto e importo finanziato, per tipo contratto.",
        "answer": "SELECT ct.descr_tipo_contratto, AVG(c.imp_netto_contratto - c.imp_netto_finanziato_contratto) AS DiffMediaNonFinanziata FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_tipi] ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE c.has_finanziamento_contratto = 1 GROUP BY ct.descr_tipo_contratto;"
    },
    {
        "question": "Qual è il tempo mediano (approssimato) tra la data di arrivo del veicolo e l'apertura del contratto?",
        "answer": "SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY DATEDIFF(day, v.dt_arrivo_veicolo, c.dt_apertura_contratto)) OVER () AS MedianDaysToContract FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE v.dt_arrivo_veicolo IS NOT NULL;"
    },
    {
        "question": "Elenca i 5 tipi di voce commessa (descrizione) con la quantità media più alta per riga.",
        "answer": "SELECT TOP 5 v.descr_voce, AVG(r.qta_commessa) AS QuantitaMedia FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE r.qta_commessa IS NOT NULL GROUP BY v.descr_voce ORDER BY QuantitaMedia DESC;"
    },
    {
        "question": "Quali sono i contratti (ID Redd) dove il margine consuntivo è nel quartile superiore?",
        "answer": "WITH MarginRank AS ( SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS Margine, NTILE(4) OVER (ORDER BY SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) DESC) AS Quartile FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd ) SELECT id_contratto_redd FROM MarginRank WHERE Quartile = 1;"
    },
    {
        "question": "Mostra, per ogni venditore, il rapporto tra numero di contratti con finanziamento e numero totale di contratti.",
        "answer": "SELECT v.descr_venditore, CAST(SUM(CASE WHEN c.has_finanziamento_contratto = 1 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(c.id_contratto) AS RapportoFinanziati FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore GROUP BY v.descr_venditore;"
    },
    {
        "question": "Elenca le commesse che hanno avuto lo stesso tipo di inconveniente più di una volta.",
        "answer": "SELECT id_commessa, tipo_inconveniente FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa, tipo_inconveniente HAVING COUNT(*) > 1;"
    },
    {
        "question": "Quanti tipi di qualifica diversi ci sono per gli esecutori?",
        "answer": "SELECT COUNT(DISTINCT qualifica_esecutore) FROM [bi].[OFF_esecutori] WHERE qualifica_esecutore IS NOT NULL;"
    },
    {
        "question": "Qual è il rapporto tra valore totale delle righe omaggio e valore totale di tutte le righe?",
        "answer": "SELECT SUM(CASE WHEN is_omaggio_commessa = 1 THEN imp_netto_riga_commessa ELSE 0 END) / NULLIF(SUM(imp_netto_riga_commessa), 0) AS RapportoValoreOmaggio FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Trova le commesse la cui data di chiusura è avvenuta più di 5 giorni dopo la data veicolo pronto.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL AND dt_veicolo_pronto_commessa IS NOT NULL AND DATEDIFF(day, dt_veicolo_pronto_commessa, dt_chiusura_commessa) > 5;"
    },
    {
        "question": "Quali sono i 3 venditori con la maggior crescita nel numero di contratti rispetto all'anno precedente?",
        "answer": "WITH YearlyContracts AS ( SELECT id_venditore, YEAR(dt_apertura_contratto) AS Anno, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) >= YEAR(GETDATE()) - 1 GROUP BY id_venditore, YEAR(dt_apertura_contratto) ), ContractCompare AS ( SELECT id_venditore, SUM(CASE WHEN Anno = YEAR(GETDATE()) THEN NumContratti ELSE 0 END) AS CurrentY, SUM(CASE WHEN Anno = YEAR(GETDATE())-1 THEN NumContratti ELSE 0 END) AS PreviousY FROM YearlyContracts GROUP BY id_venditore ) SELECT TOP 3 v.descr_venditore, cc.CurrentY - cc.PreviousY AS Growth FROM ContractCompare cc JOIN [bi].[AUTO_venditori] v ON cc.id_venditore = v.id_venditore WHERE cc.PreviousY > 0 ORDER BY Growth DESC;"
    },
    {
        "question": "Mostra l'importo netto medio e mediano (approssimato) dei contratti auto.",
        "answer": "SELECT AVG(imp_netto_contratto) AS MediaImporto, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY imp_netto_contratto) OVER () AS MedianaImporto FROM [bi].[AUTO_contratti];"
    },
    {
        "question": "Qual è il costo medio per ora fatturata (costo lavorazione / ore fatturate) per ogni qualifica esecutore?",
        "answer": "SELECT e.qualifica_esecutore, SUM(l.costo_lavorazione) / NULLIF(SUM(l.ore_fatturate_lavorazione), 0) AS CostoMedioOraFatt FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore WHERE l.ore_fatturate_lavorazione > 0 GROUP BY e.qualifica_esecutore;"
    },
    {
        "question": "Elenca i veicoli (targa) che non sono mai stati noleggiati.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE targa_veicolo NOT IN (SELECT DISTINCT targa_noleggio FROM [bi].[OFF_noleggi]);"
    },
    {
        "question": "Qual è il costo totale previsto per i contratti che hanno un margine previsto negativo?",
        "answer": "SELECT SUM(imp_costo_previsto_redd) FROM [bi].[AUTO_contratti_redd] WHERE (ISNULL(imp_ricavo_previsto_redd, 0) - ISNULL(imp_costo_previsto_redd, 0)) < 0;"
    },
    {
        "question": "Mostra le commesse che hanno righe con percentuale addebito cliente inferiore al 50%.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa WHERE r.perc_addebito_cliente_commessa < 0.5;"
    },
    {
        "question": "Quali sono i 5 clienti (officina) con il maggior numero di commesse totali?",
        "answer": "SELECT TOP 5 cli.descr_cliente_officina, COUNT(c.id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_clienti] cli ON c.id_cliente_officina = cli.id_cliente_officina GROUP BY cli.descr_cliente_officina ORDER BY NumCommesse DESC;"
    },
    {
        "question": "Trova il rapporto tra ore di ferie e ore teoriche totali.",
        "answer": "SELECT SUM(ore_ferie_presenza) / NULLIF(SUM(ore_teoriche_presenza), 0) AS RapportoFerieTeoriche FROM [bi].[OFF_presenze] WHERE ore_teoriche_presenza > 0;"
    },
    {
        "question": "Elenca i contatti (ragione sociale) per cui la provincia non corrisponde ai primi due caratteri del CAP.",
        "answer": "SELECT ragione_sociale_contatto, cap_contatto, provincia_contatto FROM [bi].[CONTT_contatti] WHERE cap_contatto IS NOT NULL AND provincia_contatto IS NOT NULL AND LEN(cap_contatto) = 5 AND ISNUMERIC(LEFT(cap_contatto,2))=1 AND provincia_contatto <> (SELECT SiglaProvincia FROM TabellaCAP WHERE CodiceCAP = LEFT(cap_contatto,2)); -- Richiede tabella conversione CAP/Provincia"
    },
    {
        "question": "Qual è il margine medio percentuale per i contratti con vs senza assicurazione?",
        "answer": "SELECT c.has_assicurazione_contratto, AVG( (ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) / NULLIF(ISNULL(r.imp_ricavo_consuntivo_redd, 0), 0) ) * 100 AS MargineMedioPerc FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE ISNULL(r.imp_ricavo_consuntivo_redd, 0) <> 0 GROUP BY c.has_assicurazione_contratto;"
    },
    {
        "question": "Mostra le 3 voci (descrizione) con il maggior costo medio per riga nelle commesse.",
        "answer": "SELECT TOP 3 v.descr_voce, AVG(r.imp_netto_costo_commessa) AS CostoMedio FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE r.imp_netto_costo_commessa IS NOT NULL GROUP BY v.descr_voce ORDER BY CostoMedio DESC;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno un costo consuntivo ma nessun costo previsto?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_consuntivo_redd IS NOT NULL AND imp_costo_consuntivo_redd <> 0 AND (imp_costo_previsto_redd IS NULL OR imp_costo_previsto_redd = 0);"
    },
    {
        "question": "Elenca le commesse che hanno avuto inconvenienti gestiti solo in garanzia (nessun carico cliente).",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_cliente_inconveniente = 'Cliente');"
    },
    {
        "question": "Trova il numero medio di ore lavorate per giorno per ogni tecnico.",
        "answer": "SELECT e.descr_esecutore, AVG(OreLavorateGiorno) FROM (SELECT id_esecutore, CONVERT(date, dt_movimento_lavorazione) AS Giorno, SUM(ore_lavorazione) AS OreLavorateGiorno FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_esecutore, CONVERT(date, dt_movimento_lavorazione)) AS Lavoro JOIN [bi].[OFF_esecutori] e ON Lavoro.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore;"
    },
    {
        "question": "Qual è il mese con la percentuale più alta di ore di assenza sul totale ore teoriche?",
        "answer": "WITH MonthlyAbsenceRatio AS ( SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, SUM(ore_assenza_presenza) / NULLIF(SUM(ore_teoriche_presenza), 0) AS RatioAssenza FROM [bi].[OFF_presenze] GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ) SELECT TOP 1 Anno, Mese, RatioAssenza FROM MonthlyAbsenceRatio WHERE RatioAssenza IS NOT NULL ORDER BY RatioAssenza DESC;"
    },
    {
        "question": "Mostra i noleggi la cui durata è nel 10% più lungo di tutti i noleggi.",
        "answer": "WITH RentalDuration AS ( SELECT id_riga_noleggio, DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio) AS Durata, NTILE(10) OVER (ORDER BY DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio) DESC) AS Decile FROM [bi].[OFF_noleggi] WHERE dt_consegna_noleggio IS NOT NULL AND dt_ritiro_noleggio IS NOT NULL ) SELECT id_riga_noleggio, Durata FROM RentalDuration WHERE Decile = 1;"
    },
    {
        "question": "Elenca i clienti (descr) che hanno acquistato un'auto quest'anno e hanno una commessa aperta.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE YEAR(ac.dt_apertura_contratto) = YEAR(GETDATE()) AND cli.id_contatto IN (SELECT DISTINCT id_cliente_officina FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL);"
    },
    {
        "question": "Qual è il tempo medio tra la data veicolo pronto e la data di chiusura della commessa per tipo commessa?",
        "answer": "SELECT ct.descr_tipo_commessa, AVG(DATEDIFF(day, c.dt_veicolo_pronto_commessa, c.dt_chiusura_commessa)) AS TempoMedioProntoChiusura FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE c.dt_veicolo_pronto_commessa IS NOT NULL AND c.dt_chiusura_commessa IS NOT NULL GROUP BY ct.descr_tipo_commessa;"
    },
    {
        "question": "Trova i contratti auto per cui non esiste una voce corrispondente nella vista redditività.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE id_contratto_redd NOT IN (SELECT DISTINCT id_contratto_redd FROM [bi].[AUTO_contratti_redd]);"
    },
    {
        "question": "Mostra il ranking dei canali di vendita per numero di contratti con permuta.",
        "answer": "WITH PermutaCounts AS ( SELECT id_canale_vendita, COUNT(id_contratto) AS NumPermute FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 0 GROUP BY id_canale_vendita ) SELECT cv.descr_canale_vendita, pc.NumPermute, RANK() OVER (ORDER BY pc.NumPermute DESC) AS Ranking FROM PermutaCounts pc JOIN [bi].[AUTO_canali_vendita] cv ON pc.id_canale_vendita = cv.id_canale_vendita;"
    },
    {
        "question": "Quali sono le commesse che hanno avuto lavorazioni con costo superiore a 1000 euro per una singola riga?",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_commesse] c ON l.id_commessa = c.id_commessa WHERE l.costo_lavorazione > 1000;"
    },
    {
        "question": "Elenca i tipi di intervento associati sia a carico cliente che a carico garanzia (non necessariamente sulla stessa riga).",
        "answer": "SELECT descr_tipo_intervento FROM [bi].[OFF_interventi_tipi] WHERE tipo_carico_cliente_tipo_intervento = 'Cliente' AND tipo_garanzia_tipo_intervento IS NOT NULL AND tipo_garanzia_tipo_intervento <> '';"
    },
    {
        "question": "Mostra il rapporto tra ore di permesso e ore totali di presenza per ogni mese.",
        "answer": "SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, SUM(ore_permessi_presenza) / NULLIF(SUM(ore_presenza), 0) AS RapportoPermessiPresenza FROM [bi].[OFF_presenze] GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ORDER BY Anno, Mese;"
    },
    {
        "question": "Trova i contatti (ragione sociale) associati a noleggi non ancora chiusi.",
        "answer": "SELECT DISTINCT co.ragione_sociale_contatto FROM [bi].[OFF_noleggi] n JOIN [bi].[CONTT_contatti] co ON n.id_contatto = co.id_contatto WHERE n.dt_chiusura_noleggio IS NULL;"
    },
    {
        "question": "Qual è il margine consuntivo totale per i contratti senza provvigioni?",
        "answer": "SELECT SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] r WHERE r.id_contratto_redd NOT IN (SELECT DISTINCT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd > 0);"
    },
    {
        "question": "Mostra le commesse che non hanno né materiale consumo né spese rifiuti.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE (imp_netto_materiale_consumo_commessa IS NULL OR imp_netto_materiale_consumo_commessa = 0) AND (imp_netto_spese_rifiuti_commessa IS NULL OR imp_netto_spese_rifiuti_commessa = 0);"
    },
    {
        "question": "Elenca i tipi esecutore (codice) che hanno registrato ore di straordinario.",
        "answer": "SELECT DISTINCT et.codice_tipo_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori_tipi] et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE p.ore_straordinarie_presenza > 0;"
    },
    {
        "question": "Qual è il numero medio di inconvenienti per commessa per ogni officina?",
        "answer": "WITH IncPerComm AS ( SELECT id_commessa, COUNT(*) AS NumInc FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa ) SELECT o.descr_officina, AVG(CAST(ISNULL(ipc.NumInc, 0) AS FLOAT)) AS MediaInconvenienti FROM [bi].[OFF_commesse] c LEFT JOIN IncPerComm ipc ON c.id_commessa = ipc.id_commessa JOIN [bi].[OFF_officine] o ON c.id_officina = o.id_officina GROUP BY o.descr_officina;"
    },
    {
        "question": "Trova i contratti il cui valore netto è aumentato di più rispetto al contratto precedente dello stesso cliente.",
        "answer": "WITH ContractLag AS ( SELECT id_cliente, nr_contratto, dt_apertura_contratto, imp_netto_contratto, LAG(imp_netto_contratto, 1, 0) OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto) AS PrevContractValue FROM [bi].[AUTO_contratti] ) SELECT TOP 5 cl.nr_contratto, cl.imp_netto_contratto - cl.PrevContractValue AS Increase FROM ContractLag cl WHERE cl.PrevContractValue IS NOT NULL ORDER BY Increase DESC;"
    },
    {
        "question": "Mostra il costo totale per tipo di intervento (lavorazioni + righe) per la commessa 'COM5050'.",
        "answer": "WITH CostiIntervento AS ( SELECT id_tipo_intervento, SUM(ISNULL(costo_lavorazione, 0)) AS CostoLav FROM [bi].[OFF_commesse_lavorazioni] WHERE id_commessa = (SELECT id_commessa FROM [bi].[OFF_commesse] WHERE nr_commessa = 'COM5050') GROUP BY id_tipo_intervento UNION ALL SELECT id_tipo_intervento, SUM(ISNULL(imp_netto_costo_commessa, 0)) FROM [bi].[OFF_commesse_righe] WHERE id_commessa = (SELECT id_commessa FROM [bi].[OFF_commesse] WHERE nr_commessa = 'COM5050') GROUP BY id_tipo_intervento ) SELECT it.descr_tipo_intervento, SUM(CostoLav) AS CostoTotale FROM CostiIntervento ci JOIN [bi].[OFF_interventi_tipi] it ON ci.id_tipo_intervento = it.id_tipo_intervento GROUP BY it.descr_tipo_intervento;"
    },
    {
        "question": "Quali articoli (codice) sono stati usati solo in commesse di tipo 'Garanzia'?",
        "answer": "SELECT r.codice_articolo_commessa FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE r.codice_articolo_commessa IS NOT NULL GROUP BY r.codice_articolo_commessa HAVING MIN(ct.descr_tipo_commessa) = 'Garanzia' AND MAX(ct.descr_tipo_commessa) = 'Garanzia';"
    },
    {
        "question": "Elenca gli esecutori che hanno un rapporto ore lavorate/ore presenza inferiore al 50%.",
        "answer": "WITH TechProductivity AS ( SELECT p.id_esecutore, SUM(ISNULL(l.ore_lavorazione, 0)) / NULLIF(SUM(p.ore_presenza), 0) AS ProdRatio FROM [bi].[OFF_presenze] p LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON p.id_esecutore = l.id_esecutore AND p.dt_presenza = CONVERT(date, l.dt_movimento_lavorazione) GROUP BY p.id_esecutore HAVING SUM(p.ore_presenza) > 0 ) SELECT e.descr_esecutore FROM TechProductivity tp JOIN [bi].[OFF_esecutori] e ON tp.id_esecutore = e.id_esecutore WHERE tp.ProdRatio < 0.5;"
    },
    {
        "question": "Trova i veicoli (targa) noleggiati il cui ultimo noleggio è terminato più di 6 mesi fa.",
        "answer": "SELECT targa_noleggio FROM [bi].[OFF_noleggi] GROUP BY targa_noleggio HAVING MAX(dt_consegna_noleggio) < DATEADD(month, -6, GETDATE());"
    },
    {
        "question": "Mostra i contatti (ID) con indirizzo email che sembra non valido (es. manca '@' o '.').",
        "answer": "SELECT id_contatto, email_contatto FROM [bi].[CONTT_contatti] WHERE email_contatto IS NOT NULL AND (email_contatto NOT LIKE '%@%' OR email_contatto NOT LIKE '%.%');"
    },
    {
        "question": "Qual è il margine consuntivo medio dei 100 contratti più recenti?",
        "answer": "WITH RecentContracts AS ( SELECT TOP 100 id_contratto_redd FROM [bi].[AUTO_contratti] ORDER BY dt_apertura_contratto DESC ) SELECT AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] r WHERE r.id_contratto_redd IN (SELECT id_contratto_redd FROM RecentContracts);"
    },
    {
        "question": "Elenca le commesse chiuse per cui il tempo tra fine lavori e chiusura è stato superiore alla durata dei lavori (fine-inizio).",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL AND dt_fine_lavoro_commessa IS NOT NULL AND dt_inizio_lavoro_commessa IS NOT NULL AND DATEDIFF(day, dt_fine_lavoro_commessa, dt_chiusura_commessa) > DATEDIFF(day, dt_inizio_lavoro_commessa, dt_fine_lavoro_commessa);"
    },
    {
        "question": "Trova il ranking dei venditori basato sul numero di permute gestite.",
        "answer": "SELECT v.descr_venditore, SUM(c.count_permute_contratto) AS TotPermute, RANK() OVER (ORDER BY SUM(c.count_permute_contratto) DESC) AS RankPermute FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore GROUP BY v.descr_venditore;"
    },
    {
        "question": "Quali sono i 5 tipi di intervento con la maggior differenza media tra ore fatturate e ore lavorate?",
        "answer": "SELECT TOP 5 it.descr_tipo_intervento, AVG(l.ore_fatturate_lavorazione - l.ore_lavorazione) AS DiffMediaOre FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_interventi_tipi] it ON l.id_tipo_intervento = it.id_tipo_intervento WHERE l.ore_lavorazione IS NOT NULL AND l.ore_fatturate_lavorazione IS NOT NULL GROUP BY it.descr_tipo_intervento ORDER BY DiffMediaOre DESC;"
    },
    {
        "question": "Mostra i clienti che hanno comprato un'auto con assicurazione e hanno avuto commesse con inconveniente 'Incidente'.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina JOIN [bi].[OFF_commesse_inconvenienti] i ON oc.id_commessa = i.id_commessa WHERE ac.has_assicurazione_contratto = 1 AND i.descr_breve_inconveniente LIKE '%Incidente%';"
    },
    {
        "question": "Calcola la percentuale di ore di presenza degli accettatori sul totale ore presenza.",
        "answer": "SELECT SUM(CASE WHEN accettatore_presenza = 1 THEN ore_presenza ELSE 0 END) * 100.0 / NULLIF(SUM(ore_presenza), 0) AS PercPresenzaAccettatori FROM [bi].[OFF_presenze];"
    },
    {
        "question": "Elenca i veicoli (targa) che hanno avuto più di 2 noleggi nello stesso anno.",
        "answer": "SELECT targa_noleggio, YEAR(dt_ritiro_noleggio) AS Anno FROM [bi].[OFF_noleggi] GROUP BY targa_noleggio, YEAR(dt_ritiro_noleggio) HAVING COUNT(id_riga_noleggio) > 2;"
    },
    {
        "question": "Trova i contatti con lo stesso nome e cognome ma diverso codice fiscale.",
        "answer": "SELECT nome_contatto, cognome_contatto, COUNT(DISTINCT codice_fiscale_contatto) AS NumCF FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'PF' AND nome_contatto IS NOT NULL AND cognome_contatto IS NOT NULL GROUP BY nome_contatto, cognome_contatto HAVING COUNT(DISTINCT codice_fiscale_contatto) > 1;"
    },
    {
        "question": "Qual è il valore medio del contratto per le auto la cui data di acquisto e immatricolazione coincidono?",
        "answer": "SELECT AVG(c.imp_netto_contratto) FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_veicoli] AS v ON c.id_veicolo = v.id_veicolo WHERE v.dt_acquisto_veicolo = v.dt_immatricolazione_veicolo;"
    },
    {
        "question": "Mostra il trend della differenza tra costo previsto e consuntivo, mese per mese.",
        "answer": "WITH MonthlyDiff AS ( SELECT EOMONTH(c.dt_chiusura_contratto) AS MonthEnd, SUM(r.imp_costo_consuntivo_redd - r.imp_costo_previsto_redd) AS DiffCosti FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE c.dt_chiusura_contratto IS NOT NULL AND r.imp_costo_consuntivo_redd IS NOT NULL AND r.imp_costo_previsto_redd IS NOT NULL GROUP BY EOMONTH(c.dt_chiusura_contratto) ) SELECT MonthEnd, DiffCosti, LAG(DiffCosti, 1, 0) OVER (ORDER BY MonthEnd) AS PrevMonthDiff FROM MonthlyDiff ORDER BY MonthEnd;"
    },
    {
        "question": "Elenca le commesse il cui costo totale lavori esterni supera il costo totale manodopera interna.",
        "answer": "WITH CostExt AS (SELECT id_commessa, SUM(ISNULL(costo_lavoro_ext_lavorazione, 0)) AS TotExt FROM [bi].[OFF_commesse_lavorazioni] WHERE gruppo_voce_lavorazione = 13 GROUP BY id_commessa), CostInt AS (SELECT id_commessa, SUM(ISNULL(costo_lavorazione, 0)) AS TotInt FROM [bi].[OFF_commesse_lavorazioni] WHERE gruppo_voce_lavorazione <> 13 GROUP BY id_commessa) SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN CostExt ce ON c.id_commessa = ce.id_commessa JOIN CostInt ci ON c.id_commessa = ci.id_commessa WHERE ce.TotExt > ci.TotInt;"
    },
    {
        "question": "Qual è il valore del contratto auto associato alla commessa con costo manodopera più alto?",
        "answer": "WITH TopLaborCommessa AS (SELECT TOP 1 l.id_commessa FROM [bi].[OFF_commesse_lavorazioni] l ORDER BY l.costo_lavorazione DESC), CommVehicle AS (SELECT id_commessa, targa_veicolo_officina FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina WHERE oc.id_commessa = (SELECT id_commessa FROM TopLaborCommessa)) SELECT ac.nr_contratto, ac.imp_netto_contratto FROM CommVehicle cv JOIN [bi].[AUTO_veicoli] av ON cv.targa_veicolo_officina = av.targa_veicolo JOIN [bi].[AUTO_contratti] ac ON av.id_veicolo = ac.id_veicolo;"
    },
    {
        "question": "Trova il numero medio di ore lavorate per commessa.",
        "answer": "SELECT AVG(CAST(OreLavorate AS FLOAT)) FROM (SELECT id_commessa, SUM(ore_lavorazione) AS OreLavorate FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa) AS OrePerCommessa;"
    },
    {
        "question": "Trova i contratti auto associati a veicoli per cui non esiste una commessa officina.",
        "answer": "SELECT ac.nr_contratto FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo LEFT JOIN [bi].[OFF_veicoli] ov ON av.targa_veicolo = ov.targa_veicolo_officina WHERE ov.id_veicolo_officina IS NULL OR ov.id_veicolo_officina NOT IN (SELECT id_veicolo_officina FROM [bi].[OFF_commesse]);"
    },
    {
        "question": "Qual è la percentuale di contratti 'chiusi' rispetto al totale per ogni anno di apertura?",
        "answer": "SELECT YEAR(dt_apertura_contratto) AS Anno, CAST(SUM(CASE WHEN status_contratto = 'Chiuso' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(id_contratto) AS PercChiusi FROM [bi].[AUTO_contratti] GROUP BY YEAR(dt_apertura_contratto) ORDER BY Anno DESC;"
    },
    {
        "question": "Mostra i veicoli (targa) con più di 5 accessi in officina.",
        "answer": "SELECT v.targa_veicolo_officina, COUNT(c.id_commessa) AS NumAccessi FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina GROUP BY v.targa_veicolo_officina HAVING COUNT(c.id_commessa) > 5;"
    },
    {
        "question": "Elenca i venditori che hanno venduto almeno un'auto in ogni trimestre dell'anno scorso.",
        "answer": "SELECT v.descr_venditore FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore WHERE YEAR(c.dt_apertura_contratto) = YEAR(GETDATE()) - 1 GROUP BY v.descr_venditore HAVING COUNT(DISTINCT DATEPART(quarter, c.dt_apertura_contratto)) = 4;"
    },
    {
        "question": "Qual è il ricavo consuntivo medio per i contratti con meno di 2 permute?",
        "answer": "SELECT AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] r JOIN [bi].[AUTO_contratti] c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.count_permute_contratto < 2;"
    },
    {
        "question": "Trova le commesse che hanno avuto un cambio di accettatore (richiede storico).",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] c WHERE c.id_commessa IN (SELECT id_commessa FROM CommesseStorico GROUP BY id_commessa HAVING COUNT(DISTINCT id_accettatore) > 1); -- Query ipotetica, richiede tabella storico"
    },
    {
        "question": "Mostra la distribuzione dei contratti per fasce di importo netto (es. ogni 10000 euro).",
        "answer": "SELECT FLOOR(imp_netto_contratto / 10000) * 10000 AS FasciaInizio, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY FLOOR(imp_netto_contratto / 10000) * 10000 ORDER BY FasciaInizio;"
    },
    {
        "question": "Qual è il rapporto medio tra ore lavorate e ore tempario per esecutore?",
        "answer": "SELECT e.descr_esecutore, AVG(l.ore_lavorazione / NULLIF(l.ore_tempario_lavorazione, 0)) AS RapportoOreLavTempario FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore WHERE l.ore_tempario_lavorazione > 0 GROUP BY e.descr_esecutore;"
    },
    {
        "question": "Elenca gli articoli (codice) il cui costo medio ponderato è aumentato rispetto alla riga precedente nella stessa commessa.",
        "answer": "WITH LaggedCost AS ( SELECT id_commessa, nr_riga_commessa, codice_articolo_commessa, imp_netto_costo_medio_ponderato_commessa, LAG(imp_netto_costo_medio_ponderato_commessa, 1, 0) OVER (PARTITION BY id_commessa, codice_articolo_commessa ORDER BY nr_riga_commessa) AS PrevCost FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL ) SELECT DISTINCT codice_articolo_commessa FROM LaggedCost WHERE imp_netto_costo_medio_ponderato_commessa > PrevCost;"
    },
    {
        "question": "Trova i 10 giorni con il maggior numero di ore di presenza registrate.",
        "answer": "SELECT TOP 10 dt_presenza, SUM(ore_presenza) AS TotOrePresenza FROM [bi].[OFF_presenze] GROUP BY dt_presenza ORDER BY TotOrePresenza DESC;"
    },
    {
        "question": "Mostra i contatti che hanno lo stesso CAP ma province diverse.",
        "answer": "SELECT cap_contatto, STRING_AGG(provincia_contatto, ', ') AS Province FROM [bi].[CONTT_contatti] WHERE cap_contatto IS NOT NULL AND provincia_contatto IS NOT NULL GROUP BY cap_contatto HAVING COUNT(DISTINCT provincia_contatto) > 1;"
    },
    {
        "question": "Calcola il valore cumulativo del margine consuntivo per i contratti chiusi quest'anno.",
        "answer": "WITH MonthlyMargin AS ( SELECT EOMONTH(c.dt_chiusura_contratto) AS MonthEnd, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS Margin FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE c.status_contratto = 'Chiuso' AND YEAR(c.dt_chiusura_contratto) = YEAR(GETDATE()) GROUP BY EOMONTH(c.dt_chiusura_contratto) ) SELECT MonthEnd, Margin, SUM(Margin) OVER (ORDER BY MonthEnd) AS CumulativeMargin FROM MonthlyMargin ORDER BY MonthEnd;"
    },
    {
        "question": "Quali veicoli (targa) hanno avuto una commessa il cui valore totale (righe+lavorazioni) supera 500 euro?",
        "answer": "WITH CostoCommessa AS (SELECT c.id_veicolo_officina, SUM(ISNULL(Costi.Costo,0)) AS CstTot FROM [bi].[OFF_commesse] c LEFT JOIN (SELECT id_commessa, ISNULL(imp_netto_riga_commessa,0) AS Costo FROM [bi].[OFF_commesse_righe] UNION ALL SELECT id_commessa, ISNULL(costo_lavorazione,0) FROM [bi].[OFF_commesse_lavorazioni]) AS Costi ON c.id_commessa = Costi.id_commessa GROUP BY c.id_veicolo_officina, c.id_commessa HAVING SUM(ISNULL(Costi.Costo,0)) > 500 ) SELECT DISTINCT v.targa_veicolo_officina FROM CostoCommessa cc JOIN [bi].[OFF_veicoli] v ON cc.id_veicolo_officina = v.id_veicolo_officina;"
    },
    {
        "question": "Mostra il ranking dei tipi commessa per durata media.",
        "answer": "SELECT ct.descr_tipo_commessa, AVG(DATEDIFF(day, c.dt_apertura_commessa, c.dt_chiusura_commessa)) AS DurataMedia, RANK() OVER (ORDER BY AVG(DATEDIFF(day, c.dt_apertura_commessa, c.dt_chiusura_commessa)) DESC) AS Ranking FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE c.dt_chiusura_commessa IS NOT NULL GROUP BY ct.descr_tipo_commessa;"
    },
    {
        "question": "Elenca i venditori che hanno venduto auto a clienti con commesse aperte da più di 60 giorni.",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_venditori] v ON ac.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE cli.id_contatto IN (SELECT DISTINCT id_cliente_officina FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL AND DATEDIFF(day, dt_apertura_commessa, GETDATE()) > 60);"
    },
    {
        "question": "Calcola la percentuale di ore straordinarie sul totale ore presenza per ogni officina.",
        "answer": "SELECT o.descr_officina, SUM(p.ore_straordinarie_presenza) * 100.0 / NULLIF(SUM(p.ore_presenza), 0) AS PercStraordinari FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_officine] o ON p.id_officina = o.id_officina GROUP BY o.descr_officina HAVING SUM(p.ore_presenza) > 0;"
    },
    {
        "question": "Quali sono i 5 venditori con la maggiore crescita percentuale del valore medio contratto quest'anno rispetto all'anno scorso?",
        "answer": "WITH AvgContractValue AS ( SELECT id_venditore, YEAR(dt_apertura_contratto) AS Anno, AVG(imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) >= YEAR(GETDATE()) - 1 GROUP BY id_venditore, YEAR(dt_apertura_contratto) ), ValueCompare AS ( SELECT id_venditore, SUM(CASE WHEN Anno = YEAR(GETDATE()) THEN ValoreMedio ELSE 0 END) AS VMCur, SUM(CASE WHEN Anno = YEAR(GETDATE()) - 1 THEN ValoreMedio ELSE 0 END) AS VMPrev FROM AvgContractValue GROUP BY id_venditore ) SELECT TOP 5 v.descr_venditore, (vc.VMCur - vc.VMPrev) * 100.0 / NULLIF(vc.VMPrev, 0) AS GrowthPerc FROM ValueCompare vc JOIN [bi].[AUTO_venditori] v ON vc.id_venditore = v.id_venditore WHERE vc.VMPrev > 0 ORDER BY GrowthPerc DESC;"
    },
    {
        "question": "Mostra le commesse aperte per veicoli la cui ultima commessa chiusa risale a più di 180 giorni fa.",
        "answer": "WITH LastClosed AS ( SELECT id_veicolo_officina, MAX(dt_chiusura_commessa) AS UltimaChiusura FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL GROUP BY id_veicolo_officina ) SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN LastClosed lc ON c.id_veicolo_officina = lc.id_veicolo_officina WHERE c.dt_chiusura_commessa IS NULL AND lc.UltimaChiusura < DATEADD(day, -180, GETDATE());"
    },
    {
        "question": "Elenca i clienti (ID Contatto) che hanno acquistato auto di almeno 3 marche diverse e hanno avuto commesse in almeno 2 officine diverse.",
        "answer": "WITH AutoBrands AS ( SELECT cli.id_contatto, COUNT(DISTINCT v.marca_veicolo) AS NumBrands FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo GROUP BY cli.id_contatto HAVING COUNT(DISTINCT v.marca_veicolo) >= 3 ), OfficineVisitate AS ( SELECT id_cliente_officina, COUNT(DISTINCT id_officina) AS NumOfficine FROM [bi].[OFF_commesse] GROUP BY id_cliente_officina HAVING COUNT(DISTINCT id_officina) >= 2 ) SELECT ab.id_contatto FROM AutoBrands ab JOIN OfficineVisitate ov ON ab.id_contatto = ov.id_cliente_officina;"
    },
    {
        "question": "Qual è il rapporto tra il costo totale degli inconvenienti in garanzia e il costo totale di tutti gli inconvenienti?",
        "answer": "WITH InconvenienteCost AS ( SELECT i.id_inconveniente, i.tipo_carico_garanzia_inconveniente, SUM(ISNULL(r.imp_netto_costo_commessa, 0) + ISNULL(l.costo_lavorazione, 0)) AS CostoInconveniente FROM [bi].[OFF_commesse_inconvenienti] i LEFT JOIN [bi].[OFF_commesse_righe] r ON i.id_inconveniente = r.id_inconveniente LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON i.id_inconveniente = l.id_inconveniente GROUP BY i.id_inconveniente, i.tipo_carico_garanzia_inconveniente ) SELECT SUM(CASE WHEN tipo_carico_garanzia_inconveniente IS NOT NULL AND tipo_carico_garanzia_inconveniente <> '' THEN CostoInconveniente ELSE 0 END) / NULLIF(SUM(CostoInconveniente), 0) AS RapportoCostiGaranzia FROM InconvenienteCost;"
    },
    {
        "question": "Mostra i contratti (nr) e categorizzali come 'Alto Valore' (>30k), 'Medio Valore' (15k-30k), 'Basso Valore' (<15k).",
        "answer": "SELECT nr_contratto, CASE WHEN imp_netto_contratto >= 30000 THEN 'Alto Valore' WHEN imp_netto_contratto >= 15000 THEN 'Medio Valore' ELSE 'Basso Valore' END AS CategoriaValore FROM [bi].[AUTO_contratti];"
    },
    {
        "question": "Quali sono le 5 voci commessa con la maggior differenza percentuale tra prezzo listino e prezzo unitario?",
        "answer": "SELECT TOP 5 v.descr_voce, AVG((r.imp_netto_prezzo_listino_commessa - r.imp_netto_prezzo_unitario_commessa) / NULLIF(r.imp_netto_prezzo_listino_commessa, 0)) * 100 AS DiffPercListinoUnitario FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE r.imp_netto_prezzo_listino_commessa > 0 GROUP BY v.descr_voce ORDER BY DiffPercListinoUnitario DESC;"
    },
    {
        "question": "Elenca i tecnici che hanno lavorato meno ore del tempario previsto in media.",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore WHERE l.ore_tempario_lavorazione > 0 GROUP BY e.descr_esecutore HAVING AVG(l.ore_lavorazione) < AVG(l.ore_tempario_lavorazione);"
    },
    {
        "question": "Mostra il numero di giorni tra l'ultimo contratto chiuso e il primo contratto aperto per ogni cliente con più di un contratto.",
        "answer": "WITH ContractDates AS ( SELECT id_cliente, MIN(dt_apertura_contratto) AS PrimaApertura, MAX(dt_chiusura_contratto) AS UltimaChiusura, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(id_contratto) > 1 ) SELECT cli.descr_cliente, DATEDIFF(day, cd.PrimaApertura, cd.UltimaChiusura) AS GiorniTraPrimoEUltimo FROM ContractDates cd JOIN [bi].[AUTO_clienti] cli ON cd.id_cliente = cli.id_cliente WHERE cd.UltimaChiusura IS NOT NULL;"
    },
    {
        "question": "Qual è il rapporto tra costo materiale consumo e costo spese rifiuti per commessa?",
        "answer": "SELECT nr_commessa, imp_netto_materiale_consumo_commessa / NULLIF(imp_netto_spese_rifiuti_commessa, 0) AS RapportoConsumoRifiuti FROM [bi].[OFF_commesse] WHERE imp_netto_spese_rifiuti_commessa > 0;"
    },
    {
        "question": "Elenca i 3 gruppi officina con la maggior percentuale di commesse chiuse in ritardo.",
        "answer": "SELECT TOP 3 o.gruppo_officina, CAST(SUM(CASE WHEN c.dt_chiusura_commessa > c.dt_previsione_consegna_commessa THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(c.id_commessa) AS PercRitardo FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_officine] o ON c.id_officina = o.id_officina WHERE c.dt_previsione_consegna_commessa IS NOT NULL AND c.dt_chiusura_commessa IS NOT NULL GROUP BY o.gruppo_officina ORDER BY PercRitardo DESC;"
    },
    {
        "question": "Qual è il costo consuntivo medio per i contratti di livello margine '2'?",
        "answer": "SELECT AVG(imp_costo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE liv_margine_redd = '2';"
    },
    {
        "question": "Mostra il ranking dei tipi di intervento per numero di inconvenienti associati.",
        "answer": "WITH IncCount AS ( SELECT id_tipo_intervento, COUNT(id_inconveniente) AS NumInc FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_tipo_intervento ) SELECT it.descr_tipo_intervento, ic.NumInc, RANK() OVER (ORDER BY ic.NumInc DESC) AS Ranking FROM IncCount ic JOIN [bi].[OFF_interventi_tipi] it ON ic.id_tipo_intervento = it.id_tipo_intervento;"
    },
    {
        "question": "Elenca i veicoli (targa) che hanno avuto commesse in più di 3 officine diverse.",
        "answer": "SELECT v.targa_veicolo_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina GROUP BY v.targa_veicolo_officina HAVING COUNT(DISTINCT c.id_officina) > 3;"
    },
    {
        "question": "Quanti contratti per ogni combinazione di flag (finanziamento, assicurazione)?",
        "answer": "SELECT has_finanziamento_contratto, has_assicurazione_contratto, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY has_finanziamento_contratto, has_assicurazione_contratto;"
    },
    {
        "question": "Qual è il rapporto tra ore di presenza degli accettatori e ore di presenza totali?",
        "answer": "SELECT SUM(CASE WHEN accettatore_presenza = 1 THEN ore_presenza ELSE 0 END) / NULLIF(SUM(ore_presenza), 0) AS RapportoPresenzeAccettatori FROM [bi].[OFF_presenze];"
    },
    {
        "question": "Trova le commesse con valore riga 'Altro' superiore a 100 euro.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa WHERE r.imp_fatturato_altro > 100;"
    },
    {
        "question": "Qual è la differenza tra il valore massimo e minimo dei contratti per ogni venditore?",
        "answer": "SELECT v.descr_venditore, MAX(c.imp_netto_contratto) - MIN(c.imp_netto_contratto) AS RangeValore FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore GROUP BY v.descr_venditore;"
    },
    {
        "question": "Mostra le date in cui nessun tecnico ha registrato ore lavorate.",
        "answer": "SELECT DISTINCT p.dt_presenza FROM [bi].[OFF_presenze] p WHERE p.dt_presenza NOT IN (SELECT DISTINCT CONVERT(date, dt_movimento_lavorazione) FROM [bi].[OFF_commesse_lavorazioni]);"
    },
    {
        "question": "Qual è il costo medio dei ricambi per le commesse senza inconvenienti registrati?",
        "answer": "SELECT AVG(r.imp_netto_costo_commessa) FROM [bi].[OFF_commesse_righe] r WHERE r.gruppo_voce_commessa = 5 AND r.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti]);"
    },
    {
        "question": "Elenca i 10 contatti (ID) con la data di modifica più vecchia.",
        "answer": "SELECT TOP 10 id_contatto, ragione_sociale_contatto, dt_modifica_contatto FROM [bi].[CONTT_contatti] WHERE dt_modifica_contatto IS NOT NULL ORDER BY dt_modifica_contatto ASC;"
    },
    {
        "question": "Qual è il margine consuntivo percentuale medio per i contratti senza provvigione?",
        "answer": "SELECT AVG( (ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) / NULLIF(ISNULL(r.imp_ricavo_consuntivo_redd, 0), 0) ) * 100 FROM [bi].[AUTO_contratti_redd] r WHERE (r.imp_netto_provvigione_redd IS NULL OR r.imp_netto_provvigione_redd = 0) AND ISNULL(r.imp_ricavo_consuntivo_redd, 0) <> 0;"
    },
    {
        "question": "Mostra le commesse chiuse in cui il tempo tra consegna effettiva e chiusura è maggiore di 1 giorno.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL AND dt_effettiva_consegna_commessa IS NOT NULL AND DATEDIFF(day, dt_effettiva_consegna_commessa, dt_chiusura_commessa) > 1;"
    },
    {
        "question": "Quali sono i tipi di esecutore (riclassificazione) che hanno lavorato su commesse auto?",
        "answer": "SELECT DISTINCT et.riclassificazione_tipo_esecutore FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori_tipi] et ON l.id_tipo_esecutore = et.id_tipo_esecutore JOIN [bi].[OFF_commesse] oc ON l.id_commessa = oc.id_commessa JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina WHERE ov.targa_veicolo_officina IN (SELECT targa_veicolo FROM [bi].[AUTO_veicoli]);"
    },
    {
        "question": "Trova il rapporto tra numero di noleggi e numero di commesse totali.",
        "answer": "SELECT CAST((SELECT COUNT(*) FROM [bi].[OFF_noleggi]) AS FLOAT) / NULLIF((SELECT COUNT(*) FROM [bi].[OFF_commesse]), 0) AS RapportoNoleggiCommesse;"
    },
    {
        "question": "Elenca i venditori che hanno venduto auto a clienti con email @pec.it",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[CONTT_contatti] co ON cli.id_contatto = co.id_contatto WHERE co.email_contatto LIKE '%@pec.it';"
    },
    {
        "question": "Qual è il valore medio del contratto per fasce di anzianità del veicolo al momento dell'apertura?",
        "answer": "SELECT CASE WHEN DATEDIFF(year, v.dt_immatricolazione_veicolo, c.dt_apertura_contratto) < 2 THEN '0-1 Anno' WHEN DATEDIFF(year, v.dt_immatricolazione_veicolo, c.dt_apertura_contratto) < 5 THEN '2-4 Anni' ELSE '5+ Anni' END AS FasciaAnzianita, AVG(c.imp_netto_contratto) AS ValoreMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE v.dt_immatricolazione_veicolo IS NOT NULL GROUP BY CASE WHEN DATEDIFF(year, v.dt_immatricolazione_veicolo, c.dt_apertura_contratto) < 2 THEN '0-1 Anno' WHEN DATEDIFF(year, v.dt_immatricolazione_veicolo, c.dt_apertura_contratto) < 5 THEN '2-4 Anni' ELSE '5+ Anni' END;"
    },
    {
        "question": "Mostra le 5 voci officina (codice) meno utilizzate (minor numero di righe).",
        "answer": "SELECT TOP 5 r.id_voce, COUNT(*) AS NumRighe FROM [bi].[OFF_commesse_righe] r GROUP BY r.id_voce ORDER BY NumRighe ASC;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno tipo costo/ricavo 'VARIE ED EVENTUALI'?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd = 'VARIE ED EVENTUALI';"
    },
    {
        "question": "Elenca le commesse con più di 3 inconvenienti diversi segnalati.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING COUNT(DISTINCT id_inconveniente) > 3;"
    },
    {
        "question": "Trova il rapporto tra ore lavorate e ore fatturate per i tecnici 'Junior'.",
        "answer": "SELECT SUM(l.ore_lavorazione) / NULLIF(SUM(l.ore_fatturate_lavorazione), 0) AS RapportoLavFatt FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore WHERE e.gruppo_esecutore = 'Junior' AND l.ore_fatturate_lavorazione > 0;"
    },
    {
        "question": "Qual è il giorno della settimana con il minor numero medio di ore di presenza?",
        "answer": "SELECT TOP 1 DATENAME(weekday, dt_presenza) AS Giorno, AVG(ore_presenza) AS MediaOre FROM [bi].[OFF_presenze] GROUP BY DATENAME(weekday, dt_presenza), DATEPART(weekday, dt_presenza) ORDER BY MediaOre ASC;"
    },
    {
        "question": "Mostra i noleggi associati a veicoli di marca 'Ford'.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] n JOIN [bi].[OFF_commesse] c ON n.id_commessa = c.id_commessa JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_marca_veicolo_officina = 'Ford';"
    },
    {
        "question": "Elenca i clienti (descr) che hanno avuto sia contratti auto che noleggi.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_clienti] cli JOIN [bi].[AUTO_contratti] ac ON cli.id_cliente = ac.id_cliente JOIN [bi].[OFF_noleggi] n ON cli.id_contatto = n.id_contatto;"
    },
    {
        "question": "Qual è il ranking delle aree per numero totale di permute?",
        "answer": "WITH AreaPermute AS ( SELECT id_area, SUM(count_permute_contratto) AS TotPermute FROM [bi].[AUTO_contratti] GROUP BY id_area ) SELECT ar.descr_area, ap.TotPermute, RANK() OVER (ORDER BY ap.TotPermute DESC) AS Ranking FROM AreaPermute ap JOIN [bi].[AUTO_aree] ar ON ap.id_area = ar.id_area;"
    },
    {
        "question": "Trova le commesse il cui costo totale ricambi è zero.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] c WHERE c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_righe] WHERE gruppo_voce_commessa = 5 AND imp_netto_costo_commessa > 0); -- Assumendo 5 = Ricambi"
    },
    {
        "question": "Mostra l'ultimo contratto aperto per ogni canale di vendita.",
        "answer": "WITH LastContractChannel AS ( SELECT id_canale_vendita, nr_contratto, dt_apertura_contratto, ROW_NUMBER() OVER (PARTITION BY id_canale_vendita ORDER BY dt_apertura_contratto DESC) AS rn FROM [bi].[AUTO_contratti] ) SELECT cv.descr_canale_vendita, lcc.nr_contratto, lcc.dt_apertura_contratto FROM LastContractChannel lcc JOIN [bi].[AUTO_canali_vendita] cv ON lcc.id_canale_vendita = cv.id_canale_vendita WHERE lcc.rn = 1;"
    },
    {
        "question": "Quali sono i 3 tipi di intervento officina con la maggior durata media commessa?",
        "answer": "WITH AvgDuration AS ( SELECT r.id_tipo_intervento, AVG(CAST(DATEDIFF(day, c.dt_apertura_commessa, c.dt_chiusura_commessa) AS FLOAT)) AS DurataMedia FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa WHERE c.dt_chiusura_commessa IS NOT NULL GROUP BY r.id_tipo_intervento ) SELECT TOP 3 it.descr_tipo_intervento, ad.DurataMedia FROM AvgDuration ad JOIN [bi].[OFF_interventi_tipi] it ON ad.id_tipo_intervento = it.id_tipo_intervento ORDER BY ad.DurataMedia DESC;"
    },
    {
        "question": "Elenca i tecnici (esecutori) che hanno lavorato su commesse con più di 3 inconvenienti.",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore WHERE l.id_commessa IN (SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING COUNT(id_inconveniente) > 3);"
    },
    {
        "question": "Mostra il rapporto tra ore di assenza e ore teoriche per ogni mese dell'anno corrente.",
        "answer": "SELECT MONTH(dt_presenza) AS Mese, SUM(ore_assenza_presenza) / NULLIF(SUM(ore_teoriche_presenza), 0) AS RapportoAssenzaTeoriche FROM [bi].[OFF_presenze] WHERE YEAR(dt_presenza) = YEAR(GETDATE()) GROUP BY MONTH(dt_presenza) ORDER BY Mese;"
    },
    {
        "question": "Trova i contatti (ID) che hanno lo stesso codice fiscale ma sono registrati come tipi soggetto diversi.",
        "answer": "SELECT codice_fiscale_contatto FROM [bi].[CONTT_contatti] WHERE codice_fiscale_contatto IS NOT NULL GROUP BY codice_fiscale_contatto HAVING COUNT(DISTINCT tipo_soggetto_contatto) > 1;"
    },
    {
        "question": "Qual è il margine percentuale consuntivo per i contratti classificati come 'Alto Valore'?",
        "answer": "WITH ContractValue AS ( SELECT id_contratto_redd, CASE WHEN imp_netto_contratto >= 30000 THEN 'Alto Valore' WHEN imp_netto_contratto >= 15000 THEN 'Medio Valore' ELSE 'Basso Valore' END AS CategoriaValore FROM [bi].[AUTO_contratti] ) SELECT AVG( (ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) / NULLIF(ISNULL(r.imp_ricavo_consuntivo_redd, 0), 0) ) * 100 FROM [bi].[AUTO_contratti_redd] r JOIN ContractValue cv ON r.id_contratto_redd = cv.id_contratto_redd WHERE cv.CategoriaValore = 'Alto Valore' AND ISNULL(r.imp_ricavo_consuntivo_redd, 0) <> 0;"
    },
    {
        "question": "Mostra le officine ordinate per tempo medio tra apertura commessa e inizio lavori.",
        "answer": "SELECT o.descr_officina, AVG(CAST(DATEDIFF(day, c.dt_apertura_commessa, c.dt_inizio_lavoro_commessa) AS FLOAT)) AS AttesaMedia FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_officine] o ON c.id_officina = o.id_officina WHERE c.dt_inizio_lavoro_commessa IS NOT NULL GROUP BY o.descr_officina ORDER BY AttesaMedia ASC;"
    },
    {
        "question": "Elenca i codici articolo usati sia in righe a carico cliente che in righe in garanzia.",
        "answer": "SELECT codice_articolo_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL GROUP BY codice_articolo_commessa HAVING MIN(tipo_carico_cliente_commessa) = 'Cliente' AND MAX(tipo_carico_garanzia_commessa) IS NOT NULL AND MAX(tipo_carico_garanzia_commessa) <> '';"
    },
    {
        "question": "Quali sono i 3 esecutori con la maggior media di ore lavorate giornaliere?",
        "answer": "SELECT TOP 3 e.descr_esecutore, AVG(l.ore_lavorazione) AS MediaOreLavorate FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore ORDER BY MediaOreLavorate DESC;"
    },
    {
        "question": "Trova i noleggi associati a commesse con inconveniente 'Guasto Motore'.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] n WHERE n.id_commessa IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_breve_inconveniente = 'Guasto Motore');"
    },
    {
        "question": "Mostra i clienti (ID Contatto) che hanno fatto contratti in più anni consecutivi.",
        "answer": "WITH CustomerYears AS (SELECT DISTINCT id_cliente, YEAR(dt_apertura_contratto) AS Anno FROM [bi].[AUTO_contratti]), YearDiff AS (SELECT id_cliente, Anno, Anno - LAG(Anno, 1, Anno) OVER (PARTITION BY id_cliente ORDER BY Anno) AS Diff FROM CustomerYears) SELECT DISTINCT yd.id_cliente FROM YearDiff yd WHERE yd.Diff = 1;"
    },
    {
        "question": "Calcola il margine cumulativo per ogni venditore mese per mese.",
        "answer": "WITH MonthlyMargin AS ( SELECT c.id_venditore, EOMONTH(c.dt_chiusura_contratto) AS MonthEnd, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS Margin FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE c.status_contratto = 'Chiuso' GROUP BY c.id_venditore, EOMONTH(c.dt_chiusura_contratto) ) SELECT v.descr_venditore, mm.MonthEnd, mm.Margin, SUM(mm.Margin) OVER (PARTITION BY mm.id_venditore ORDER BY mm.MonthEnd) AS CumulativeMargin FROM MonthlyMargin mm JOIN [bi].[AUTO_venditori] v ON mm.id_venditore = v.id_venditore ORDER BY v.descr_venditore, mm.MonthEnd;"
    },
    {
        "question": "Quali sono i 5 veicoli (targa) con il maggior costo totale subito in officina?",
        "answer": "WITH CostoVeicolo AS ( SELECT oc.id_veicolo_officina, SUM(ISNULL(Costi.Costo, 0)) AS CstTot FROM [bi].[OFF_commesse] oc LEFT JOIN (SELECT id_commessa, ISNULL(imp_netto_costo_commessa,0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0) AS Costo FROM [bi].[OFF_commesse_righe] UNION ALL SELECT id_commessa, ISNULL(costo_lavorazione,0) FROM [bi].[OFF_commesse_lavorazioni]) AS Costi ON oc.id_commessa = Costi.id_commessa GROUP BY oc.id_veicolo_officina ) SELECT TOP 5 ov.targa_veicolo_officina, cv.CstTot FROM CostoVeicolo cv JOIN [bi].[OFF_veicoli] ov ON cv.id_veicolo_officina = ov.id_veicolo_officina ORDER BY cv.CstTot DESC;"
    },
    {
        "question": "Mostra il rapporto tra il numero di commesse con inconvenienti e il numero totale di commesse per ogni tipo.",
        "answer": "WITH CommTotal AS (SELECT id_tipo_commessa, COUNT(*) AS TotCommesse FROM [bi].[OFF_commesse] GROUP BY id_tipo_commessa), CommInc AS (SELECT c.id_tipo_commessa, COUNT(DISTINCT c.id_commessa) AS IncCommesse FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_inconvenienti] i ON c.id_commessa = i.id_commessa GROUP BY c.id_tipo_commessa) SELECT ct.descr_tipo_commessa, CAST(ISNULL(ci.IncCommesse, 0) AS FLOAT) / NULLIF(ctot.TotCommesse, 0) AS RapportoIncTot FROM CommTotal ctot LEFT JOIN CommInc ci ON ctot.id_tipo_commessa = ci.id_tipo_commessa JOIN [bi].[OFF_commesse_tipi] ct ON ctot.id_tipo_commessa = ct.id_tipo_commessa;"
    },
    {
        "question": "Classifica i venditori in 4 gruppi (quartili) basati sul numero totale di contratti.",
        "answer": "WITH SellerContracts AS (SELECT id_venditore, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY id_venditore) SELECT v.descr_venditore, sc.NumContratti, NTILE(4) OVER (ORDER BY sc.NumContratti DESC) AS QuartileVendite FROM SellerContracts sc JOIN [bi].[AUTO_venditori] v ON sc.id_venditore = v.id_venditore;"
    },
    {
        "question": "Mostra la differenza tra il valore netto dell'ultimo contratto e del penultimo contratto per ogni cliente.",
        "answer": "WITH ContractLagValue AS ( SELECT id_cliente, dt_apertura_contratto, imp_netto_contratto, LAG(imp_netto_contratto, 1) OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto) AS PrevValue, ROW_NUMBER() OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto DESC) AS rn FROM [bi].[AUTO_contratti] ) SELECT cli.descr_cliente, clv.imp_netto_contratto - clv.PrevValue AS DiffLastPrev FROM ContractLagValue clv JOIN [bi].[AUTO_clienti] cli ON clv.id_cliente = cli.id_cliente WHERE clv.rn = 1 AND clv.PrevValue IS NOT NULL;"
    },
    {
        "question": "Elenca i primi 5 veicoli (targa) per margine consuntivo totale.",
        "answer": "WITH VehicleMargin AS ( SELECT c.id_veicolo, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS MargineTot FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY c.id_veicolo ) SELECT TOP 5 v.targa_veicolo, vm.MargineTot FROM VehicleMargin vm JOIN [bi].[AUTO_veicoli] v ON vm.id_veicolo = v.id_veicolo ORDER BY vm.MargineTot DESC;"
    },
    {
        "question": "Quali officine hanno avuto un calo nel numero di commesse aperte questo mese rispetto al mese precedente?",
        "answer": "WITH MonthlyCommesse AS ( SELECT id_officina, YEAR(dt_apertura_commessa) AS Anno, MONTH(dt_apertura_commessa) AS Mese, COUNT(id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] WHERE dt_apertura_commessa >= DATEADD(month, -1, DATEADD(day, 1-DAY(GETDATE()), GETDATE())) GROUP BY id_officina, YEAR(dt_apertura_commessa), MONTH(dt_apertura_commessa) ), LaggedCommesse AS ( SELECT id_officina, Anno, Mese, NumCommesse, LAG(NumCommesse, 1, 0) OVER (PARTITION BY id_officina ORDER BY Anno, Mese) AS PrevMonthCommesse FROM MonthlyCommesse ) SELECT o.descr_officina FROM LaggedCommesse lc JOIN [bi].[OFF_officine] o ON lc.id_officina = o.id_officina WHERE lc.Anno = YEAR(GETDATE()) AND lc.Mese = MONTH(GETDATE()) AND lc.NumCommesse < lc.PrevMonthCommesse;"
    },
    {
        "question": "Mostra i contratti (nr) categorizzati per durata (apertura-chiusura): <30gg, 30-90gg, >90gg.",
        "answer": "SELECT nr_contratto, CASE WHEN DATEDIFF(day, dt_apertura_contratto, dt_chiusura_contratto) < 30 THEN '<30gg' WHEN DATEDIFF(day, dt_apertura_contratto, dt_chiusura_contratto) <= 90 THEN '30-90gg' ELSE '>90gg' END AS FasciaDurata FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto IS NOT NULL;"
    },
    {
        "question": "Quali sono i 3 tipi di intervento (descr) con il maggior costo medio di manodopera per ora lavorata?",
        "answer": "WITH LaborCostPerHour AS ( SELECT l.id_tipo_intervento, SUM(l.costo_lavorazione) / NULLIF(SUM(l.ore_lavorazione), 0) AS CostoOrario FROM [bi].[OFF_commesse_lavorazioni] l WHERE l.ore_lavorazione > 0 GROUP BY l.id_tipo_intervento ) SELECT TOP 3 it.descr_tipo_intervento, lc.CostoOrario FROM LaborCostPerHour lc JOIN [bi].[OFF_interventi_tipi] it ON lc.id_tipo_intervento = it.id_tipo_intervento WHERE lc.CostoOrario IS NOT NULL ORDER BY lc.CostoOrario DESC;"
    },
    {
        "question": "Elenca i tecnici che hanno lavorato su commesse la cui previsione consegna era nel mese scorso.",
        "answer": "SELECT DISTINCT e.descr_esecutore FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore JOIN [bi].[OFF_commesse] c ON l.id_commessa = c.id_commessa WHERE c.dt_previsione_consegna_commessa >= DATEADD(month, -1, DATEADD(day, 1-DAY(GETDATE()), GETDATE())) AND c.dt_previsione_consegna_commessa < DATEADD(day, 1-DAY(GETDATE()), GETDATE());"
    },
    {
        "question": "Mostra il rapporto tra il numero di contratti con permuta e quelli senza, per ogni canale vendita.",
        "answer": "SELECT cv.descr_canale_vendita, CAST(SUM(CASE WHEN c.count_permute_contratto > 0 THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN c.count_permute_contratto = 0 THEN 1 ELSE 0 END), 0) AS RapportoConSenzaPermuta FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY cv.descr_canale_vendita;"
    },
    {
        "question": "Qual è il tempo medio tra la segnalazione di un inconveniente (se esiste data) e l'apertura commessa?",
        "answer": "SELECT AVG(DATEDIFF(day, i.dt_segnalazione_inconveniente, c.dt_apertura_commessa)) FROM [bi].[OFF_commesse_inconvenienti] i JOIN [bi].[OFF_commesse] c ON i.id_commessa = c.id_commessa WHERE i.dt_segnalazione_inconveniente IS NOT NULL; -- Assumendo dt_segnalazione_inconveniente"
    },
    {
        "question": "Elenca i 5 tipi di voce commessa con il minor valore medio fatturato (righe commessa).",
        "answer": "SELECT TOP 5 v.descr_voce, AVG(r.imp_netto_riga_commessa) AS ValoreMedioRiga FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE r.imp_netto_riga_commessa IS NOT NULL GROUP BY v.descr_voce ORDER BY ValoreMedioRiga ASC;"
    },
    {
        "question": "Quali sono i contratti (ID Redd) nel secondo quartile per margine consuntivo?",
        "answer": "WITH MarginRank AS ( SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS Margine, NTILE(4) OVER (ORDER BY SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) DESC) AS Quartile FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd ) SELECT id_contratto_redd FROM MarginRank WHERE Quartile = 2;"
    },
    {
        "question": "Mostra, per ogni sede, il rapporto tra numero di contratti aperti e chiusi quest'anno.",
        "answer": "SELECT s.descr_sede, CAST(SUM(CASE WHEN c.status_contratto <> 'Chiuso' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN c.status_contratto = 'Chiuso' THEN 1 ELSE 0 END), 0) AS RapportoApertiChiusi FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_sedi] s ON c.id_sede = s.id_sede WHERE YEAR(c.dt_apertura_contratto) = YEAR(GETDATE()) GROUP BY s.descr_sede;"
    },
    {
        "question": "Elenca le commesse che hanno avuto lavorazioni eseguite da più di 2 tipi di esecutore diversi.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_commesse] c ON l.id_commessa = c.id_commessa GROUP BY c.nr_commessa HAVING COUNT(DISTINCT l.id_tipo_esecutore) > 2;"
    },
    {
        "question": "Quanti tipi di riclassificazione cliente officina esistono?",
        "answer": "SELECT COUNT(DISTINCT riclassificazione_cliente_officina) FROM [bi].[OFF_clienti] WHERE riclassificazione_cliente_officina IS NOT NULL;"
    },
    {
        "question": "Qual è il rapporto tra costo totale ricambi e costo totale manodopera per le commesse chiuse?",
        "answer": "WITH Costi AS ( SELECT c.id_commessa, SUM(CASE WHEN r.gruppo_voce_commessa = 5 THEN r.imp_netto_costo_commessa ELSE 0 END) AS CostoRicambi, SUM(CASE WHEN l.gruppo_voce_lavorazione = 12 THEN l.costo_lavorazione ELSE 0 END) AS CostoManodopera FROM [bi].[OFF_commesse] c LEFT JOIN [bi].[OFF_commesse_righe] r ON c.id_commessa = r.id_commessa LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON c.id_commessa = l.id_commessa WHERE c.dt_chiusura_commessa IS NOT NULL GROUP BY c.id_commessa ) SELECT SUM(CostoRicambi) / NULLIF(SUM(CostoManodopera), 0) AS RapportoRicambiManodopera FROM Costi;"
    },
    {
        "question": "Trova le commesse aperte il cui veicolo associato ha più di 150.000 km.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v_off ON c.id_veicolo_officina = v_off.id_veicolo_officina JOIN [bi].[AUTO_veicoli] v_auto ON v_off.targa_veicolo_officina = v_auto.targa_veicolo WHERE c.dt_chiusura_commessa IS NULL AND v_auto.km_percorsi_veicolo > 150000;"
    },
    {
        "question": "Quali sono i 3 mesi con il minor numero di contratti aperti l'anno scorso?",
        "answer": "SELECT TOP 3 MONTH(dt_apertura_contratto) AS Mese, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) = YEAR(GETDATE()) - 1 GROUP BY MONTH(dt_apertura_contratto) ORDER BY NumContratti ASC;"
    },
    {
        "question": "Mostra l'importo netto e la data di apertura del terzo contratto più recente per ogni cliente.",
        "answer": "WITH RankedContracts AS ( SELECT id_cliente, nr_contratto, dt_apertura_contratto, imp_netto_contratto, ROW_NUMBER() OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto DESC) AS rn FROM [bi].[AUTO_contratti] ) SELECT cli.descr_cliente, rc.nr_contratto, rc.dt_apertura_contratto, rc.imp_netto_contratto FROM RankedContracts rc JOIN [bi].[AUTO_clienti] cli ON rc.id_cliente = cli.id_cliente WHERE rc.rn = 3;"
    },
    {
        "question": "Qual è il costo medio delle righe (non omaggio) per tipo di carico garanzia?",
        "answer": "SELECT tipo_carico_garanzia_commessa, AVG(imp_netto_costo_commessa) AS CostoMedio FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 0 AND imp_netto_costo_commessa IS NOT NULL GROUP BY tipo_carico_garanzia_commessa;"
    },
    {
        "question": "Elenca i veicoli (targa) la cui ultima data di scadenza bollo è nel prossimo mese.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE dt_scadenza_bollo >= DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 1, 0) AND dt_scadenza_bollo < DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 2, 0);"
    },
    {
        "question": "Qual è la descrizione tipo costo/ricavo più comune nella vista redditività?",
        "answer": "SELECT TOP 1 descr_tipo_costo_ricavo_redd, COUNT(*) AS Frequenza FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd IS NOT NULL GROUP BY descr_tipo_costo_ricavo_redd ORDER BY Frequenza DESC;"
    },
    {
        "question": "Mostra le commesse che hanno avuto ricambi ma nessuna lavorazione associata.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa WHERE r.gruppo_voce_commessa = 5 AND c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_lavorazioni]);"
    },
    {
        "question": "Quali sono i clienti (ID Contatto) che hanno avuto solo noleggi a breve termine?",
        "answer": "SELECT id_contatto FROM [bi].[OFF_noleggi] GROUP BY id_contatto HAVING MAX(is_lungo_termine_noleggio) = 'N';"
    },
    {
        "question": "Trova il rapporto tra ore di ferie e ore teoriche totali per ogni mese.",
        "answer": "SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, SUM(ore_ferie_presenza) / NULLIF(SUM(ore_teoriche_presenza), 0) AS RapportoFerieTeoriche FROM [bi].[OFF_presenze] WHERE ore_teoriche_presenza > 0 GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ORDER BY Anno, Mese;"
    },
    {
        "question": "Elenca i contatti (ragione sociale) con codice fiscale non specificato ma partita IVA presente.",
        "answer": "SELECT ragione_sociale_contatto FROM [bi].[CONTT_contatti] WHERE (codice_fiscale_contatto IS NULL OR codice_fiscale_contatto = '') AND partita_iva_contatto IS NOT NULL AND partita_iva_contatto <> '';"
    },
    {
        "question": "Qual è il margine medio percentuale per i contratti con vs senza permuta?",
        "answer": "SELECT CASE WHEN c.count_permute_contratto > 0 THEN 1 ELSE 0 END AS HasPermuta, AVG( (ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) / NULLIF(ISNULL(r.imp_ricavo_consuntivo_redd, 0), 0) ) * 100 AS MargineMedioPerc FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE ISNULL(r.imp_ricavo_consuntivo_redd, 0) <> 0 GROUP BY CASE WHEN c.count_permute_contratto > 0 THEN 1 ELSE 0 END;"
    },
    {
        "question": "Mostra le 3 voci (codice) con il minor valore medio fatturato (righe commessa).",
        "answer": "SELECT TOP 3 r.id_voce, AVG(r.imp_netto_riga_commessa) AS ValoreMedioRiga FROM [bi].[OFF_commesse_righe] r WHERE r.imp_netto_riga_commessa IS NOT NULL GROUP BY r.id_voce ORDER BY ValoreMedioRiga ASC;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno un ricavo consuntivo ma nessun ricavo previsto?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd IS NOT NULL AND imp_ricavo_consuntivo_redd <> 0 AND (imp_ricavo_previsto_redd IS NULL OR imp_ricavo_previsto_redd = 0);"
    },
    {
        "question": "Elenca le commesse associate solo a inconvenienti di tipo 'Cliente'.",
        "answer": "SELECT id_commessa FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa HAVING MIN(tipo_carico_cliente_inconveniente) = 'Cliente' AND MAX(tipo_carico_cliente_inconveniente) = 'Cliente' AND MAX(ISNULL(tipo_carico_garanzia_inconveniente,'')) = '';"
    },
    {
        "question": "Trova il numero medio di ore lavorate per commessa per ogni accettatore.",
        "answer": "WITH OrePerCommessa AS (SELECT id_commessa, SUM(ore_lavorazione) AS OreTot FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa) SELECT c.accettatore_commessa, AVG(CAST(ISNULL(opc.OreTot, 0) AS FLOAT)) AS MediaOreLavorate FROM [bi].[OFF_commesse] c LEFT JOIN OrePerCommessa opc ON c.id_commessa = opc.id_commessa GROUP BY c.accettatore_commessa;"
    },
    {
        "question": "Qual è il giorno della settimana con la media più alta di ore di permesso?",
        "answer": "SELECT TOP 1 DATENAME(weekday, dt_presenza) AS Giorno, AVG(ore_permessi_presenza) AS MediaOrePermessi FROM [bi].[OFF_presenze] GROUP BY DATENAME(weekday, dt_presenza), DATEPART(weekday, dt_presenza) ORDER BY MediaOrePermessi DESC;"
    },
    {
        "question": "Mostra i noleggi la cui targa veicolo non esiste nella vista veicoli auto.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] n LEFT JOIN [bi].[AUTO_veicoli] av ON n.targa_noleggio = av.targa_veicolo WHERE av.targa_veicolo IS NULL;"
    },
    {
        "question": "Elenca i clienti (descr) che hanno acquistato veicoli con almeno 3 alimentazioni diverse.",
        "answer": "SELECT cli.descr_cliente FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo GROUP BY cli.descr_cliente HAVING COUNT(DISTINCT v.alimentazione_veicolo) >= 3;"
    },
    {
        "question": "Qual è il tempo medio tra la creazione e la chiusura della commessa?",
        "answer": "SELECT AVG(DATEDIFF(day, dt_creazione_commessa, dt_chiusura_commessa)) FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa IS NOT NULL AND dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Trova i contratti auto associati a veicoli che hanno avuto almeno un noleggio.",
        "answer": "SELECT DISTINCT ac.nr_contratto FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo WHERE av.targa_veicolo IN (SELECT DISTINCT targa_noleggio FROM [bi].[OFF_noleggi]);"
    },
    {
        "question": "Mostra il ranking dei canali vendita per numero di contratti senza permuta.",
        "answer": "WITH NoPermutaCounts AS ( SELECT id_canale_vendita, COUNT(id_contratto) AS NumNoPermute FROM [bi].[AUTO_contratti] WHERE count_permute_contratto = 0 GROUP BY id_canale_vendita ) SELECT cv.descr_canale_vendita, npc.NumNoPermute, RANK() OVER (ORDER BY npc.NumNoPermute DESC) AS Ranking FROM NoPermutaCounts npc JOIN [bi].[AUTO_canali_vendita] cv ON npc.id_canale_vendita = cv.id_canale_vendita;"
    },
    {
        "question": "Quali sono le commesse che hanno avuto lavorazioni ma nessun inconveniente registrato?",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_commesse] c ON l.id_commessa = c.id_commessa WHERE c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti]);"
    },
    {
        "question": "Elenca i tipi di intervento associati solo a lavorazioni interne (mai lavori terzi).",
        "answer": "SELECT it.descr_tipo_intervento FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_interventi_tipi] it ON l.id_tipo_intervento = it.id_tipo_intervento GROUP BY it.descr_tipo_intervento HAVING MAX(l.gruppo_voce_lavorazione) <> 13;"
    },
    {
        "question": "Mostra il rapporto tra ore di straordinario e ore teoriche per ogni esecutore.",
        "answer": "SELECT e.descr_esecutore, SUM(p.ore_straordinarie_presenza) / NULLIF(SUM(p.ore_teoriche_presenza), 0) AS RapportoStraordinarioTeoriche FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING SUM(p.ore_teoriche_presenza) > 0;"
    },
    {
        "question": "Trova i contatti (ID) associati a veicoli officina ma non a contratti auto.",
        "answer": "SELECT DISTINCT oc.id_cliente_officina FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_clienti] cli ON oc.id_cliente_officina = cli.id_cliente_officina WHERE cli.id_contatto NOT IN (SELECT DISTINCT id_cliente FROM [bi].[AUTO_contratti]);"
    },
    {
        "question": "Qual è il margine consuntivo medio per i contratti aperti nel primo semestre vs secondo semestre?",
        "answer": "SELECT CASE WHEN MONTH(c.dt_apertura_contratto) <= 6 THEN 'Primo Semestre' ELSE 'Secondo Semestre' END AS Semestre, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS MargineMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY CASE WHEN MONTH(c.dt_apertura_contratto) <= 6 THEN 'Primo Semestre' ELSE 'Secondo Semestre' END;"
    },
    {
        "question": "Mostra le commesse il cui valore totale fatturato (righe) è inferiore al costo totale (righe + lavorazioni).",
        "answer": "WITH ValoreFatt AS (SELECT id_commessa, SUM(imp_netto_riga_commessa) AS ValFatt FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa), CostoTot AS (SELECT id_commessa, SUM(Costo) AS CstTot FROM (SELECT id_commessa, ISNULL(imp_netto_costo_commessa,0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0) AS Costo FROM [bi].[OFF_commesse_righe] UNION ALL SELECT id_commessa, ISNULL(costo_lavorazione,0) FROM [bi].[OFF_commesse_lavorazioni]) AS T GROUP BY id_commessa) SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN ValoreFatt vf ON c.id_commessa = vf.id_commessa JOIN CostoTot ct ON c.id_commessa = ct.id_commessa WHERE vf.ValFatt < ct.CstTot;"
    },
    {
        "question": "Elenca i tipi esecutore (riclassificazione) che non hanno mai registrato ore di presenza.",
        "answer": "SELECT riclassificazione_tipo_esecutore FROM [bi].[OFF_esecutori_tipi] WHERE id_tipo_esecutore NOT IN (SELECT DISTINCT id_tipo_esecutore FROM [bi].[OFF_presenze]);"
    },
    {
        "question": "Qual è il numero medio di giorni tra la data di arrivo del veicolo e la data della prima commessa per quel veicolo?",
        "answer": "WITH FirstWorkshop AS ( SELECT v.targa_veicolo_officina, MIN(oc.dt_apertura_commessa) AS PrimaCommessa FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] v ON oc.id_veicolo_officina = v.id_veicolo_officina GROUP BY v.targa_veicolo_officina ) SELECT AVG(DATEDIFF(day, av.dt_arrivo_veicolo, fw.PrimaCommessa)) AS GiorniMediArrivoPrimaCommessa FROM [bi].[AUTO_veicoli] av JOIN FirstWorkshop fw ON av.targa_veicolo = fw.targa_veicolo_officina WHERE av.dt_arrivo_veicolo IS NOT NULL;"
    },
    {
        "question": "Trova i contratti la cui differenza percentuale tra listino e netto è superiore al 25%.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE imp_netto_listino_contratto > 0 AND (imp_netto_listino_contratto - imp_netto_contratto) / imp_netto_listino_contratto > 0.25;"
    },
    {
        "question": "Mostra, per ogni tipo intervento, l'esecutore che ha registrato il costo totale più alto.",
        "answer": "WITH LaborCostRank AS ( SELECT l.id_tipo_intervento, l.id_esecutore, SUM(l.costo_lavorazione) AS TotalCost, ROW_NUMBER() OVER (PARTITION BY l.id_tipo_intervento ORDER BY SUM(l.costo_lavorazione) DESC) as rn FROM [bi].[OFF_commesse_lavorazioni] l GROUP BY l.id_tipo_intervento, l.id_esecutore ) SELECT it.descr_tipo_intervento, e.descr_esecutore, lcr.TotalCost FROM LaborCostRank lcr JOIN [bi].[OFF_interventi_tipi] it ON lcr.id_tipo_intervento = it.id_tipo_intervento JOIN [bi].[OFF_esecutori] e ON lcr.id_esecutore = e.id_esecutore WHERE lcr.rn = 1;"
    },
    {
        "question": "Quali articoli (codice) sono stati usati in più di 10 commesse diverse?",
        "answer": "SELECT codice_articolo_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL GROUP BY codice_articolo_commessa HAVING COUNT(DISTINCT id_commessa) > 10;"
    },
    {
        "question": "Elenca le commesse chiuse in cui il costo manodopera è superiore al costo ricambi.",
        "answer": "WITH Costi AS ( SELECT c.id_commessa, SUM(CASE WHEN r.gruppo_voce_commessa = 5 THEN r.imp_netto_costo_commessa ELSE 0 END) AS CostoRicambi, SUM(CASE WHEN l.gruppo_voce_lavorazione = 12 THEN l.costo_lavorazione ELSE 0 END) AS CostoManodopera FROM [bi].[OFF_commesse] c LEFT JOIN [bi].[OFF_commesse_righe] r ON c.id_commessa = r.id_commessa LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON c.id_commessa = l.id_commessa WHERE c.dt_chiusura_commessa IS NOT NULL GROUP BY c.id_commessa ) SELECT co.nr_commessa FROM Costi c JOIN [bi].[OFF_commesse] co ON c.id_commessa = co.id_commessa WHERE c.CostoManodopera > c.CostoRicambi;"
    },
    {
        "question": "Trova i tecnici (codice esecutore) che hanno registrato ore di presenza ma non ore lavorate nell'ultimo mese.",
        "answer": "SELECT DISTINCT p.id_esecutore FROM [bi].[OFF_presenze] p WHERE p.dt_presenza >= DATEADD(month, -1, GETDATE()) AND p.ore_presenza > 0 AND p.id_esecutore NOT IN (SELECT DISTINCT id_esecutore FROM [bi].[OFF_commesse_lavorazioni] WHERE dt_movimento_lavorazione >= DATEADD(month, -1, GETDATE()));"
    },
    {
        "question": "Qual è la durata media dei noleggi per tipo di affidamento?",
        "answer": "SELECT descr_tipo_affidamento_noleggio, AVG(DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio)) AS DurataMedia FROM [bi].[OFF_noleggi] WHERE dt_ritiro_noleggio IS NOT NULL AND dt_consegna_noleggio IS NOT NULL GROUP BY descr_tipo_affidamento_noleggio;"
    },
    {
        "question": "Mostra i contatti con CAP di Milano (201xx) ma provincia diversa da MI.",
        "answer": "SELECT id_contatto, ragione_sociale_contatto, cap_contatto, provincia_contatto FROM [bi].[CONTT_contatti] WHERE cap_contatto LIKE '201%' AND provincia_contatto <> 'MI';"
    },
    {
        "question": "Calcola il valore cumulativo dei contratti chiusi per ogni sede.",
        "answer": "WITH ClosedSales AS ( SELECT id_sede, dt_chiusura_contratto, imp_netto_contratto FROM [bi].[AUTO_contratti] WHERE status_contratto = 'Chiuso' AND dt_chiusura_contratto IS NOT NULL ) SELECT s.descr_sede, cs.dt_chiusura_contratto, SUM(cs.imp_netto_contratto) OVER (PARTITION BY cs.id_sede ORDER BY cs.dt_chiusura_contratto) AS ValoreCumulativo FROM ClosedSales cs JOIN [bi].[AUTO_sedi] s ON cs.id_sede = s.id_sede ORDER BY s.descr_sede, cs.dt_chiusura_contratto;"
    },
    {
        "question": "Quali sono i 3 clienti (descr) con il maggior numero di veicoli diversi portati in officina?",
        "answer": "SELECT TOP 3 cli.descr_cliente_officina, COUNT(DISTINCT c.id_veicolo_officina) AS NumVeicoliDiversi FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_clienti] cli ON c.id_cliente_officina = cli.id_cliente_officina GROUP BY cli.descr_cliente_officina ORDER BY NumVeicoliDiversi DESC;"
    },
    {
        "question": "Mostra il ranking dei tipi commessa per numero medio di inconvenienti.",
        "answer": "WITH AvgIncidents AS ( SELECT c.id_tipo_commessa, AVG(CAST(ISNULL(NumInc, 0) AS FLOAT)) AS MediaInc FROM [bi].[OFF_commesse] c LEFT JOIN (SELECT id_commessa, COUNT(*) AS NumInc FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa) i ON c.id_commessa = i.id_commessa GROUP BY c.id_tipo_commessa ) SELECT ct.descr_tipo_commessa, ai.MediaInc, RANK() OVER (ORDER BY ai.MediaInc DESC) AS Ranking FROM AvgIncidents ai JOIN [bi].[OFF_commesse_tipi] ct ON ai.id_tipo_commessa = ct.id_tipo_commessa;"
    },
    {
        "question": "Elenca i venditori che hanno venduto auto a clienti che poi hanno avuto commesse con costo totale > 1000 euro.",
        "answer": "WITH HighCostCommesse AS ( SELECT oc.id_cliente_officina FROM [bi].[OFF_commesse] oc JOIN (SELECT id_commessa, SUM(ISNULL(Costo,0)) AS CstTot FROM (SELECT id_commessa, ISNULL(imp_netto_costo_commessa,0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0) AS Costo FROM [bi].[OFF_commesse_righe] UNION ALL SELECT id_commessa, ISNULL(costo_lavorazione,0) FROM [bi].[OFF_commesse_lavorazioni]) AS T GROUP BY id_commessa) AS Costi ON oc.id_commessa = Costi.id_commessa GROUP BY oc.id_cliente_officina HAVING SUM(Costi.CstTot) > 1000 ) SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_venditori] v ON ac.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE cli.id_contatto IN (SELECT id_cliente_officina FROM HighCostCommesse);"
    },
    {
        "question": "Calcola la percentuale di ore lavorate rispetto alle ore teoriche per ogni mese.",
        "answer": "WITH MonthlyHours AS ( SELECT YEAR(p.dt_presenza) AS Anno, MONTH(p.dt_presenza) AS Mese, SUM(ISNULL(p.ore_teoriche_presenza, 0)) AS OreTeoriche, SUM(ISNULL(l.ore_lavorazione, 0)) AS OreLavorate FROM [bi].[OFF_presenze] p LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON p.id_esecutore = l.id_esecutore AND p.dt_presenza = CONVERT(date, l.dt_movimento_lavorazione) GROUP BY YEAR(p.dt_presenza), MONTH(p.dt_presenza) ) SELECT Anno, Mese, OreLavorate * 100.0 / NULLIF(OreTeoriche, 0) AS PercLavorateSuTeoriche FROM MonthlyHours ORDER BY Anno, Mese;"
    },
    {
        "question": "Mostra, per ogni sede, l'andamento mensile del numero di contratti aperti quest'anno.",
        "answer": "SELECT s.descr_sede, YEAR(c.dt_apertura_contratto) AS Anno, MONTH(c.dt_apertura_contratto) AS Mese, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_sedi] s ON c.id_sede = s.id_sede WHERE YEAR(c.dt_apertura_contratto) = YEAR(GETDATE()) GROUP BY s.descr_sede, YEAR(c.dt_apertura_contratto), MONTH(c.dt_apertura_contratto) ORDER BY s.descr_sede, Anno, Mese;"
    },
    {
        "question": "Quali sono i 3 tipi di contratto con la maggior varianza (deviazione standard) nell'importo netto?",
        "answer": "SELECT TOP 3 ct.descr_tipo_contratto, STDEV(c.imp_netto_contratto) AS StDevImporto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_tipi] ct ON c.id_tipo_contratto = ct.id_tipo_contratto GROUP BY ct.descr_tipo_contratto ORDER BY StDevImporto DESC;"
    },
    {
        "question": "Elenca i veicoli (targa) venduti ma la cui data di immatricolazione è successiva alla data di apertura contratto.",
        "answer": "SELECT v.targa_veicolo FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.status_contratto = 'Chiuso' AND v.dt_immatricolazione_veicolo > c.dt_apertura_contratto;"
    },
    {
        "question": "Quanti clienti hanno acquistato veicoli di una sola marca?",
        "answer": "SELECT COUNT(id_cliente) FROM (SELECT c.id_cliente FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo GROUP BY c.id_cliente HAVING COUNT(DISTINCT v.marca_veicolo) = 1) AS SingleBrandCustomers;"
    },
    {
        "question": "Qual è il rapporto tra valore finanziato e valore di listino medio per i contratti con entrambi i valori > 0?",
        "answer": "SELECT AVG(imp_netto_finanziato_contratto / NULLIF(imp_netto_listino_contratto, 0)) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND imp_netto_listino_contratto > 0;"
    },
    {
        "question": "Trova i contratti con garanzia interna 'Estesa' venduti dal gruppo venditori 'Top'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore WHERE c.garanzia_interna_contratto = 'Estesa' AND v.gruppo_venditori = 'Top';"
    },
    {
        "question": "Quali sono le descrizioni complete dei veicoli (officina) associati a commesse chiuse in ritardo?",
        "answer": "SELECT DISTINCT v.descr_veicolo_completa_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE c.dt_chiusura_commessa > c.dt_previsione_consegna_commessa;"
    },
    {
        "question": "Mostra il numero di commesse aperte per mese nell'ultimo anno.",
        "answer": "SELECT FORMAT(dt_apertura_commessa, 'yyyy-MM') AS AnnoMese, COUNT(id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] WHERE dt_apertura_commessa >= DATEADD(year, -1, GETDATE()) GROUP BY FORMAT(dt_apertura_commessa, 'yyyy-MM') ORDER BY AnnoMese;"
    },
    {
        "question": "Qual è la provenienza (gruppo) con il maggior numero di contratti senza permuta?",
        "answer": "SELECT TOP 1 p.gruppo_provenienza, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] AS c JOIN [bi].[AUTO_provenienze] AS p ON c.id_provenienza = p.id_provenienza WHERE c.count_permute_contratto = 0 GROUP BY p.gruppo_provenienza ORDER BY NumContratti DESC;"
    },
    {
        "question": "Elenca i clienti (descr) con contratti in almeno 3 aree diverse.",
        "answer": "SELECT cli.descr_cliente FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente GROUP BY cli.descr_cliente HAVING COUNT(DISTINCT c.id_area) >= 3;"
    },
    {
        "question": "Qual è il costo previsto medio per i contratti che hanno generato provvigioni?",
        "answer": "SELECT AVG(r.imp_costo_previsto_redd) FROM [bi].[AUTO_contratti_redd] r WHERE r.imp_netto_provvigione_redd > 0;"
    },
    {
        "question": "Mostra i tipi di costo/ricavo (descr) che non hanno mai avuto valori negativi a consuntivo.",
        "answer": "SELECT descr_tipo_costo_ricavo_redd FROM [bi].[AUTO_contratti_redd] GROUP BY descr_tipo_costo_ricavo_redd HAVING MIN(ISNULL(imp_costo_consuntivo_redd, 0)) >= 0 AND MIN(ISNULL(imp_ricavo_consuntivo_redd, 0)) >= 0;"
    },
    {
        "question": "Quali sono i 5 codici spesa/costo con la maggior differenza assoluta tra previsto e consuntivo?",
        "answer": "SELECT TOP 5 codice_spesa_costo_redd, SUM(ABS( (ISNULL(imp_ricavo_consuntivo_redd,0)+ISNULL(imp_costo_consuntivo_redd,0)) - (ISNULL(imp_ricavo_previsto_redd,0)+ISNULL(imp_costo_previsto_redd,0)) )) AS DiffAbsTot FROM [bi].[AUTO_contratti_redd] GROUP BY codice_spesa_costo_redd ORDER BY DiffAbsTot DESC;"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il margine previsto dal venditore era positivo ma quello consuntivo è negativo.",
        "answer": "WITH Margins AS ( SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_previsto_venditore_redd, 0) - ISNULL(imp_costo_previsto_venditore_redd, 0)) AS MarginePrevVend, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS MargineCons FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd ) SELECT id_contratto_redd FROM Margins WHERE MarginePrevVend > 0 AND MargineCons < 0;"
    },
    {
        "question": "Trova il numero medio di giorni tra la data di creazione commessa e la data veicolo pronto.",
        "answer": "SELECT AVG(DATEDIFF(day, dt_creazione_commessa, dt_veicolo_pronto_commessa)) FROM [bi].[OFF_commesse] WHERE dt_creazione_commessa IS NOT NULL AND dt_veicolo_pronto_commessa IS NOT NULL;"
    },
    {
        "question": "Quali riclassificazioni di tipo commessa esistono?",
        "answer": "SELECT DISTINCT riclassificazione_tipo_commessa FROM [bi].[OFF_commesse_tipi] WHERE riclassificazione_tipo_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse con data consegna effettiva nel mese corrente.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_effettiva_consegna_commessa >= DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) AND dt_effettiva_consegna_commessa < DATEADD(month, DATEDIFF(month, 0, GETDATE()) + 1, 0);"
    },
    {
        "question": "Quanti inconvenienti di gruppo 'Motore' sono stati caricati in garanzia?",
        "answer": "SELECT COUNT(id_inconveniente) FROM [bi].[OFF_commesse_inconvenienti] WHERE gruppo_inconveniente = 'Motore' AND tipo_carico_garanzia_inconveniente IS NOT NULL AND tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Elenca i tipi di intervento (gruppo) associati a commesse aperte da più di 90 giorni.",
        "answer": "SELECT DISTINCT it.gruppo_intervento_tipo FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa JOIN [bi].[OFF_interventi_tipi] it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE c.dt_chiusura_commessa IS NULL AND DATEDIFF(day, c.dt_apertura_commessa, GETDATE()) > 90;"
    },
    {
        "question": "Qual è il costo medio ponderato massimo registrato in una riga commessa?",
        "answer": "SELECT MAX(imp_netto_costo_medio_ponderato_commessa) FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Trova le commesse che hanno righe con costo lavori terzi ma nessuna lavorazione interna.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa WHERE r.imp_netto_costo_lavori_terzi_commessa > 0 AND c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_lavorazioni] WHERE gruppo_voce_lavorazione <> 13);"
    },
    {
        "question": "Mostra il rapporto tra ore lavorate e ore fatturate medie per ogni tipo di intervento.",
        "answer": "SELECT it.descr_tipo_intervento, AVG(l.ore_lavorazione / NULLIF(l.ore_fatturate_lavorazione, 0)) AS RapportoLavFatt FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_interventi_tipi] it ON l.id_tipo_intervento = it.id_tipo_intervento WHERE l.ore_fatturate_lavorazione > 0 GROUP BY it.descr_tipo_intervento;"
    },
    {
        "question": "Quali esecutori hanno una media di ore straordinarie superiore a 1 ora al giorno (considerando i giorni di presenza)?",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.ore_presenza > 0 GROUP BY e.descr_esecutore HAVING AVG(p.ore_straordinarie_presenza) > 1;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) che hanno avuto noleggi associati a commesse di tipo 'Incidente'.",
        "answer": "SELECT DISTINCT n.id_contatto FROM [bi].[OFF_noleggi] n JOIN [bi].[OFF_commesse] c ON n.id_commessa = c.id_commessa JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa = 'Incidente';"
    },
    {
        "question": "Qual è la percentuale di contatti (clienti auto) che hanno anche avuto commesse in officina?",
        "answer": "SELECT CAST(COUNT(DISTINCT CASE WHEN oc.id_cliente_officina IS NOT NULL THEN cli.id_cliente ELSE NULL END) AS FLOAT) * 100 / COUNT(DISTINCT cli.id_cliente) FROM [bi].[AUTO_clienti] cli LEFT JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina;"
    },
    {
        "question": "Mostra il ranking delle marche veicolo (officina) per numero totale di ore lavorate.",
        "answer": "WITH MarcaLabor AS ( SELECT v.descr_marca_veicolo_officina, SUM(l.ore_lavorazione) AS OreTotali FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_commesse] c ON l.id_commessa = c.id_commessa JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina GROUP BY v.descr_marca_veicolo_officina ) SELECT descr_marca_veicolo_officina, OreTotali, RANK() OVER (ORDER BY OreTotali DESC) AS Ranking FROM MarcaLabor;"
    },
    {
        "question": "Elenca le 5 voci (descrizione) con il maggior tempo fatturato totale.",
        "answer": "SELECT TOP 5 v.descr_voce, SUM(r.tempo_fatt_commessa) AS TempoTotFatt FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE r.codice_umis_commessa = 'H' GROUP BY v.descr_voce ORDER BY TempoTotFatt DESC;"
    },
    {
        "question": "Quali contratti (ID Redd) hanno un costo previsto venditore specificato?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_venditore_redd IS NOT NULL AND imp_costo_previsto_venditore_redd <> 0;"
    },
    {
        "question": "Mostra le commesse che hanno inconvenienti ma nessun costo registrato (né righe né lavorazioni).",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse_inconvenienti] i JOIN [bi].[OFF_commesse] c ON i.id_commessa = c.id_commessa WHERE c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_commessa > 0) AND c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_lavorazione > 0);"
    },
    {
        "question": "Trova il rapporto tra ore lavorate e ore a tempario medio per qualifica esecutore.",
        "answer": "SELECT e.qualifica_esecutore, AVG(l.ore_lavorazione / NULLIF(l.ore_tempario_lavorazione, 0)) AS RapportoOreLavTemp FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore WHERE l.ore_tempario_lavorazione > 0 GROUP BY e.qualifica_esecutore;"
    },
    {
        "question": "Qual è la media mensile delle ore di ferie utilizzate nell'anno corrente?",
        "answer": "SELECT AVG(OreFerieMensili) FROM ( SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, SUM(ore_ferie_presenza) AS OreFerieMensili FROM [bi].[OFF_presenze] WHERE YEAR(dt_presenza) = YEAR(GETDATE()) GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ) AS Ferie;"
    },
    {
        "question": "Mostra i noleggi per cui il numero di km percorsi (consegna-ritiro) è superiore a 1000.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio, km_consegna_noleggio - km_ritiro_noleggio AS KmPercorsi FROM [bi].[OFF_noleggi] WHERE km_consegna_noleggio IS NOT NULL AND km_ritiro_noleggio IS NOT NULL AND (km_consegna_noleggio - km_ritiro_noleggio) > 1000;"
    },
    {
        "question": "Elenca i clienti (descr) che hanno acquistato auto e avuto commesse, ma solo in sedi/officine diverse.",
        "answer": "WITH SediAuto AS (SELECT id_cliente, id_sede FROM [bi].[AUTO_contratti]), SediOfficina AS (SELECT id_cliente_officina, id_officina FROM [bi].[OFF_commesse]) SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_clienti] cli JOIN SediAuto sa ON cli.id_cliente = sa.id_cliente JOIN SediOfficina so ON cli.id_contatto = so.id_cliente_officina WHERE sa.id_sede <> so.id_officina; -- Assumendo che id_sede e id_officina siano comparabili o linkabili"
    },
    {
        "question": "Qual è il tempo massimo tra la data di apertura e la data di chiusura di un contratto?",
        "answer": "SELECT MAX(DATEDIFF(day, dt_apertura_contratto, dt_chiusura_contratto)) FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto IS NOT NULL;"
    },
    {
        "question": "Trova i contratti auto associati a veicoli che hanno richiesto interventi in garanzia in officina.",
        "answer": "SELECT DISTINCT ac.nr_contratto FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_veicoli] av ON ac.id_veicolo = av.id_veicolo JOIN [bi].[OFF_veicoli] ov ON av.targa_veicolo = ov.targa_veicolo_officina JOIN [bi].[OFF_commesse] oc ON ov.id_veicolo_officina = oc.id_veicolo_officina JOIN [bi].[OFF_commesse_inconvenienti] i ON oc.id_commessa = i.id_commessa WHERE i.tipo_carico_garanzia_inconveniente IS NOT NULL AND i.tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Mostra il ranking dei canali di vendita per valore medio permuta.",
        "answer": "WITH PermutaValue AS ( SELECT id_canale_vendita, AVG(imp_netto_permute_contratto) AS AvgPermuta FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 0 GROUP BY id_canale_vendita ) SELECT cv.descr_canale_vendita, pv.AvgPermuta, RANK() OVER (ORDER BY pv.AvgPermuta DESC) AS Ranking FROM PermutaValue pv JOIN [bi].[AUTO_canali_vendita] cv ON pv.id_canale_vendita = cv.id_canale_vendita;"
    },
    {
        "question": "Quali commesse hanno avuto un costo totale (righe+lavorazioni) nullo o zero?",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] c WHERE c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_commessa <> 0 OR imp_netto_costo_lavori_terzi_commessa <> 0) AND c.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_lavorazione <> 0);"
    },
    {
        "question": "Elenca i tipi di intervento associati a più di 100 righe di commessa.",
        "answer": "SELECT it.descr_tipo_intervento, COUNT(*) AS NumRighe FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_interventi_tipi] it ON r.id_tipo_intervento = it.id_tipo_intervento GROUP BY it.descr_tipo_intervento HAVING COUNT(*) > 100;"
    },
    {
        "question": "Mostra il rapporto tra ore di permesso e ore di ferie per ogni esecutore.",
        "answer": "SELECT e.descr_esecutore, SUM(p.ore_permessi_presenza) / NULLIF(SUM(p.ore_ferie_presenza), 0) AS RapportoPermessiFerie FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING SUM(p.ore_ferie_presenza) > 0;"
    },
    {
        "question": "Trova i contatti (ID) associati a noleggi ma non a contratti auto.",
        "answer": "SELECT DISTINCT id_contatto FROM [bi].[OFF_noleggi] WHERE id_contatto NOT IN (SELECT DISTINCT id_cliente FROM [bi].[AUTO_contratti]);"
    },
    {
        "question": "Qual è il margine consuntivo medio per i contratti con valore permuta > 10000?",
        "answer": "SELECT AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] r JOIN [bi].[AUTO_contratti] c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.imp_netto_permute_contratto > 10000;"
    },
    {
        "question": "Mostra le commesse la cui durata tra creazione e chiusura supera i 100 giorni.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL AND DATEDIFF(day, dt_creazione_commessa, dt_chiusura_commessa) > 100;"
    },
    {
        "question": "Elenca i tipi esecutore (riclassificazione) che hanno registrato ore non produttive.",
        "answer": "SELECT DISTINCT et.riclassificazione_tipo_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori_tipi] et ON p.id_tipo_esecutore = et.id_tipo_esecutore WHERE p.ore_nonprod_presenza > 0;"
    },
    {
        "question": "Qual è il numero medio di inconvenienti per commesse di tipo 'Tagliando'?",
        "answer": "WITH IncPerComm AS ( SELECT id_commessa, COUNT(*) AS NumInc FROM [bi].[OFF_commesse_inconvenienti] GROUP BY id_commessa ) SELECT AVG(CAST(ISNULL(ipc.NumInc, 0) AS FLOAT)) FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa LEFT JOIN IncPerComm ipc ON c.id_commessa = ipc.id_commessa WHERE ct.descr_tipo_commessa = 'Tagliando';"
    },
    {
        "question": "Trova i contratti dove la somma del valore netto e delle permute supera il valore di listino.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE (imp_netto_contratto + ISNULL(imp_netto_permute_contratto, 0)) > imp_netto_listino_contratto;"
    },
    {
        "question": "Mostra il costo totale (righe + lavorazioni) per ogni tipo di intervento.",
        "answer": "WITH CostiIntervento AS ( SELECT id_tipo_intervento, SUM(ISNULL(imp_netto_costo_commessa, 0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0)) AS CostoRighe FROM [bi].[OFF_commesse_righe] GROUP BY id_tipo_intervento UNION ALL SELECT id_tipo_intervento, SUM(ISNULL(costo_lavorazione,0)) AS CostoLav FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_tipo_intervento ) SELECT it.descr_tipo_intervento, SUM(CostoRighe) AS CostoTotale FROM CostiIntervento ci JOIN [bi].[OFF_interventi_tipi] it ON ci.id_tipo_intervento = it.id_tipo_intervento GROUP BY it.descr_tipo_intervento;"
    },
    {
        "question": "Quali articoli (codice) hanno un prezzo unitario medio superiore a 100 euro?",
        "answer": "SELECT codice_articolo_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL GROUP BY codice_articolo_commessa HAVING AVG(imp_netto_prezzo_unitario_commessa) > 100;"
    },
    {
        "question": "Mostra il ranking dei clienti per differenza tra valore massimo e minimo del contratto.",
        "answer": "WITH CustomerContractRange AS (SELECT id_cliente, MAX(imp_netto_contratto) - MIN(imp_netto_contratto) AS ValRange FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(id_contratto) > 1) SELECT cli.descr_cliente, ccr.ValRange, RANK() OVER (ORDER BY ccr.ValRange DESC) AS Ranking FROM CustomerContractRange ccr JOIN [bi].[AUTO_clienti] cli ON ccr.id_cliente = cli.id_cliente;"
    },
    {
        "question": "Per ogni sede, mostra il numero di contratti aperti nel mese corrente rispetto al totale dell'anno corrente.",
        "answer": "WITH MonthlySales AS (SELECT id_sede, CASE WHEN MONTH(dt_apertura_contratto) = MONTH(GETDATE()) THEN 1 ELSE 0 END AS CurrentMonth, 1 AS TotalCurrentYear FROM [bi].[AUTO_contratti] WHERE YEAR(dt_apertura_contratto) = YEAR(GETDATE())) SELECT s.descr_sede, SUM(CurrentMonth) AS ContrattiMeseCorrente, SUM(TotalCurrentYear) AS ContrattiAnnoCorrente FROM MonthlySales ms JOIN [bi].[AUTO_sedi] s ON ms.id_sede = s.id_sede GROUP BY s.descr_sede;"
    },
    {
        "question": "Elenca i 3 gruppi canale vendita con il minor rapporto finanziati/totale contratti.",
        "answer": "SELECT TOP 3 cv.gruppo_canale_vendita, CAST(SUM(CASE WHEN c.has_finanziamento_contratto = 1 THEN 1 ELSE 0 END) AS FLOAT) / COUNT(c.id_contratto) AS RapportoFinanziati FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY cv.gruppo_canale_vendita ORDER BY RapportoFinanziati ASC;"
    },
    {
        "question": "Quali veicoli (targa) hanno avuto commesse aperte in più di un anno diverso?",
        "answer": "SELECT v.targa_veicolo_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina GROUP BY v.targa_veicolo_officina HAVING COUNT(DISTINCT YEAR(c.dt_apertura_commessa)) > 1;"
    },
    {
        "question": "Mostra il numero di contratti per provenienza (descr) e per status (aperto/chiuso).",
        "answer": "SELECT p.descr_provenienza, c.status_contratto, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_provenienze] p ON c.id_provenienza = p.id_provenienza GROUP BY p.descr_provenienza, c.status_contratto ORDER BY p.descr_provenienza, c.status_contratto;"
    },
    {
        "question": "Qual è il ricavo consuntivo medio per i contratti con garanzia interna?",
        "answer": "SELECT AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] r JOIN [bi].[AUTO_contratti] c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.codice_garanzia_interna_contratto <> 'ND';"
    },
    {
        "question": "Elenca le commesse chiuse la cui durata (giorni) è nel quartile più basso.",
        "answer": "WITH DurationRank AS (SELECT nr_commessa, DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa) AS Durata, NTILE(4) OVER (ORDER BY DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa) ASC) AS Quartile FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL) SELECT nr_commessa, Durata FROM DurationRank WHERE Quartile = 1;"
    },
    {
        "question": "Mostra la percentuale di ore di presenza rispetto alle ore teoriche per ogni esecutore.",
        "answer": "SELECT e.descr_esecutore, SUM(p.ore_presenza) * 100.0 / NULLIF(SUM(p.ore_teoriche_presenza), 0) AS PercPresenzaSuTeoriche FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.ore_teoriche_presenza > 0 GROUP BY e.descr_esecutore;"
    },
    {
        "question": "Quali sono i 5 codici articolo più frequentemente usati in righe non omaggio?",
        "answer": "SELECT TOP 5 codice_articolo_commessa, COUNT(*) AS Frequenza FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 0 AND codice_articolo_commessa IS NOT NULL GROUP BY codice_articolo_commessa ORDER BY Frequenza DESC;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con margine previsto tra -500 e 500 euro.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd HAVING SUM(ISNULL(imp_ricavo_previsto_redd, 0) - ISNULL(imp_costo_previsto_redd, 0)) BETWEEN -500 AND 500;"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni eseguite da tecnici con qualifica 'Specializzato'?",
        "answer": "SELECT AVG(l.costo_lavorazione) FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore WHERE e.qualifica_esecutore = 'Specializzato';"
    },
    {
        "question": "Mostra i noleggi con km percorsi al giorno ( (consegna-ritiro) / durata ) superiori a 200.",
        "answer": "SELECT id_riga_noleggio, targa_noleggio FROM [bi].[OFF_noleggi] WHERE dt_consegna_noleggio IS NOT NULL AND dt_ritiro_noleggio IS NOT NULL AND DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio) > 0 AND (km_consegna_noleggio - km_ritiro_noleggio) / DATEDIFF(day, dt_ritiro_noleggio, dt_consegna_noleggio) > 200;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) che hanno avuto solo commesse in garanzia (cliente o costruttore).",
        "answer": "SELECT oc.id_cliente_officina FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_commesse_inconvenienti] i ON oc.id_commessa = i.id_commessa GROUP BY oc.id_cliente_officina HAVING MIN(CASE WHEN i.tipo_carico_cliente_inconveniente = 'Cliente' THEN 1 ELSE 0 END) = 0 AND MAX(ISNULL(i.tipo_carico_garanzia_inconveniente,'')) <> '';"
    },
    {
        "question": "Quanti contatti per ogni provincia che non sia 'MI' o 'TO'?",
        "answer": "SELECT provincia_contatto, COUNT(*) AS NumContatti FROM [bi].[CONTT_contatti] WHERE provincia_contatto NOT IN ('MI', 'TO') GROUP BY provincia_contatto;"
    },
    {
        "question": "Qual è la variazione media del valore contratto tra contratti consecutivi dello stesso cliente?",
        "answer": "WITH ContractLagValue AS ( SELECT id_cliente, imp_netto_contratto, LAG(imp_netto_contratto, 1) OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto) AS PrevValue FROM [bi].[AUTO_contratti] ) SELECT AVG(clv.imp_netto_contratto - clv.PrevValue) AS DiffMediaValore FROM ContractLagValue clv WHERE clv.PrevValue IS NOT NULL;"
    },
    {
        "question": "Trova le commesse in cui il costo totale è superiore al valore medio delle commesse dello stesso tipo.",
        "answer": "WITH CostoCommessa AS ( SELECT id_commessa, id_tipo_commessa, SUM(ISNULL(Costo,0)) AS CstTot FROM [bi].[OFF_commesse] oc LEFT JOIN (SELECT id_commessa, ISNULL(imp_netto_costo_commessa,0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0) AS Costo FROM [bi].[OFF_commesse_righe] UNION ALL SELECT id_commessa, ISNULL(costo_lavorazione,0) FROM [bi].[OFF_commesse_lavorazioni]) AS T ON oc.id_commessa = T.id_commessa GROUP BY id_commessa, id_tipo_commessa ), AvgCostoTipo AS ( SELECT id_tipo_commessa, AVG(CstTot) AS AvgCst FROM CostoCommessa GROUP BY id_tipo_commessa ) SELECT c.nr_commessa FROM CostoCommessa cc JOIN [bi].[OFF_commesse] c ON cc.id_commessa = c.id_commessa JOIN AvgCostoTipo act ON cc.id_tipo_commessa = act.id_tipo_commessa WHERE cc.CstTot > act.AvgCst;"
    },
    {
        "question": "Mostra il ranking dei venditori per valore medio di permuta.",
        "answer": "WITH SellerPermutaAvg AS ( SELECT id_venditore, AVG(imp_netto_permute_contratto) AS AvgPermuta FROM [bi].[AUTO_contratti] WHERE count_permute_contratto > 0 GROUP BY id_venditore ) SELECT v.descr_venditore, spa.AvgPermuta, RANK() OVER (ORDER BY spa.AvgPermuta DESC) AS Ranking FROM SellerPermutaAvg spa JOIN [bi].[AUTO_venditori] v ON spa.id_venditore = v.id_venditore;"
    },
    {
        "question": "Qual è il rapporto tra ore di straordinario e ore totali lavorate (lavorazioni) per ogni esecutore?",
        "answer": "WITH HoursData AS ( SELECT l.id_esecutore, SUM(l.ore_lavorazione) AS OreLavorate, SUM(ISNULL(p.ore_straordinarie_presenza, 0)) AS OreStraordinario FROM [bi].[OFF_commesse_lavorazioni] l LEFT JOIN [bi].[OFF_presenze] p ON l.id_esecutore = p.id_esecutore AND CONVERT(date, l.dt_movimento_lavorazione) = p.dt_presenza GROUP BY l.id_esecutore ) SELECT e.descr_esecutore, hd.OreStraordinario / NULLIF(hd.OreLavorate, 0) AS RapportoStraordinarioLavorate FROM HoursData hd JOIN [bi].[OFF_esecutori] e ON hd.id_esecutore = e.id_esecutore WHERE hd.OreLavorate > 0;"
    },
    {
        "question": "Elenca i tipi di intervento (riclassificazione) che non hanno mai avuto costi associati (né righe né lavorazioni).",
        "answer": "SELECT riclassificazione_intervento_tipo FROM [bi].[OFF_interventi_tipi] WHERE id_tipo_intervento NOT IN (SELECT DISTINCT id_tipo_intervento FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_commessa > 0) AND id_tipo_intervento NOT IN (SELECT DISTINCT id_tipo_intervento FROM [bi].[OFF_commesse_lavorazioni] WHERE costo_lavorazione > 0);"
    },
    {
        "question": "Trova i contratti (ID Redd) con ricavo previsto venditore nullo.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_venditore_redd IS NULL;"
    },
    {
        "question": "Qual è la differenza massima tra data chiusura e data consegna effettiva commessa?",
        "answer": "SELECT MAX(DATEDIFF(day, dt_effettiva_consegna_commessa, dt_chiusura_commessa)) FROM [bi].[OFF_commesse] WHERE dt_effettiva_consegna_commessa IS NOT NULL AND dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse con almeno un inconveniente e almeno una riga omaggio.",
        "answer": "SELECT DISTINCT i.id_commessa FROM [bi].[OFF_commesse_inconvenienti] i JOIN [bi].[OFF_commesse_righe] r ON i.id_commessa = r.id_commessa WHERE r.is_omaggio_commessa = 1;"
    },
    {
        "question": "Quanti tipi di voce (riclassificazione) esistono?",
        "answer": "SELECT COUNT(DISTINCT riclassificazione_voce) FROM [bi].[OFF_voci] WHERE riclassificazione_voce IS NOT NULL;"
    },
    {
        "question": "Qual è il costo medio ponderato medio per articolo?",
        "answer": "SELECT codice_articolo_commessa, AVG(imp_netto_costo_medio_ponderato_commessa) AS CostoMedioPond FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL GROUP BY codice_articolo_commessa;"
    },
    {
        "question": "Trova le lavorazioni la cui quota fatturato è esattamente uguale al costo lavorazione.",
        "answer": "SELECT id_commessa, progressivo_riga_lavorazione FROM [bi].[OFF_commesse_lavorazioni] WHERE quota_fatturato_lavorazione = costo_lavorazione;"
    },
    {
        "question": "Qual è la percentuale di giorni con presenza > 0 rispetto ai giorni totali nell'ultimo anno per l'esecutore 'Mario Rossi'?",
        "answer": "WITH PresenceDays AS (SELECT COUNT(DISTINCT dt_presenza) AS DaysPresent FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE e.descr_esecutore = 'Mario Rossi' AND p.dt_presenza >= DATEADD(year, -1, GETDATE()) AND p.ore_presenza > 0) SELECT CAST(DaysPresent AS FLOAT) * 100 / 365.0 FROM PresenceDays; -- Semplificato, ignora anni bisestili / periodo esatto"
    },
    {
        "question": "Mostra i noleggi chiusi associati a commesse ancora aperte.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] n JOIN [bi].[OFF_commesse] c ON n.id_commessa = c.id_commessa WHERE n.dt_chiusura_noleggio IS NOT NULL AND c.dt_chiusura_commessa IS NULL;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) che hanno acquistato veicoli solo tramite canale 'Web'.",
        "answer": "SELECT c.id_cliente FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY c.id_cliente HAVING MIN(cv.descr_canale_vendita) = 'Web' AND MAX(cv.descr_canale_vendita) = 'Web';"
    },
    {
        "question": "Qual è il ranking dei veicoli (targa) per numero di giorni totali trascorsi in officina (somma durata commesse)?",
        "answer": "WITH WorkshopDays AS ( SELECT v.targa_veicolo_officina, SUM(DATEDIFF(day, c.dt_apertura_commessa, c.dt_chiusura_commessa)) AS TotalDays FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE c.dt_chiusura_commessa IS NOT NULL GROUP BY v.targa_veicolo_officina ) SELECT targa_veicolo_officina, TotalDays, RANK() OVER (ORDER BY TotalDays DESC) AS Ranking FROM WorkshopDays;"
    },
    {
        "question": "Trova i contratti il cui margine consuntivo è superiore al margine previsto dal venditore.",
        "answer": "WITH Margins AS ( SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_previsto_venditore_redd, 0) - ISNULL(imp_costo_previsto_venditore_redd, 0)) AS MarginePrevVend, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS MargineCons FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd ) SELECT id_contratto_redd FROM Margins WHERE MargineCons > MarginePrevVend;"
    },
    {
        "question": "Mostra il numero di commesse per ogni riclassificazione di tipo commessa.",
        "answer": "SELECT ct.riclassificazione_tipo_commessa, COUNT(c.id_commessa) AS NumCommesse FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa GROUP BY ct.riclassificazione_tipo_commessa;"
    },
    {
        "question": "Quali accettatori hanno gestito commesse con inconvenienti di gruppo 'Elettronico'?",
        "answer": "SELECT DISTINCT c.accettatore_commessa FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_inconvenienti] i ON c.id_commessa = i.id_commessa WHERE i.gruppo_inconveniente = 'Elettronico';"
    },
    {
        "question": "Elenca le righe commessa il cui costo è superiore al prezzo di listino.",
        "answer": "SELECT id_commessa, nr_riga_commessa FROM [bi].[OFF_commesse_righe] WHERE imp_netto_costo_commessa > imp_netto_prezzo_listino_commessa;"
    },
    {
        "question": "Qual è il rapporto medio tra ore tempario e ore fatturate?",
        "answer": "SELECT AVG(ore_tempario_lavorazione / NULLIF(ore_fatturate_lavorazione, 0)) FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_fatturate_lavorazione > 0;"
    },
    {
        "question": "Trova le date in cui le ore di permesso totali sono state superiori alle ore di ferie totali.",
        "answer": "SELECT dt_presenza FROM [bi].[OFF_presenze] GROUP BY dt_presenza HAVING SUM(ore_permessi_presenza) > SUM(ore_ferie_presenza);"
    },
    {
        "question": "Mostra i contatti con tipo soggetto 'PF' ma con partita IVA specificata.",
        "answer": "SELECT id_contatto, nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE tipo_soggetto_contatto = 'PF' AND partita_iva_contatto IS NOT NULL AND partita_iva_contatto <> '';"
    },
    {
        "question": "Qual è il margine consuntivo medio per canale di vendita e tipo veicolo (nuovo/usato)?",
        "answer": "SELECT cv.descr_canale_vendita, v.nuovo_usato_veicolo, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS MargineMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY cv.descr_canale_vendita, v.nuovo_usato_veicolo;"
    },
    {
        "question": "Elenca le officine ordinate per numero medio di righe per commessa.",
        "answer": "WITH RighePerCommessa AS ( SELECT c.id_officina, COUNT(r.nr_riga_commessa) AS NumRighe FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_righe] r ON c.id_commessa = r.id_commessa GROUP BY c.id_officina, c.id_commessa ) SELECT o.descr_officina, AVG(CAST(rpc.NumRighe AS FLOAT)) AS MediaRighe FROM RighePerCommessa rpc JOIN [bi].[OFF_officine] o ON rpc.id_officina = o.id_officina GROUP BY o.descr_officina ORDER BY MediaRighe DESC;"
    },
    {
        "question": "Quali articoli (codice) sono stati usati in commesse per clienti del gruppo 'Flotte'?",
        "answer": "SELECT DISTINCT r.codice_articolo_commessa FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa JOIN [bi].[OFF_clienti] cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.gruppo_cliente_officina = 'Flotte' AND r.codice_articolo_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra la differenza tra ore lavorate e ore di presenza per ogni esecutore (media giornaliera).",
        "answer": "WITH DailyDiff AS ( SELECT p.id_esecutore, p.dt_presenza, p.ore_presenza - ISNULL(l.OreLav, 0) AS DiffPresLav FROM [bi].[OFF_presenze] p LEFT JOIN (SELECT id_esecutore, CONVERT(date, dt_movimento_lavorazione) AS Giorno, SUM(ore_lavorazione) AS OreLav FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_esecutore, CONVERT(date, dt_movimento_lavorazione)) l ON p.id_esecutore = l.id_esecutore AND p.dt_presenza = l.Giorno ) SELECT e.descr_esecutore, AVG(dd.DiffPresLav) AS MediaDiffGiornaliera FROM DailyDiff dd JOIN [bi].[OFF_esecutori] e ON dd.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore;"
    },
    {
        "question": "Trova i veicoli (targa) che hanno avuto un noleggio e una commessa iniziati nello stesso giorno.",
        "answer": "SELECT DISTINCT n.targa_noleggio FROM [bi].[OFF_noleggi] n JOIN [bi].[OFF_commesse] c ON n.id_commessa = c.id_commessa WHERE CONVERT(date, n.dt_ritiro_noleggio) = CONVERT(date, c.dt_apertura_commessa);"
    },
    {
        "question": "Mostra il numero di contratti aperti per mese e per canale di vendita.",
        "answer": "SELECT YEAR(c.dt_apertura_contratto) AS Anno, MONTH(c.dt_apertura_contratto) AS Mese, cv.descr_canale_vendita, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita GROUP BY YEAR(c.dt_apertura_contratto), MONTH(c.dt_apertura_contratto), cv.descr_canale_vendita ORDER BY Anno, Mese, cv.descr_canale_vendita;"
    },
    {
        "question": "Classifica i clienti (auto) in 5 fasce (quintili) basate sul numero di contratti.",
        "answer": "WITH CustomerContracts AS (SELECT id_cliente, COUNT(id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY id_cliente) SELECT cli.descr_cliente, cc.NumContratti, NTILE(5) OVER (ORDER BY cc.NumContratti DESC) AS QuintileVendite FROM CustomerContracts cc JOIN [bi].[AUTO_clienti] cli ON cc.id_cliente = cli.id_cliente;"
    },
    {
        "question": "Mostra la crescita del valore netto contratto rispetto al contratto precedente, per ogni contratto.",
        "answer": "WITH ContractLagValue AS ( SELECT nr_contratto, dt_apertura_contratto, imp_netto_contratto, LAG(imp_netto_contratto, 1, imp_netto_contratto) OVER (PARTITION BY id_cliente ORDER BY dt_apertura_contratto) AS PrevValue FROM [bi].[AUTO_contratti] ) SELECT nr_contratto, dt_apertura_contratto, imp_netto_contratto - PrevValue AS GrowthFromPrevious FROM ContractLagValue;"
    },
    {
        "question": "Elenca le 3 sedi con il maggior valore medio di permuta.",
        "answer": "SELECT TOP 3 s.descr_sede, AVG(c.imp_netto_permute_contratto) AS MediaPermuta FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_sedi] s ON c.id_sede = s.id_sede WHERE c.count_permute_contratto > 0 GROUP BY s.descr_sede ORDER BY MediaPermuta DESC;"
    },
    {
        "question": "Quali veicoli (telaio) hanno avuto commesse gestite da più di 3 accettatori diversi?",
        "answer": "SELECT c.telaio_commessa FROM [bi].[OFF_commesse] c WHERE c.telaio_commessa IS NOT NULL GROUP BY c.telaio_commessa HAVING COUNT(DISTINCT c.accettatore_commessa) > 3;"
    },
    {
        "question": "Mostra il numero di contratti per gruppo provenienza e tipo veicolo (nuovo/usato).",
        "answer": "SELECT p.gruppo_provenienza, v.nuovo_usato_veicolo, COUNT(c.id_contratto) AS NumContratti FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_provenienze] p ON c.id_provenienza = p.id_provenienza JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo GROUP BY p.gruppo_provenienza, v.nuovo_usato_veicolo ORDER BY p.gruppo_provenienza, v.nuovo_usato_veicolo;"
    },
    {
        "question": "Qual è il ricavo previsto medio per i contratti senza garanzia interna?",
        "answer": "SELECT AVG(ISNULL(r.imp_ricavo_previsto_redd, 0)) FROM [bi].[AUTO_contratti_redd] r JOIN [bi].[AUTO_contratti] c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.codice_garanzia_interna_contratto = 'ND';"
    },
    {
        "question": "Elenca le commesse la cui durata (giorni) è superiore alla media generale delle durate.",
        "answer": "WITH AvgDuration AS (SELECT AVG(CAST(DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa) AS FLOAT)) AS AvgDur FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL) SELECT nr_commessa FROM [bi].[OFF_commesse], AvgDuration WHERE dt_chiusura_commessa IS NOT NULL AND DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa) > AvgDuration.AvgDur;"
    },
    {
        "question": "Mostra il rapporto tra ore non produttive e ore di presenza per ogni tipo esecutore.",
        "answer": "SELECT et.descr_tipo_esecutore, SUM(p.ore_nonprod_presenza) / NULLIF(SUM(p.ore_presenza), 0) AS RapportoNonProdPres FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori_tipi] et ON p.id_tipo_esecutore = et.id_tipo_esecutore GROUP BY et.descr_tipo_esecutore HAVING SUM(p.ore_presenza) > 0;"
    },
    {
        "question": "Quali sono i 5 articoli (codice) con il maggior valore medio fatturato per riga (non omaggio)?",
        "answer": "SELECT TOP 5 codice_articolo_commessa, AVG(imp_netto_riga_commessa) AS ValoreMedio FROM [bi].[OFF_commesse_righe] WHERE is_omaggio_commessa = 0 AND codice_articolo_commessa IS NOT NULL GROUP BY codice_articolo_commessa ORDER BY ValoreMedio DESC;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con provvigioni ma margine consuntivo negativo.",
        "answer": "SELECT r.id_contratto_redd FROM [bi].[AUTO_contratti_redd] r JOIN (SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS Margine FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd) m ON r.id_contratto_redd = m.id_contratto_redd WHERE m.Margine < 0 AND r.imp_netto_provvigione_redd > 0 GROUP BY r.id_contratto_redd;"
    },
    {
        "question": "Qual è il costo medio delle lavorazioni per tipo commessa e per gruppo esecutore?",
        "answer": "SELECT ct.descr_tipo_commessa, e.gruppo_esecutore, AVG(l.costo_lavorazione) AS CostoMedio FROM [bi].[OFF_commesse_lavorazioni] l JOIN [bi].[OFF_commesse_tipi] ct ON l.id_tipo_commessa = ct.id_tipo_commessa JOIN [bi].[OFF_esecutori] e ON l.id_esecutore = e.id_esecutore GROUP BY ct.descr_tipo_commessa, e.gruppo_esecutore;"
    },
    {
        "question": "Mostra i noleggi la cui targa appartiene a veicoli con più di 200.000 km.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] n JOIN [bi].[AUTO_veicoli] v ON n.targa_noleggio = v.targa_veicolo WHERE v.km_percorsi_veicolo > 200000;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) che hanno avuto commesse gestite da almeno 3 accettatori diversi.",
        "answer": "SELECT id_cliente_officina FROM [bi].[OFF_commesse] GROUP BY id_cliente_officina HAVING COUNT(DISTINCT accettatore_commessa) >= 3;"
    },
    {
        "question": "Quanti contatti hanno un CAP che non esiste nell'anagrafica clienti auto?",
        "answer": "SELECT COUNT(DISTINCT co.id_contatto) FROM [bi].[CONTT_contatti] co LEFT JOIN [bi].[AUTO_clienti] cli ON co.cap_contatto = cli.cap_cliente WHERE cli.cap_cliente IS NULL;"
    },
    {
        "question": "Qual è il margine consuntivo medio per i contratti con vs senza assicurazione, per ogni canale vendita?",
        "answer": "SELECT cv.descr_canale_vendita, c.has_assicurazione_contratto, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS MargineMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_canali_vendita] cv ON c.id_canale_vendita = cv.id_canale_vendita JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY cv.descr_canale_vendita, c.has_assicurazione_contratto;"
    },
    {
        "question": "Trova le commesse il cui costo totale (righe+lavorazioni) è superiore al valore del contratto auto associato.",
        "answer": "WITH CostoCommessa AS (SELECT oc.id_commessa, SUM(ISNULL(Costi.Costo,0)) AS CstTot FROM [bi].[OFF_commesse] oc LEFT JOIN (SELECT id_commessa, ISNULL(imp_netto_costo_commessa,0) + ISNULL(imp_netto_costo_lavori_terzi_commessa,0) AS Costo FROM [bi].[OFF_commesse_righe] UNION ALL SELECT id_commessa, ISNULL(costo_lavorazione,0) FROM [bi].[OFF_commesse_lavorazioni]) AS Costi ON oc.id_commessa = Costi.id_commessa GROUP BY oc.id_commessa), CommVehicle AS (SELECT id_commessa, targa_veicolo_officina FROM [bi].[OFF_commesse] oc JOIN [bi].[OFF_veicoli] ov ON oc.id_veicolo_officina = ov.id_veicolo_officina) SELECT cc.id_commessa FROM CostoCommessa cc JOIN CommVehicle cv ON cc.id_commessa = cv.id_commessa JOIN [bi].[AUTO_veicoli] av ON cv.targa_veicolo_officina = av.targa_veicolo JOIN [bi].[AUTO_contratti] ac ON av.id_veicolo = ac.id_veicolo WHERE cc.CstTot > ac.imp_netto_contratto;"
    },
    {
        "question": "Mostra il ranking dei venditori per numero di contratti con permuta.",
        "answer": "SELECT v.descr_venditore, COUNT(c.id_contratto) AS NumPermute, RANK() OVER (ORDER BY COUNT(c.id_contratto) DESC) AS Ranking FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore WHERE c.count_permute_contratto > 0 GROUP BY v.descr_venditore;"
    },
    {
        "question": "Qual è il rapporto tra ore di straordinario e ore di assenza medie per ogni mese?",
        "answer": "SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, AVG(ore_straordinarie_presenza) / NULLIF(AVG(ore_assenza_presenza), 0) AS RapportoStraordinarioAssenza FROM [bi].[OFF_presenze] GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ORDER BY Anno, Mese;"
    },
    {
        "question": "Elenca le riclassificazioni dei tipi di intervento disponibili.",
        "answer": "SELECT DISTINCT riclassificazione_intervento_tipo FROM [bi].[OFF_interventi_tipi] WHERE riclassificazione_intervento_tipo IS NOT NULL;"
    },
    {
        "question": "Trova i contratti (ID Redd) con costo previsto > 0 ma costo consuntivo = 0.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd > 0 AND imp_costo_consuntivo_redd = 0;"
    },
    {
        "question": "Qual è la differenza massima tra data di chiusura commessa e data consegna effettiva?",
        "answer": "SELECT MAX(DATEDIFF(day, dt_effettiva_consegna_commessa, dt_chiusura_commessa)) FROM [bi].[OFF_commesse] WHERE dt_effettiva_consegna_commessa IS NOT NULL AND dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse con inconvenienti di tipo 'Richiamo' associate a veicoli 'Usato'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_inconvenienti] i ON c.id_commessa = i.id_commessa JOIN [bi].[OFF_veicoli] ov ON c.id_veicolo_officina = ov.id_veicolo_officina JOIN [bi].[AUTO_veicoli] av ON ov.targa_veicolo_officina = av.targa_veicolo WHERE i.tipo_inconveniente = 'Richiamo' AND av.nuovo_usato_veicolo = 'Usato';"
    },
    {
        "question": "Quanti tipi di voce (codice) distinti sono associati a righe commessa?",
        "answer": "SELECT COUNT(DISTINCT id_voce) FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Qual è il valore medio fatturato (manodopera + ricambi + altro) per riga?",
        "answer": "SELECT AVG(imp_fattura_manodopera + imp_fattura_ricambi + imp_fatturato_altro) FROM [bi].[OFF_commesse_righe];"
    },
    {
        "question": "Trova le lavorazioni il cui costo orario implicito è nel 10% più alto.",
        "answer": "WITH LaborCostPerHour AS ( SELECT id_commessa, progressivo_riga_lavorazione, costo_lavorazione / NULLIF(ore_lavorazione, 0) AS CostoOrario, NTILE(10) OVER (ORDER BY costo_lavorazione / NULLIF(ore_lavorazione, 0) DESC) AS Decile FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione > 0 ) SELECT id_commessa, progressivo_riga_lavorazione, CostoOrario FROM LaborCostPerHour WHERE Decile = 1;"
    },
    {
        "question": "Qual è la percentuale di giorni lavorativi (presenza > 0) per ogni tecnico rispetto al totale giorni nell'ultimo anno?",
        "answer": "WITH WorkingDays AS ( SELECT id_esecutore, COUNT(DISTINCT dt_presenza) AS DaysWorked FROM [bi].[OFF_presenze] WHERE ore_presenza > 0 AND dt_presenza >= DATEADD(year, -1, GETDATE()) GROUP BY id_esecutore ) SELECT e.descr_esecutore, wd.DaysWorked * 100.0 / 365.0 AS PercWorkingDays FROM WorkingDays wd JOIN [bi].[OFF_esecutori] e ON wd.id_esecutore = e.id_esecutore;"
    },
    {
        "question": "Mostra i noleggi con km extra ma senza costo carburante registrato.",
        "answer": "SELECT id_riga_noleggio FROM [bi].[OFF_noleggi] WHERE km_extra_noleggio > 0 AND (costo_carburante_noleggio IS NULL OR costo_carburante_noleggio = 0);"
    },
    {
        "question": "Elenca i clienti (descr) che hanno avuto contratti auto ma nessun noleggio.",
        "answer": "SELECT DISTINCT cli.descr_cliente FROM [bi].[AUTO_clienti] cli JOIN [bi].[AUTO_contratti] ac ON cli.id_cliente = ac.id_cliente WHERE cli.id_contatto NOT IN (SELECT DISTINCT id_contatto FROM [bi].[OFF_noleggi]);"
    },
    {
        "question": "Qual è il ranking dei tipi veicolo (Nuovo/Usato) per numero di contratti con permuta?",
        "answer": "WITH PermutaRank AS ( SELECT v.nuovo_usato_veicolo, COUNT(c.id_contratto) AS NumPermute FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.count_permute_contratto > 0 GROUP BY v.nuovo_usato_veicolo ) SELECT nuovo_usato_veicolo, NumPermute, RANK() OVER (ORDER BY NumPermute DESC) AS Ranking FROM PermutaRank;"
    },
    {
        "question": "Trova le commesse con costo manodopera superiore alla media del costo manodopera per quella officina.",
        "answer": "WITH AvgLabor AS (SELECT id_officina, AVG(CostoManodopera) AS AvgCost FROM (SELECT l.id_officina, SUM(l.costo_lavorazione) AS CostoManodopera FROM [bi].[OFF_commesse_lavorazioni] l GROUP BY l.id_officina, l.id_commessa) AS CommLabor GROUP BY id_officina), CommLabor AS (SELECT l.id_commessa, l.id_officina, SUM(l.costo_lavorazione) AS CostoManodopera FROM [bi].[OFF_commesse_lavorazioni] l GROUP BY l.id_commessa, l.id_officina) SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN CommLabor cl ON c.id_commessa = cl.id_commessa JOIN AvgLabor al ON cl.id_officina = al.id_officina WHERE cl.CostoManodopera > al.AvgCost;"
    },
    {
        "question": "Mostra la crescita mese su mese del numero di commesse chiuse.",
        "answer": "WITH MonthlyClosed AS ( SELECT EOMONTH(dt_chiusura_commessa) AS MonthEnd, COUNT(id_commessa) AS NumClosed FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL GROUP BY EOMONTH(dt_chiusura_commessa) ), LaggedClosed AS ( SELECT MonthEnd, NumClosed, LAG(NumClosed, 1, 0) OVER (ORDER BY MonthEnd) AS PrevMonthClosed FROM MonthlyClosed ) SELECT MonthEnd, NumClosed, PrevMonthClosed, NumClosed - PrevMonthClosed AS MonthlyGrowth FROM LaggedClosed ORDER BY MonthEnd;"
    },
    {
        "question": "Quali riclassificazioni esecutore esistono?",
        "answer": "SELECT DISTINCT riclassificazione_esecutore FROM [bi].[OFF_esecutori] WHERE riclassificazione_esecutore IS NOT NULL;"
    },
    {
        "question": "Elenca i veicoli (targa) che hanno avuto commesse con tipo 'Incidente' e 'Manutenzione Ordinaria'.",
        "answer": "SELECT v.targa_veicolo_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina JOIN [bi].[OFF_commesse_tipi] ct ON c.id_tipo_commessa = ct.id_tipo_commessa WHERE ct.descr_tipo_commessa IN ('Incidente', 'Manutenzione Ordinaria') GROUP BY v.targa_veicolo_officina HAVING COUNT(DISTINCT ct.descr_tipo_commessa) = 2;"
    },
    {
        "question": "Trova il valore medio del contratto auto per i clienti con almeno una commessa in officina.",
        "answer": "SELECT AVG(ac.imp_netto_contratto) FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente WHERE cli.id_contatto IN (SELECT DISTINCT id_cliente_officina FROM [bi].[OFF_commesse]);"
    },
    {
        "question": "Mostra il numero di giorni trascorsi dall'ultima commessa chiusa per ogni veicolo.",
        "answer": "WITH LastClosed AS ( SELECT id_veicolo_officina, MAX(dt_chiusura_commessa) AS UltimaChiusura FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL GROUP BY id_veicolo_officina ) SELECT v.targa_veicolo_officina, DATEDIFF(day, lc.UltimaChiusura, GETDATE()) AS DaysSinceLastClosed FROM LastClosed lc JOIN [bi].[OFF_veicoli] v ON lc.id_veicolo_officina = v.id_veicolo_officina;"
    },
    {
        "question": "Quali venditori hanno una media contratti superiore alla media generale?",
        "answer": "WITH GlobalAvg AS (SELECT AVG(imp_netto_contratto) AS OverallAvg FROM [bi].[AUTO_contratti]), SellerAvg AS (SELECT id_venditore, AVG(imp_netto_contratto) AS SellerValAvg FROM [bi].[AUTO_contratti] GROUP BY id_venditore) SELECT v.descr_venditore FROM SellerAvg sa JOIN GlobalAvg ga ON sa.SellerValAvg > ga.OverallAvg JOIN [bi].[AUTO_venditori] v ON sa.id_venditore = v.id_venditore;"
    },
    {
        "question": "Elenca le commesse dove il costo dei ricambi è stato maggiore del costo della manodopera.",
        "answer": "WITH Costi AS ( SELECT c.id_commessa, SUM(CASE WHEN r.gruppo_voce_commessa = 5 THEN r.imp_netto_costo_commessa ELSE 0 END) AS CostoRicambi, SUM(CASE WHEN l.gruppo_voce_lavorazione = 12 THEN l.costo_lavorazione ELSE 0 END) AS CostoManodopera FROM [bi].[OFF_commesse] c LEFT JOIN [bi].[OFF_commesse_righe] r ON c.id_commessa = r.id_commessa LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON c.id_commessa = l.id_commessa GROUP BY c.id_commessa ) SELECT co.nr_commessa FROM Costi c JOIN [bi].[OFF_commesse] co ON c.id_commessa = co.id_commessa WHERE c.CostoRicambi > c.CostoManodopera;"
    },
    {
        "question": "Quali tipi di intervento (riclassificazione) hanno il costo medio per riga più elevato?",
        "answer": "SELECT TOP 1 it.riclassificazione_intervento_tipo, AVG(r.imp_netto_costo_commessa) AS CostoMedio FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_interventi_tipi] it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE r.imp_netto_costo_commessa IS NOT NULL GROUP BY it.riclassificazione_intervento_tipo ORDER BY CostoMedio DESC;"
    },
    {
        "question": "Mostra il numero totale di ore (presenza + straordinario) per ogni esecutore nell'ultimo mese.",
        "answer": "SELECT e.descr_esecutore, SUM(p.ore_presenza + p.ore_straordinarie_presenza) AS OreTotali FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore WHERE p.dt_presenza >= DATEADD(month, -1, GETDATE()) GROUP BY e.descr_esecutore;"
    },
    {
        "question": "Trova i contatti (ID) che hanno lo stesso CAP e la stessa provincia ma ragioni sociali diverse.",
        "answer": "SELECT cap_contatto, provincia_contatto, STRING_AGG(ragione_sociale_contatto, ', ') AS RagioniSociali FROM [bi].[CONTT_contatti] WHERE cap_contatto IS NOT NULL AND provincia_contatto IS NOT NULL GROUP BY cap_contatto, provincia_contatto HAVING COUNT(DISTINCT ragione_sociale_contatto) > 1;"
    },
    {
        "question": "Qual è il margine consuntivo cumulativo per ogni tipo contratto?",
        "answer": "WITH Margins AS ( SELECT c.id_tipo_contratto, c.dt_chiusura_contratto, SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS Margin FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd WHERE c.status_contratto = 'Chiuso' AND c.dt_chiusura_contratto IS NOT NULL GROUP BY c.id_tipo_contratto, c.dt_chiusura_contratto ) SELECT ct.descr_tipo_contratto, m.dt_chiusura_contratto, SUM(m.Margin) OVER (PARTITION BY m.id_tipo_contratto ORDER BY m.dt_chiusura_contratto) AS CumulativeMargin FROM Margins m JOIN [bi].[AUTO_contratti_tipi] ct ON m.id_tipo_contratto = ct.id_tipo_contratto ORDER BY ct.descr_tipo_contratto, m.dt_chiusura_contratto;"
    },
    {
        "question": "Elenca i 3 accettatori con il maggior numero medio di righe per commessa.",
        "answer": "WITH RighePerCommessa AS (SELECT id_commessa, COUNT(*) AS NumRighe FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa) SELECT TOP 3 c.accettatore_commessa, AVG(CAST(ISNULL(rpc.NumRighe, 0) AS FLOAT)) AS MediaRighe FROM [bi].[OFF_commesse] c LEFT JOIN RighePerCommessa rpc ON c.id_commessa = rpc.id_commessa GROUP BY c.accettatore_commessa ORDER BY MediaRighe DESC;"
    },
    {
        "question": "Quali articoli (codice) sono stati venduti (presenti in righe commessa) ma non sono presenti nell'anagrafica articoli (se esiste)?",
        "answer": "SELECT DISTINCT codice_articolo_commessa FROM [bi].[OFF_commesse_righe] WHERE codice_articolo_commessa IS NOT NULL AND codice_articolo_commessa NOT IN (SELECT CodiceArticolo FROM ANAG_Articoli); -- Assumendo ANAG_Articoli"
    },
    {
        "question": "Mostra il rapporto tra ore di permesso e ore di ferie per ogni mese.",
        "answer": "SELECT YEAR(dt_presenza) AS Anno, MONTH(dt_presenza) AS Mese, SUM(ore_permessi_presenza) / NULLIF(SUM(ore_ferie_presenza), 0) AS RapportoPermessiFerie FROM [bi].[OFF_presenze] GROUP BY YEAR(dt_presenza), MONTH(dt_presenza) ORDER BY Anno, Mese;"
    },
    {
        "question": "Trova i noleggi associati a veicoli che hanno avuto anche contratti auto con finanziamento.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] n WHERE n.targa_noleggio IN (SELECT v.targa_veicolo FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.has_finanziamento_contratto = 1);"
    },
    {
        "question": "Qual è il ranking dei clienti per differenza tra valore massimo e minimo del contratto?",
        "answer": "WITH CustomerContractRange AS (SELECT id_cliente, MAX(imp_netto_contratto) - MIN(imp_netto_contratto) AS ValRange FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(id_contratto) > 1) SELECT cli.descr_cliente, ccr.ValRange, RANK() OVER (ORDER BY ccr.ValRange DESC) AS Ranking FROM CustomerContractRange ccr JOIN [bi].[AUTO_clienti] cli ON ccr.id_cliente = cli.id_cliente;"
    },
    {
        "question": "Elenca le commesse la cui durata (giorni) è nel quartile più basso.",
        "answer": "WITH DurationRank AS (SELECT nr_commessa, DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa) AS Durata, NTILE(4) OVER (ORDER BY DATEDIFF(day, dt_apertura_commessa, dt_chiusura_commessa) ASC) AS Quartile FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL) SELECT nr_commessa, Durata FROM DurationRank WHERE Quartile = 1;"
    },
    {
        "question": "Qual è la percentuale di giorni lavorativi (presenza > 0) per ogni tecnico rispetto al totale giorni nell'ultimo anno?",
        "answer": "WITH PresenceDays AS (SELECT id_esecutore, COUNT(DISTINCT dt_presenza) AS DaysPresent FROM [bi].[OFF_presenze] p WHERE p.dt_presenza >= DATEADD(year, -1, GETDATE()) AND p.ore_presenza > 0 GROUP BY id_esecutore) SELECT e.descr_esecutore, wd.DaysPresent * 100.0 / 365.0 AS PercWorkingDays FROM PresenceDays wd JOIN [bi].[OFF_esecutori] e ON wd.id_esecutore = e.id_esecutore;"
    },
    {
        "question": "Mostra il ranking dei clienti per valore medio del contratto auto.",
        "answer": "WITH CustomerAvgValue AS (SELECT id_cliente, AVG(imp_netto_contratto) AS AvgValue FROM [bi].[AUTO_contratti] GROUP BY id_cliente) SELECT cli.descr_cliente, cav.AvgValue, DENSE_RANK() OVER (ORDER BY cav.AvgValue DESC) AS Ranking FROM CustomerAvgValue cav JOIN [bi].[AUTO_clienti] cli ON cav.id_cliente = cli.id_cliente;"
    },
    {
        "question": "Quali veicoli (targa) hanno avuto commesse aperte e chiuse nello stesso mese?",
        "answer": "SELECT DISTINCT v.targa_veicolo_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE c.dt_chiusura_commessa IS NOT NULL AND FORMAT(c.dt_apertura_commessa, 'yyyy-MM') = FORMAT(c.dt_chiusura_commessa, 'yyyy-MM');"
    },
    {
        "question": "Elenca i venditori che hanno venduto auto a clienti di più di 3 province diverse.",
        "answer": "SELECT v.descr_venditore FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente JOIN [bi].[CONTT_contatti] co ON cli.id_contatto = co.id_contatto WHERE co.provincia_contatto IS NOT NULL GROUP BY v.descr_venditore HAVING COUNT(DISTINCT co.provincia_contatto) > 3;"
    },
    {
        "question": "Qual è il margine consuntivo medio per i contratti senza assicurazione?",
        "answer": "SELECT AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) FROM [bi].[AUTO_contratti_redd] r JOIN [bi].[AUTO_contratti] c ON r.id_contratto_redd = c.id_contratto_redd WHERE c.has_assicurazione_contratto = 0;"
    },
    {
        "question": "Trova le commesse il cui tempo tra inizio e fine lavori è superiore alla media per quella officina.",
        "answer": "WITH AvgWorkDuration AS (SELECT id_officina, AVG(CAST(DATEDIFF(day, dt_inizio_lavoro_commessa, dt_fine_lavoro_commessa) AS FLOAT)) AS AvgDur FROM [bi].[OFF_commesse] WHERE dt_inizio_lavoro_commessa IS NOT NULL AND dt_fine_lavoro_commessa IS NOT NULL GROUP BY id_officina) SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN AvgWorkDuration awd ON c.id_officina = awd.id_officina WHERE DATEDIFF(day, c.dt_inizio_lavoro_commessa, c.dt_fine_lavoro_commessa) > awd.AvgDur;"
    },
    {
        "question": "Mostra la distribuzione dei contratti per numero di permute (0, 1, 2, 3+).",
        "answer": "SELECT CASE WHEN count_permute_contratto = 0 THEN '0 Permute' WHEN count_permute_contratto = 1 THEN '1 Permuta' WHEN count_permute_contratto = 2 THEN '2 Permute' ELSE '3+ Permute' END AS NumPermuteCat, COUNT(*) AS NumContratti FROM [bi].[AUTO_contratti] GROUP BY CASE WHEN count_permute_contratto = 0 THEN '0 Permute' WHEN count_permute_contratto = 1 THEN '1 Permuta' WHEN count_permute_contratto = 2 THEN '2 Permute' ELSE '3+ Permute' END;"
    },
    {
        "question": "Quali tipi di intervento hanno un costo medio lavori terzi > 0?",
        "answer": "SELECT it.descr_tipo_intervento FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_interventi_tipi] it ON r.id_tipo_intervento = it.id_tipo_intervento WHERE r.imp_netto_costo_lavori_terzi_commessa > 0 GROUP BY it.descr_tipo_intervento;"
    },
    {
        "question": "Elenca gli esecutori che hanno registrato più ore di straordinario che ore di permesso totali.",
        "answer": "SELECT e.descr_esecutore FROM [bi].[OFF_presenze] p JOIN [bi].[OFF_esecutori] e ON p.id_esecutore = e.id_esecutore GROUP BY e.descr_esecutore HAVING SUM(p.ore_straordinarie_presenza) > SUM(p.ore_permessi_presenza);"
    },
    {
        "question": "Trova il rapporto tra il valore totale dei noleggi e il valore totale dei contratti auto.",
        "answer": "SELECT (SELECT SUM(ISNULL(imp_fatt_noleggio, 0)) FROM [bi].[OFF_noleggi]) / NULLIF((SELECT SUM(ISNULL(imp_netto_contratto, 0)) FROM [bi].[AUTO_contratti]), 0) AS RapportoValNoleggiContratti;"
    },
    {
        "question": "Mostra i contatti (nome, cognome) con nome o cognome contenente caratteri speciali (non lettere).",
        "answer": "SELECT nome_contatto, cognome_contatto FROM [bi].[CONTT_contatti] WHERE nome_contatto LIKE '%[^a-zA-Z ]%' OR cognome_contatto LIKE '%[^a-zA-Z ]%';"
    },
    {
        "question": "Qual è la differenza tra il valore dell'ultimo e del primo contratto per ogni cliente?",
        "answer": "WITH FirstLastContract AS ( SELECT id_cliente, MIN(dt_apertura_contratto) AS PrimaData, MAX(dt_apertura_contratto) AS UltimaData FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(id_contratto) > 1 ), ContractValues AS ( SELECT id_cliente, dt_apertura_contratto, imp_netto_contratto FROM [bi].[AUTO_contratti] ) SELECT cli.descr_cliente, cv_last.imp_netto_contratto - cv_first.imp_netto_contratto AS DiffPrimoUltimo FROM FirstLastContract flc JOIN ContractValues cv_first ON flc.id_cliente = cv_first.id_cliente AND flc.PrimaData = cv_first.dt_apertura_contratto JOIN ContractValues cv_last ON flc.id_cliente = cv_last.id_cliente AND flc.UltimaData = cv_last.dt_apertura_contratto JOIN [bi].[AUTO_clienti] cli ON flc.id_cliente = cli.id_cliente;"
    },
    {
        "question": "Elenca le commesse chiuse nel giorno festivo più recente (richiede tabella festività).",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE CONVERT(date, dt_chiusura_commessa) IN (SELECT DataFestivo FROM TabellaFestivita WHERE DataFestivo <= GETDATE()) ORDER BY dt_chiusura_commessa DESC; -- Query ipotetica"
    },
    {
        "question": "Quali venditori hanno venduto veicoli a clienti che hanno avuto commesse in garanzia?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_venditori] v ON ac.id_venditore = v.id_venditore JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[OFF_commesse] oc ON cli.id_contatto = oc.id_cliente_officina JOIN [bi].[OFF_commesse_inconvenienti] i ON oc.id_commessa = i.id_commessa WHERE i.tipo_carico_garanzia_inconveniente IS NOT NULL AND i.tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Mostra il ranking dei tipi veicolo (nuovo/usato) per costo consuntivo medio contratto.",
        "answer": "WITH AvgCostByType AS ( SELECT v.nuovo_usato_veicolo, AVG(ISNULL(r.imp_costo_consuntivo_redd, 0)) AS AvgCost FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY v.nuovo_usato_veicolo ) SELECT nuovo_usato_veicolo, AvgCost, RANK() OVER (ORDER BY AvgCost DESC) AS Ranking FROM AvgCostByType;"
    },
    {
        "question": "Trova le commesse aperte associate a veicoli con meno di 10.000 km.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] ov ON c.id_veicolo_officina = ov.id_veicolo_officina JOIN [bi].[AUTO_veicoli] av ON ov.targa_veicolo_officina = av.targa_veicolo WHERE c.dt_chiusura_commessa IS NULL AND av.km_percorsi_veicolo < 10000;"
    },
    {
        "question": "Qual è la percentuale di ore lavorate sul totale ore (presenza+straordinario) per ogni esecutore?",
        "answer": "WITH HoursData AS ( SELECT p.id_esecutore, SUM(ISNULL(p.ore_presenza, 0) + ISNULL(p.ore_straordinarie_presenza, 0)) AS OreTotPres, SUM(ISNULL(l.ore_lavorazione, 0)) AS OreLavorate FROM [bi].[OFF_presenze] p LEFT JOIN [bi].[OFF_commesse_lavorazioni] l ON p.id_esecutore = l.id_esecutore AND p.dt_presenza = CONVERT(date, l.dt_movimento_lavorazione) GROUP BY p.id_esecutore ) SELECT e.descr_esecutore, hd.OreLavorate * 100.0 / NULLIF(hd.OreTotPres, 0) AS PercLavorateSuPresenza FROM HoursData hd JOIN [bi].[OFF_esecutori] e ON hd.id_esecutore = e.id_esecutore WHERE hd.OreTotPres > 0;"
    },
    {
        "question": "Elenca i tipi di voce (riclassificazione) che compaiono solo in commesse chiuse.",
        "answer": "SELECT DISTINCT v.riclassificazione_voce FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE r.id_commessa IN (SELECT id_commessa FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL) AND v.riclassificazione_voce NOT IN (SELECT DISTINCT v2.riclassificazione_voce FROM [bi].[OFF_commesse_righe] r2 JOIN [bi].[OFF_voci] v2 ON r2.id_voce = v2.id_voce JOIN [bi].[OFF_commesse] c2 ON r2.id_commessa = c2.id_commessa WHERE c2.dt_chiusura_commessa IS NULL);"
    },
    {
        "question": "Mostra la differenza tra il margine consuntivo di un contratto e la media del margine per il suo venditore.",
        "answer": "WITH SellerAvgMargin AS ( SELECT c.id_venditore, AVG(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) AS AvgMargin FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY c.id_venditore ), ContractMargin AS ( SELECT id_contratto_redd, SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) AS ContractM FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd ) SELECT c.nr_contratto, cm.ContractM - sam.AvgMargin AS DiffFromSellerAvg FROM [bi].[AUTO_contratti] c JOIN ContractMargin cm ON c.id_contratto_redd = cm.id_contratto_redd JOIN SellerAvgMargin sam ON c.id_venditore = sam.id_venditore;"
    },
    {
        "question": "Quali sono i 3 tipi di intervento più frequenti nelle commesse con inconvenienti?",
        "answer": "SELECT TOP 3 it.descr_tipo_intervento, COUNT(DISTINCT i.id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] i JOIN [bi].[OFF_interventi_tipi] it ON i.id_tipo_intervento = it.id_tipo_intervento GROUP BY it.descr_tipo_intervento ORDER BY NumInconvenienti DESC;"
    },
    {
        "question": "Elenca i veicoli (targa) che hanno avuto almeno 3 tipi diversi di commesse.",
        "answer": "SELECT v.targa_veicolo_officina FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_veicoli] v ON c.id_veicolo_officina = v.id_veicolo_officina GROUP BY v.targa_veicolo_officina HAVING COUNT(DISTINCT c.id_tipo_commessa) >= 3;"
    },
    {
        "question": "Trova il rapporto tra costo consuntivo totale e ricavo consuntivo totale per ogni livello margine.",
        "answer": "SELECT liv_margine_redd, descr_margine_redd, SUM(imp_costo_consuntivo_redd) / NULLIF(SUM(imp_ricavo_consuntivo_redd), 0) AS RapportoCostoRicavo FROM [bi].[AUTO_contratti_redd] GROUP BY liv_margine_redd, descr_margine_redd;"
    },
    {
        "question": "Mostra le commesse la cui data di fine lavori è NULL ma hanno righe di lavorazione.",
        "answer": "SELECT DISTINCT c.nr_commessa FROM [bi].[OFF_commesse] c JOIN [bi].[OFF_commesse_lavorazioni] l ON c.id_commessa = l.id_commessa WHERE c.dt_fine_lavoro_commessa IS NULL;"
    },
    {
        "question": "Qual è la percentuale di esecutori per ogni gruppo (riclassificazione)?",
        "answer": "SELECT riclassificazione_esecutore, COUNT(id_esecutore) * 100.0 / (SELECT COUNT(*) FROM [bi].[OFF_esecutori]) AS Percentuale FROM [bi].[OFF_esecutori] GROUP BY riclassificazione_esecutore;"
    },
    {
        "question": "Elenca i noleggi associati a veicoli (targa) che hanno anche contratti auto aperti.",
        "answer": "SELECT n.id_riga_noleggio, n.targa_noleggio FROM [bi].[OFF_noleggi] n WHERE n.targa_noleggio IN (SELECT v.targa_veicolo FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE c.status_contratto <> 'Chiuso');"
    },
    {
        "question": "Trova i contatti con lo stesso codice fiscale ma nomi diversi.",
        "answer": "SELECT codice_fiscale_contatto, STRING_AGG(nome_contatto, ', ') AS Nomi FROM [bi].[CONTT_contatti] WHERE codice_fiscale_contatto IS NOT NULL AND tipo_soggetto_contatto = 'PF' GROUP BY codice_fiscale_contatto HAVING COUNT(DISTINCT nome_contatto) > 1;"
    },
    {
        "question": "Qual è il valore medio del contratto per i clienti classificati come 'Top Tier' (se esiste classificazione)?",
        "answer": "SELECT AVG(c.imp_netto_contratto) FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_clienti] cli ON c.id_cliente = cli.id_cliente WHERE cli.classificazione_cliente = 'Top Tier'; -- Assumendo campo classificazione_cliente"
    },
    {
        "question": "Mostra il numero di commesse aperte da più di X giorni (es. 30) per ogni accettatore.",
        "answer": "SELECT accettatore_commessa, COUNT(id_commessa) AS NumCommesseAperteLunghe FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NULL AND DATEDIFF(day, dt_apertura_commessa, GETDATE()) > 30 GROUP BY accettatore_commessa;"
    },
    {
        "question": "Elenca i 5 articoli (descr) con il maggior valore totale in righe commessa.",
        "answer": "SELECT TOP 5 v.descr_voce, SUM(r.imp_netto_riga_commessa) AS ValoreTotale FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_voci] v ON r.id_voce = v.id_voce WHERE r.gruppo_voce_commessa = 5 GROUP BY v.descr_voce ORDER BY ValoreTotale DESC; -- Assumendo 5 = Ricambi"
    },
    {
        "question": "Quali contratti (ID Redd) hanno un costo previsto ma nessun costo previsto venditore?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_costo_previsto_redd > 0 AND (imp_costo_previsto_venditore_redd IS NULL OR imp_costo_previsto_venditore_redd = 0);"
    },
    {
        "question": "Trova le commesse che hanno avuto inconvenienti ma nessun lavoro esterno associato.",
        "answer": "SELECT DISTINCT i.id_commessa FROM [bi].[OFF_commesse_inconvenienti] i WHERE i.id_commessa NOT IN (SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_lavorazioni] WHERE gruppo_voce_lavorazione = 13);"
    },
    {
        "question": "Mostra il tempo medio (giorni) tra lavorazioni consecutive sulla stessa commessa.",
        "answer": "WITH LaborLag AS (SELECT id_commessa, dt_movimento_lavorazione, LAG(dt_movimento_lavorazione, 1) OVER (PARTITION BY id_commessa ORDER BY dt_movimento_lavorazione) AS PrevLaborDate FROM [bi].[OFF_commesse_lavorazioni]) SELECT AVG(CAST(DATEDIFF(day, PrevLaborDate, dt_movimento_lavorazione) AS FLOAT)) FROM LaborLag WHERE PrevLaborDate IS NOT NULL;"
    },
    {
        "question": "Qual è il rapporto tra ore di permesso e ore teoriche per gli accettatori?",
        "answer": "SELECT SUM(ore_permessi_presenza) / NULLIF(SUM(ore_teoriche_presenza), 0) FROM [bi].[OFF_presenze] WHERE accettatore_presenza = 1 AND ore_teoriche_presenza > 0;"
    },
    {
        "question": "Elenca i veicoli (targa) che hanno avuto noleggi con costo carburante > 50 euro.",
        "answer": "SELECT DISTINCT targa_noleggio FROM [bi].[OFF_noleggi] WHERE costo_carburante_noleggio > 50;"
    },
    {
        "question": "Trova i clienti (ID Contatto) che hanno acquistato auto ma non hanno un indirizzo email valido.",
        "answer": "SELECT DISTINCT cli.id_contatto FROM [bi].[AUTO_contratti] ac JOIN [bi].[AUTO_clienti] cli ON ac.id_cliente = cli.id_cliente JOIN [bi].[CONTT_contatti] co ON cli.id_contatto = co.id_contatto WHERE co.email_contatto IS NULL OR co.email_contatto NOT LIKE '%@%.%';"
    },
    {
        "question": "Qual è il ranking delle provenienze veicolo per valore medio contratto?",
        "answer": "WITH ProvAvgValue AS ( SELECT p.id_provenienza, AVG(c.imp_netto_contratto) AS AvgValue FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_provenienze] p ON c.id_provenienza = p.id_provenienza GROUP BY p.id_provenienza ) SELECT p.descr_provenienza, pav.AvgValue, RANK() OVER (ORDER BY pav.AvgValue DESC) AS Ranking FROM ProvAvgValue pav JOIN [bi].[AUTO_provenienze] p ON pav.id_provenienza = p.id_provenienza;"
    },
    {
        "question": "Mostra le commesse per cui la somma dei costi delle righe è zero.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] c LEFT JOIN (SELECT id_commessa, SUM(ISNULL(imp_netto_costo_commessa, 0)) AS TotCosto FROM [bi].[OFF_commesse_righe] GROUP BY id_commessa) r ON c.id_commessa = r.id_commessa WHERE ISNULL(r.TotCosto, 0) = 0;"
    },
    {
        "question": "Elenca i 5 venditori con la maggior differenza media tra listino e netto contratto.",
        "answer": "SELECT TOP 5 v.descr_venditore, AVG(c.imp_netto_listino_contratto - c.imp_netto_contratto) AS ScontoMedio FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore WHERE c.imp_netto_listino_contratto > 0 GROUP BY v.descr_venditore ORDER BY ScontoMedio DESC;"
    },
    {
        "question": "Quali tipi intervento hanno una durata media lavori (somma ore lavorazione / num commesse) superiore a 8 ore?",
        "answer": "WITH AvgLaborHours AS ( SELECT id_tipo_intervento, SUM(ore_lavorazione) / COUNT(DISTINCT id_commessa) AS AvgHours FROM [bi].[OFF_commesse_lavorazioni] WHERE ore_lavorazione > 0 GROUP BY id_tipo_intervento ) SELECT it.descr_tipo_intervento FROM AvgLaborHours alh JOIN [bi].[OFF_interventi_tipi] it ON alh.id_tipo_intervento = it.id_tipo_intervento WHERE alh.AvgHours > 8;"
    },
    {
        "question": "Trova i giorni in cui il numero di ore di assenza è stato superiore al numero di ore di permesso.",
        "answer": "SELECT dt_presenza FROM [bi].[OFF_presenze] GROUP BY dt_presenza HAVING SUM(ore_assenza_presenza) > SUM(ore_permessi_presenza);"
    },
    {
        "question": "Mostra i contatti il cui CAP non è lungo 5 caratteri.",
        "answer": "SELECT id_contatto, cap_contatto FROM [bi].[CONTT_contatti] WHERE LEN(cap_contatto) <> 5;"
    },
    {
        "question": "Calcola, per ogni venditore, la percentuale di contratti con margine consuntivo positivo.",
        "answer": "WITH SellerMarginSign AS ( SELECT c.id_venditore, CASE WHEN SUM(ISNULL(r.imp_ricavo_consuntivo_redd, 0) - ISNULL(r.imp_costo_consuntivo_redd, 0)) > 0 THEN 1 ELSE 0 END AS PositiveMargin FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_redd] r ON c.id_contratto_redd = r.id_contratto_redd GROUP BY c.id_venditore, c.id_contratto ) SELECT v.descr_venditore, CAST(SUM(sms.PositiveMargin) AS FLOAT) * 100 / COUNT(sms.id_venditore) AS PercPositiveMargin FROM SellerMarginSign sms JOIN [bi].[AUTO_venditori] v ON sms.id_venditore = v.id_venditore GROUP BY v.descr_venditore;"
    },
    {
        "question": "Elenca le commesse con più di 5 tipi di voce diversi utilizzati.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa GROUP BY c.nr_commessa HAVING COUNT(DISTINCT r.id_voce) > 5;"
    },
    {
        "question": "Qual è il tempo medio tra la prima e l'ultima commessa per i veicoli con più di una commessa?",
        "answer": "WITH FirstLastComm AS ( SELECT id_veicolo_officina, MIN(dt_apertura_commessa) AS PrimaData, MAX(dt_apertura_commessa) AS UltimaData FROM [bi].[OFF_commesse] GROUP BY id_veicolo_officina HAVING COUNT(id_commessa) > 1 ) SELECT AVG(CAST(DATEDIFF(day, PrimaData, UltimaData) AS FLOAT)) FROM FirstLastComm;"
    },
    {
        "question": "Quali sono i primi 5 contratti per differenza percentuale positiva tra valore netto e valore di listino?",
        "answer": "SELECT TOP 5 nr_contratto, (imp_netto_contratto - imp_netto_listino_contratto) * 100.0 / imp_netto_listino_contratto AS PercDiff FROM [bi].[AUTO_contratti] WHERE imp_netto_listino_contratto > 0 AND imp_netto_contratto > imp_netto_listino_contratto ORDER BY PercDiff DESC;"
    },
    {
        "question": "Mostra, per ogni veicolo, il numero di giorni trascorsi tra l'immatricolazione e la data di acquisto.",
        "answer": "SELECT targa_veicolo, DATEDIFF(day, dt_immatricolazione_veicolo, dt_acquisto_veicolo) AS GiorniImmatricolazioneAcquisto FROM [bi].[AUTO_veicoli] WHERE dt_immatricolazione_veicolo IS NOT NULL AND dt_acquisto_veicolo IS NOT NULL;"
    },
    {
        "question": "Elenca i tipi di contratto (gruppo) che hanno almeno un contratto associato con 0 permute.",
        "answer": "SELECT DISTINCT ct.gruppo_tipo_contratto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contratti_tipi] ct ON c.id_tipo_contratto = ct.id_tipo_contratto WHERE c.count_permute_contratto = 0;"
    },
    {
        "question": "Quanti veicoli distinti (ID Gestionale) sono associati a contratti per l'azienda 'Autoteam 9'?",
        "answer": "SELECT COUNT(DISTINCT v.id_gesionale_veicolo) FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo JOIN [bi].[AUTO_aziende] a ON v.id_azienda = a.id_azienda WHERE a.descr_azienda = 'Autoteam 9';"
    },
    {
        "question": "Qual è il valore totale finanziato per i contratti con assicurazione ma senza permuta?",
        "answer": "SELECT SUM(imp_netto_finanziato_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 1 AND has_assicurazione_contratto = 1 AND count_permute_contratto = 0;"
    },
    {
        "question": "Trova i contratti con garanzia interna specificata e valore contratto superiore a 50000.",
        "answer": "SELECT nr_contratto, garanzia_interna_contratto FROM [bi].[AUTO_contratti] WHERE codice_garanzia_interna_contratto <> 'ND' AND imp_netto_contratto > 50000;"
    },
    {
        "question": "Quali venditori hanno venduto veicoli la cui destinazione alla vendita è 'Privato'?",
        "answer": "SELECT DISTINCT v.descr_venditore FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore JOIN [bi].[AUTO_veicoli] ve ON c.id_veicolo = ve.id_veicolo WHERE ve.destinazione_alla_vendita_veicolo = 'Privato';"
    },
    {
        "question": "Mostra i contratti chiusi il 1° del mese.",
        "answer": "SELECT nr_contratto, dt_chiusura_contratto FROM [bi].[AUTO_contratti] WHERE DAY(dt_chiusura_contratto) = 1;"
    },
    {
        "question": "Qual è la provenienza (descrizione) con il minor valore medio di permuta?",
        "answer": "SELECT TOP 1 p.descr_provenienza, AVG(c.imp_netto_permute_contratto) AS MediaPermuta FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_provenienze] p ON c.id_provenienza = p.id_provenienza WHERE c.count_permute_contratto > 0 GROUP BY p.descr_provenienza ORDER BY MediaPermuta ASC;"
    },
    {
        "question": "Elenca le sedi (ID) associate a contratti aperti dal venditore 'VEND002'.",
        "answer": "SELECT DISTINCT c.id_sede FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_venditori] v ON c.id_venditore = v.id_venditore WHERE v.codice_venditore = 'VEND002' AND c.status_contratto <> 'Chiuso';"
    },
    {
        "question": "Qual è l'importo netto minimo per i contratti senza finanziamento?",
        "answer": "SELECT MIN(imp_netto_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 0;"
    },
    {
        "question": "Mostra i contratti relativi a veicoli la cui ubicazione al ritiro contiene 'Porto'.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE v.ubicazione_al_ritiro_veicolo LIKE '%Porto%';"
    },
    {
        "question": "Quali tipi di contatto (codice) sono associati a contratti con permuta?",
        "answer": "SELECT DISTINCT tc.codice_tipo_contatto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_contatti_tipi] tc ON c.id_tipo_contatto = tc.id_tipo_contatto WHERE c.count_permute_contratto > 0;"
    },
    {
        "question": "Trova i contratti relativi a veicoli con codice fornitore NULL.",
        "answer": "SELECT c.nr_contratto FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_veicoli] v ON c.id_veicolo = v.id_veicolo WHERE v.codice_fornitore_veicolo IS NULL;"
    },
    {
        "question": "Elenca le aree (descrizione) associate a contratti con importo netto inferiore a 10000.",
        "answer": "SELECT DISTINCT ar.descr_area FROM [bi].[AUTO_contratti] c JOIN [bi].[AUTO_aree] ar ON c.id_area = ar.id_area WHERE c.imp_netto_contratto < 10000;"
    },
    {
        "question": "Qual è il valore massimo di permuta registrato per un contratto senza finanziamento?",
        "answer": "SELECT MAX(imp_netto_permute_contratto) FROM [bi].[AUTO_contratti] WHERE has_finanziamento_contratto = 0 AND count_permute_contratto > 0;"
    },
    {
        "question": "Mostra i veicoli (targa) il cui ID contratto ritiro inizia per 'CR_'.",
        "answer": "SELECT targa_veicolo FROM [bi].[AUTO_veicoli] WHERE id_contratto_ritiro_veicolo LIKE 'CR_%';"
    },
    {
        "question": "Quali aziende (descrizione) hanno solo contratti senza permuta?",
        "answer": "SELECT a.descr_azienda FROM [bi].[AUTO_aziende] a JOIN [bi].[AUTO_veicoli] v ON a.id_azienda = v.id_azienda JOIN [bi].[AUTO_contratti] c ON v.id_veicolo = c.id_veicolo GROUP BY a.descr_azienda HAVING MAX(c.count_permute_contratto) = 0;"
    },
    {
        "question": "Trova i contratti la cui apertura e chiusura avvengono in trimestri diversi dello stesso anno.",
        "answer": "SELECT nr_contratto FROM [bi].[AUTO_contratti] WHERE dt_chiusura_contratto IS NOT NULL AND YEAR(dt_apertura_contratto) = YEAR(dt_chiusura_contratto) AND DATEPART(quarter, dt_apertura_contratto) <> DATEPART(quarter, dt_chiusura_contratto);"
    },
    {
        "question": "Elenca i clienti (ID Cliente) che hanno contratti gestiti da almeno 3 venditori diversi.",
        "answer": "SELECT id_cliente FROM [bi].[AUTO_contratti] GROUP BY id_cliente HAVING COUNT(DISTINCT id_venditore) >= 3;"
    },
    {
        "question": "Qual è il ricavo previsto medio per tipo totale (nella vista redditività)?",
        "answer": "SELECT tipo_totale_redd, AVG(imp_ricavo_previsto_redd) AS MediaRicavoPrev FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_previsto_redd IS NOT NULL GROUP BY tipo_totale_redd;"
    },
    {
        "question": "Mostra i contratti (ID Redd) con ricavo consuntivo diverso dal ricavo previsto.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_ricavo_consuntivo_redd <> imp_ricavo_previsto_redd;"
    },
    {
        "question": "Quali descrizioni di costo/spesa sono associate a un indice contabile spesa nullo?",
        "answer": "SELECT DISTINCT COALESCE(descr_costo_redd, descr_spesa_redd) FROM [bi].[AUTO_contratti_redd] WHERE idx_contabile_spesa_redd IS NULL;"
    },
    {
        "question": "Elenca i contratti (ID Redd) con provvigioni superiori a 1000 euro.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE imp_netto_provvigione_redd > 1000;"
    },
    {
        "question": "Trova i contratti (ID Redd) associati a ricavi di tipo 'Vendita Auto'.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_tipo_costo_ricavo_redd = 'Vendita Auto';"
    },
    {
        "question": "Qual è la somma dei costi consuntivi per il livello margine 'Margine Industriale'?",
        "answer": "SELECT SUM(imp_costo_consuntivo_redd) FROM [bi].[AUTO_contratti_redd] WHERE descr_margine_redd = 'Margine Industriale';"
    },
    {
        "question": "Mostra i codici spesa/costo che non hanno descrizione associata.",
        "answer": "SELECT DISTINCT codice_spesa_costo_redd FROM [bi].[AUTO_contratti_redd] WHERE (descr_costo_redd IS NULL OR descr_costo_redd = '') AND (descr_spesa_redd IS NULL OR descr_spesa_redd = '');"
    },
    {
        "question": "Quali contratti (ID Redd) hanno una descrizione riga nulla o vuota?",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] WHERE descr_riga_redd IS NULL OR descr_riga_redd = '';"
    },
    {
        "question": "Trova il costo previsto massimo registrato.",
        "answer": "SELECT MAX(imp_costo_previsto_redd) FROM [bi].[AUTO_contratti_redd];"
    },
    {
        "question": "Elenca i contratti (ID Redd) dove il margine consuntivo è esattamente zero.",
        "answer": "SELECT id_contratto_redd FROM [bi].[AUTO_contratti_redd] GROUP BY id_contratto_redd HAVING SUM(ISNULL(imp_ricavo_consuntivo_redd, 0) - ISNULL(imp_costo_consuntivo_redd, 0)) = 0;"
    },
    {
        "question": "Qual è la commessa con il minor tempo trascorso tra apertura e inizio lavori?",
        "answer": "SELECT TOP 1 nr_commessa, DATEDIFF(day, dt_apertura_commessa, dt_inizio_lavoro_commessa) AS AttesaInizio FROM [bi].[OFF_commesse] WHERE dt_apertura_commessa IS NOT NULL AND dt_inizio_lavoro_commessa IS NOT NULL ORDER BY AttesaInizio ASC;"
    },
    {
        "question": "Mostra le commesse associate a clienti officina la cui riclassificazione è 'VIP'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_clienti] AS cli ON c.id_cliente_officina = cli.id_cliente_officina WHERE cli.riclassificazione_cliente_officina = 'VIP';"
    },
    {
        "question": "Quanti veicoli unici (per targa) sono stati gestiti per ogni tipo commessa?",
        "answer": "SELECT ct.descr_tipo_commessa, COUNT(DISTINCT v.targa_veicolo_officina) AS VeicoliUnici FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_commesse_tipi] AS ct ON c.id_tipo_commessa = ct.id_tipo_commessa JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina GROUP BY ct.descr_tipo_commessa;"
    },
    {
        "question": "Elenca le commesse con data veicolo pronto uguale alla data di chiusura.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_veicolo_pronto_commessa = dt_chiusura_commessa;"
    },
    {
        "question": "Trova le commesse con codice ODL che finisce con 'X'.",
        "answer": "SELECT nr_commessa, codice_odl_commessa FROM [bi].[OFF_commesse] WHERE codice_odl_commessa LIKE '%X';"
    },
    {
        "question": "Qual è il valore totale delle spese rifiuti per le commesse chiuse?",
        "answer": "SELECT SUM(imp_netto_spese_rifiuti_commessa) FROM [bi].[OFF_commesse] WHERE dt_chiusura_commessa IS NOT NULL;"
    },
    {
        "question": "Mostra le commesse per veicoli il cui modello è 'Classe A'.",
        "answer": "SELECT c.nr_commessa FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.descr_modello_veicolo_officina = 'Classe A';"
    },
    {
        "question": "Quante commesse aperte e quante chiuse ci sono per l'accettatore 'Francesca Verdi'?",
        "answer": "SELECT status, COUNT(*) AS NumCommesse FROM (SELECT CASE WHEN dt_chiusura_commessa IS NULL THEN 'Aperta' ELSE 'Chiusa' END AS status FROM [bi].[OFF_commesse] WHERE accettatore_commessa = 'Francesca Verdi') AS Commesse GROUP BY status;"
    },
    {
        "question": "Elenca le officine che hanno gestito commesse per veicoli con targa estera (non italiana).",
        "answer": "SELECT DISTINCT o.descr_officina FROM [bi].[OFF_commesse] AS c JOIN [bi].[OFF_officine] AS o ON c.id_officina = o.id_officina JOIN [bi].[OFF_veicoli] AS v ON c.id_veicolo_officina = v.id_veicolo_officina WHERE v.targa_veicolo_officina NOT LIKE '[A-Z][A-Z][0-9][0-9][0-9][A-Z][A-Z]';"
    },
    {
        "question": "Trova le commesse la cui data di consegna effettiva è la stessa della data di creazione.",
        "answer": "SELECT nr_commessa FROM [bi].[OFF_commesse] WHERE dt_effettiva_consegna_commessa = dt_creazione_commessa;"
    },
    {
        "question": "Elenca gli ID delle commesse con inconvenienti di tipo 'Meccanico' o 'Elettronico'.",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente IN ('Meccanico', 'Elettronico');"
    },
    {
        "question": "Quali gruppi di intervento esistono?",
        "answer": "SELECT DISTINCT gruppo_intervento_tipo FROM [bi].[OFF_interventi_tipi] WHERE gruppo_intervento_tipo IS NOT NULL;"
    },
    {
        "question": "Mostra gli inconvenienti (ID) con tipo carico garanzia specificato.",
        "answer": "SELECT id_inconveniente FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_carico_garanzia_inconveniente IS NOT NULL AND tipo_carico_garanzia_inconveniente <> '';"
    },
    {
        "question": "Quanti inconvenienti per ogni tipo (breve descrizione)?",
        "answer": "SELECT descr_breve_inconveniente, COUNT(id_inconveniente) AS NumInconvenienti FROM [bi].[OFF_commesse_inconvenienti] WHERE descr_breve_inconveniente <> '-' GROUP BY descr_breve_inconveniente ORDER BY NumInconvenienti DESC;"
    },
    {
        "question": "Trova gli ID commessa con almeno un inconveniente 'Urgente' (se esiste nel tipo/descr).",
        "answer": "SELECT DISTINCT id_commessa FROM [bi].[OFF_commesse_inconvenienti] WHERE tipo_inconveniente LIKE '%Urgente%' OR descr_inconveniente LIKE '%Urgente%';"
    },
    {
        "question": "Qual è il valore totale delle righe (importo netto) per la commessa 'COM4321'?",
        "answer": "SELECT SUM(imp_netto_riga_commessa) FROM [bi].[OFF_commesse_righe] r JOIN [bi].[OFF_commesse] c ON r.id_commessa = c.id_commessa WHERE c.nr_commessa = 'COM4321';"
    },
    {
        "question": "Qual è il tempo medio (in giorni) tra la data di apertura commessa e la prima lavorazione registrata?",
        "answer": "WITH FirstLabor AS ( SELECT id_commessa, MIN(dt_movimento_lavorazione) AS PrimaLavorazione FROM [bi].[OFF_commesse_lavorazioni] GROUP BY id_commessa ) SELECT AVG(DATEDIFF(day, c.dt_apertura_commessa, fl.PrimaLavorazione)) AS GiorniMediPrimaLavorazione FROM [bi].[OFF_commesse] c JOIN FirstLabor fl ON c.id_commessa = fl.id_commessa WHERE c.dt_apertura_contratto IS NOT NULL;"
    },
    {
        "question": "Elenca i clienti (ID Contatto) che hanno avuto solo commesse in garanzia (cliente o costruttore).",
        "answer": "SELECT oc.id_cliente_officina FROM [bi].[OFF_commesse] oc LEFT JOIN [bi].[OFF_commesse_inconvenienti] i ON oc.id_commessa = i.id_commessa GROUP BY oc.id_cliente_officina HAVING COUNT(CASE WHEN i.tipo_carico_cliente_inconveniente = 'Cliente' THEN 1 END) = 0 AND COUNT(CASE WHEN i.tipo_carico_garanzia_inconveniente IS NOT NULL AND i.tipo_carico_garanzia_inconveniente <> '' THEN 1 END) > 0;"
    }
]